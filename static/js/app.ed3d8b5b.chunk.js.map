{"version":3,"sources":["constants/Colors.ts","constants/Styles.ts","components/Themed.tsx","screens/UserAuthScreens/ForgotPasswordScreen.tsx","screens/NotFoundScreen.tsx","components/buttons/Button.tsx","components/forms/TextInput.tsx","components/generated.ts","hooks/useAuth.tsx","components/forms/Form.tsx","screens/UserAuthScreens/SignInScreen.tsx","screens/UserAuthScreens/SignUpScreen.styles.tsx","screens/UserAuthScreens/SignUpScreen.tsx","screens/UserAuthScreens/WelcomeScreen.tsx","navigation/LinkingConfiguration.ts","components/buttons/AddButton.tsx","hooks/useRefresh.tsx","components/ExpenseDisplay.tsx","components/buttons/PencilButton.tsx","screens/ExpenseDetailsScreen.tsx","constants/Months.ts","components/filter/ExpenseFilter.tsx","components/buttons/FilterButton.tsx","screens/ExpensesScreen.tsx","components/budget/ChartDisplay.tsx","components/budget/FakeFlatList.tsx","components/budget/BudgetCategory.tsx","components/budget/BudgetList.tsx","screens/Budget/BudgetScreen.tsx","constants/Forms.ts","components/ColorCircle.tsx","components/forms/DropdownField.tsx","components/graphs/ByCategory.tsx","components/buttons/SliderButton.tsx","components/graphs/monthlyVsBudgetedCategory.tsx","components/reports/Card.tsx","components/reports/graphs/ExpensesByMonth.tsx","components/reports/graphs/BudgetsByMonth.tsx","screens/ReportsScreen.tsx","components/profile/SettingsBar.tsx","components/profile/UserDetail.tsx","screens/SettingsScreen.tsx","constants/CategoryColors.ts","screens/CategoryScreens/CreateCategoryScreen.tsx","components/forms/AmountInput.tsx","components/forms/DisplayField.tsx","components/forms/InputField.tsx","components/forms/ExpenseEditForm.tsx","screens/CreateExpenseScreen.tsx","screens/Budget/CreateBudgetScreen.tsx","components/buttons/TrashButton.tsx","constants/Modal.ts","screens/Budget/UpdateBudgetScreen.tsx","screens/UpdateExpenseScreen.tsx","screens/CategoryScreens/EditCategoryScreen.tsx","screens/CategoryScreens/CategorySettingsScreen.tsx","screens/MerchantScreens/UpdateMerchantScreen.tsx","screens/MerchantScreens/CreateMerchantScreen.tsx","screens/MerchantScreens/MerchantSettingsScreen.tsx","screens/ReportScreens/ExpandExpense.tsx","screens/ReportScreens/ExpandBudget.tsx","screens/ReportScreens/ExpandWheel.tsx","screens/ReportScreens/ExpandBarCat.tsx","screens/HomeScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","hooks/useColorScheme.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/pigeon.png","node_modules/moment/locale sync /^/.//.*$"],"names":["light","text","background","tint","tabIconDefault","tabIconSelected","btnBackground","btnText","uncategorizedColor","dark","styles","StyleSheet","create","container","flex","alignItems","justifyContent","title","fontSize","marginHorizontal","marginVertical","textAlign","fontWeight","alert","color","marginBottom","maxWidth","alignSelf","separator","height","width","colorTitle","marginTop","palette","list","flexDirection","backgroundColor","padding","useThemeColor","props","colorName","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","View","RequiredField","check","input","ForgotPasswordScreen","navigation","Styles","graybackground","Modal","animationType","transparent","visible","onRequestClose","goBack","ScrollView","centeredView","contentContainerStyle","Ionicons","close","name","size","onPress","viewBox","fill","clipPath","d","cx","cy","r","id","contactemail","display","borderRadius","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","link","paddingVertical","linkText","NotFoundScreen","TouchableOpacity","replace","Button","bgColor","txtColor","textColor","accessibilityLabel","disabled","TextInput","placeholderTextColor","MonthType","borderWidth","paddingHorizontal","borderColor","LoginDocument","GetUserDocument","GetCategoriesDocument","CreateUserDocument","CreateCategoryDocument","UpdateCategoryDocument","DeleteCategoryDocument","GetExpensesDocument","GetExpenseDocument","CreateExpenseDocument","UpdateExpenseDocument","DeleteExpenseDocument","GetMerchantsDocument","CreateMerchantDocument","GetBudgetsDocument","CreateBudgetDocument","CreateBudgetCategoryDocument","UpdateBudgetCategoryDocument","UpdateMerchantDocument","DeleteBudgetCategoryDocument","GetMonthBreakdownDocument","CopyBudgetDocument","GetExpensesInMonthDocument","DeleteMerchantDocument","GetMonthTotalsDocument","MerchantsAndCategoriesDocument","HomePageDataDocument","BudgetDetailsByDateDocument","useAuth","args","useState","passwordHash","setPasswordHash","nav","useNavigation","useLazyQuery","onCompleted","response","categories","__typename","exceptionName","AsyncStorage","setItem","then","navigate","catch","e","console","log","validatePasswordHash","useEffect","getItem","val","onRetrieved","redirect","variables","Form","children","onDismissKeyboard","backdrop","TouchableWithoutFeedback","Keyboard","dismiss","SafeAreaView","screen","position","top","left","SignInScreen","username","setUsername","password","setPassword","data","signIn","onError","triggerLogin","loading","error","ActivityIndicator","paddingTop","textfields","placeholder","onChangeText","value","secureTextEntry","helpLink","helpLinkText","buttonContainer","margin","helpContainer","scrollView","formContainer","codeText","marginRight","phoneContainer","textField","phoneInput","countryBtn","reqs","formField","icon","right","transform","translateY","pwordinput","paddingRight","btnContainer","SignUpScreen","fname","setFname","lname","setLname","email","setEmail","phone","setPhone","pwordConfirm","setPwordConfirm","setCheck","pwordCheck","setPwordCheck","userCheck","setUserCheck","pwordRules","setPwordRules","emailCheck","setEmailCheck","phoneCheck","setPhoneCheck","hidePword","setHidePword","lengthCheck","setLengthCheck","lettersCheck","setLettersCheck","numberCheck","setNumberCheck","specialCheck","setSpecialCheck","minCheck","setMinCheck","maxCheck","setMaxCheck","formatCheck","setFormatCheck","emailRegex","setEmailRegex","minPhone","setMinPhone","useMutation","Alert","message","setData","createUser","length","test","a","async","signUp","errorMessage","user","substring","onBlur","keyboardType","onFocus","FontAwesome","pword","containerStyle","textContainerStyle","countryPickerButtonStyle","codeTextStyle","disableArrowIcon","defaultCode","textInputProps","WelcomeScreen","pigeon","tagline","Image","image","source","require","registerCaption","linking","prefixes","Linking","config","screens","Welcome","SignIn","SignUp","Root","Home","Expenses","Reports","Budget","Settings","CategorySettings","MerchantSettings","CreateCategory","EditCategory","ExpenseDetails","CreateExpense","UpdateExpense","ForgotPasswordModal","CreateMerchant","CreateBudget","EditBudget","UpdateMerchant","ExpandExpenses","ExpandBudget","ExpandWheel","ExpandBarCat","NotFound","AddButton","dynamicStyles","activeOpacity","AntDesign","useRefresh","onRefresh","deps","screenIsFocused","useIsFocused","concat","ExpenseDisplay","amount","merchant","useMemo","coloredBar","TouchableHighlight","staticStyles","underlayColor","contentContainer","content","itemName","toFixed","undefined","merchantContainer","borderTopWidth","PencilButton","Feather","formatDate","date","split","year","month","dayOfMonth","parseInt","ExpenseDetailsScreen","expenseId","route","params","getExpense","refetch","setOptions","headerRight","expense","desc","description","category","expenseTypename","colHeader","amountHeading","catAndAmount","catColorAndName","catColor","colourHex","catName","Number","dateContainer","merchantLabel","descContainer","descLabel","opacity","MONTHS_ORDER","RadioButton","selected","marginLeft","modalView","elevation","button","buttonOpen","buttonClose","textStyle","modalText","typeDivitor","monthContainer","ExpenseFilter","onApplyFilter","onHide","filters","setFilters","modalVisible","setModalVisible","getCategory","getMerchnat","getDate","categoryRefresh","merchnatRefresh","dateRefresh","categroyData","merchantData","dateData","handleSelect","item","group","copyArray","index","indexOf","splice","push","newFilter","JSON","parse","stringify","orderDates","yearDict","monthsTotals","byMonth","forEach","ele","Object","keys","map","toString","copyDate","handleYearPress","mIndex","selectedMonth","find","searchMon","findIndex","mon","handleMonthPress","merchants","fEle","FilterButton","renderItem","keyExtractor","ExpensesScreen","fetchPolicy","getExpenses","filterBtnContainer","processedExpenses","expenses","preProcessed","sort","ex1","ex2","processed","i","unshift","processExpenses","filter","merch","cat","ApplyFilter","noExpensesText","FlatList","maxToRenderPerBatch","addExpenseBtn","itemSeparator","flexBasis","bottom","filterButton","zIndex","ChartDisplay","planned","actualBudgeted","actualUnbudgeted","domainPadding","crossAxis","colorScale","x","y","label","datum","barWidth","FakeFlatList","ItemSeparatorComponent","itemsRender","BudgetWarning","warningRow","warningContainer","warningText","BudgetCategory","actual","onPressDots","topBorder","bottomBorder","borderBottomWidth","overBudget","nearBudget","atBudget","header","headerText","body","amntDisplayContainer","amntTitleContainer","amntTitle","amntText","iconContainer","paddingLeft","BudgetList","monthlyData","updateCallback","RowItem","applicableMonthlyData","monthBreakdown","byCategory","spent","amountSpent","HeaderButton","direction","BudgetScreen","now","moment","setMonth","setYear","currentMonthIsNotPast","addListener","getBudgets","budgetData","budgetRefetch","getMonthlyBreakdown","monthData","monthRefetch","createBudget","createBudgetCategory","copyBudget","selectedBudget","budgets","bud","previousBudget","sorted","slice","b","budget","budgetCategories","plannedAmount","reduce","previousValue","currentValue","actualAmount","calculated","budgeted","unbudgeted","monthBreakdownCat","applicableMonthBreakdownCat","months","backAMonth","prevYear","prevMonth","forwardAMonth","handleAddBudget","headerTitle","headerBackVisible","headerLeft","warningIcon","budCat","budgetCategory","budgetId","categoryId","ColorCircle","DropdownItem","itemValue","DropdownField","focused","setFocused","inputRef","useRef","scrollViewStartRef","defaultValue","setValue","cachedValue","setCachedValue","filteredData","toLowerCase","startsWith","keyboardScreenY","setKeyboardScreenY","scrollViewScreenY","setScrollViewScreenY","maxScrollViewHeight","Platform","OS","setErrorMessage","endCoordinates","screenY","removeAllListeners","required","current","focus","handleItemPress","itemId","onChange","measureInWindow","editable","ref","pointerEvents","arrowIconContainer","oldFocused","onLayout","maxHeight","disableScroll","keyboardShouldPersistTaps","nestedScrollEnabled","item1","item2","onCreateNew","labelForCreateNew","borderBottomColor","Forms","ByCategory","categoryData","onChangeCategory","setCategory","useQuery","categoriesData","filteredCategoryData","hasUncategorizedExpenses","graphContainer","padAngle","labelRadius","radius","innerRadius","labels","events","target","eventHandlers","onPressIn","mutation","onClick","callback","orientation","symbol","itemsPerRow","gutter","dropdownContainer","foundCategory","SliderButton","RenderGraph","onPressLeft","onPressRight","shortCat","amountUnplanned","amountBudgeted","amountPlanned","zero","undefY","setUndefY","setTimeout","grid","stroke","offset","labelComponent","dx","leftSliderContainer","rightSliderContainer","MonthlyVsBudgetedCategory","displayAmount","jumpAmount","budgetReferenceData","displayAmountNumber","jumpAmountNumber","inputData","curCat","curBud","sliceEnd","setSliceEnd","flexGrow","newSpot","Card","graph","onViewDetails","calcDomainEnd","ExpensesByMonth","domainEnd","setDomainEnd","highestAmount","highest","slicedData","padData","incrementDomainEnd","useCallback","oldDomainEnd","decrementDomainEnd","barRatio","BudgetsByMonth","highestBudget","unplanned","totalSpent","ReportsScreen","Date","getMonth","getFullYear","getMonthTotals","getBudgetDetailsByDate","monthlyBreakdownRefetch","budgetsRefetch","budgetDetailsRefetch","monthlyBreakdownData","monthTotalsData","budgetsData","amountSpentPlanned","amountSpentUnplanned","foundBudget","foundPair","SettingsBar","subtitle","borderTopColor","titlesContiainer","Entypo","UserDetail","userDetailsRow","userDetailsLabel","userDetailsValue","SettingsScreen","getUser","phoneNumber","logout","multiRemove","logoutBtn","FontAwesome5","userIcon","userDetailsContainer","firstName","lastName","settingsList","colorsList","CreateCategoryScreen","setName","setColor","details","setDetails","getCategories","createCategory","canGoBack","err","categoryTaken","colorTaken","colors","titleStyles","valueToAmount","parseFloat","AmountInput","onChangeAmount","defaultAmount","onSelect","useFonts","B612Mono_700Bold","fontLoaded","dollarSignAndInput","dollarSign","newValue","maxLength","selectTextOnFocus","fontFamily","DisplayField","InputField","ExpenseEditForm","initVals","onSubmit","getMerchantsAndCategories","createMerchant","setAmount","merchantId","setMerchantId","setCategoryId","calendarShown","setCalendarShown","toISOString","setDate","setDesc","day","amountError","setAmountError","defaultCategory","setDefaultCategory","newAmount","calendarContainer","CalendarPicker","onDateChange","type","initialDate","toDate","selectedStartDate","detailsRow","categoriesRow","translateX","CreateExpenseScreen","submit","vals","epochDate","unix","createExpense","CreateBudgetScreen","filterCat","other","noErrors","handleBudgetCreation","amountInput","row","fieldContainer","fieldLabelAndInputContainer","fieldLabel","fieldInput","detailsIconAndLabel","detailsIcon","rotateZ","rotateY","detailsInput","listItem","TrashButton","modalStyle","buttonView","warning","UpdateBudgetScreen","confirmDelete","setConfirmDelete","updateBudgetCategory","updateBudget","deleteBudgetCategory","deleteBudget","_","UpdateExpenseScreen","deleteExpense","updateExpense","EditCategoryScreen","newName","setNewName","newColor","setNewColor","newDetails","setNewDetails","updateCategory","deleteCategory","CategoryItem","itemContainer","colorAndNameContainer","colour","MaterialIcons","CategorySettingsScreen","cat1","cat2","ListFooterComponent","addBtnContainer","UpdateMerchantScreen","getMerchants","manyMerchantsData","newDescription","setNewDescription","newCategory","setNewCategory","deleteMerchant","defaultCategoryId","updateMerchant","merchantLoading","DeleteButton","merchantTaken","mer","merchantError","deleteButton","React","merchantName","setMerchantName","disabledButton","MerchantItem","MerchantSettingsScreen","merch1","merch2","ExpandExpense","getTopMerchant","percent","setPercent","moreOrLess","setMoreOrLess","moreThanOne","setMoreThanOne","merchantExist","setMerchantExist","topMerchant","setTopMerchant","monthBreakdownLoading","monthBreakdownData","previousMonthIndex","currentMonthSpent","previousMonthSpent","delta","division","Math","abs","alignContent","flexWrap","deltaInSpending","deltaInBudget","budgetDelta","changeFactor","indexOfCurrentMonth","currentMonth","lastMonth","spendingInsight","textContainer","categoryExpense","setCategoryExpense","selectedCategory","setSelectedCategory","categoryName","categoryIndex","currentCategorySpent","retrieveAmountSpent","percentOfTotal","insightsContainer","charAt","max","min","currentBudget","overBudgetedCategories","curBudget","totalCategories","ALERT_COLOR","over","under","HomeScreen","expanded","setExpanded","setExpenses","monthName","upcoming","toJSON","getAvg","avgData","avgRefetch","expensesInMonth","tempExpenses","localeCompare","August","getHomePageData","homePageData","homePageDataRefetch","homeQueryData","overBudgetCategories","monthTotal","budgetDetailsByDate","totalActual","amountActual","averageData","yearAvg","averageSpent","applicableMonthData","greeting","alertText","summary","halfSummary","dateText","summaryDataContainer","summaryData","summaryText","textAlignVertical","noExpense","addBtn","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","options","headerShown","Group","screenOptions","headerShadowVisible","headerTitleAlign","headerTitleStyle","ExpandExpenseScreen","ExpandBudgetScreen","ExpandWheelScreen","ExpandBarCatScreen","presentation","Tab","createBottomTabNavigator","tabBarVisible","setTabBarVisible","initialRouteName","tabBarLabelStyle","tabBarStyle","tabBarAllowFontScaling","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarIcon","LogBox","ignoreLogs","ignoreAllLogs","client","ApolloClient","uri","cache","InMemoryCache","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","ApolloProvider","StatusBar","load","AppRegistry","registerComponent","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve"],"mappings":"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","file":"static/js/app.ed3d8b5b.chunk.js","sourcesContent":["const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    btnBackground: 'hsl(213,10%,18%)',\n    btnText: 'hsl(0,0%,100%)',\n    uncategorizedColor: 'hsl(240,20%,80%)',\n  },\n  dark: { // unused in this app\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    btnBackground: 'hsl(0,50%,50%)',\n    btnText: 'hsl(0,0%,0%)', // TODO: test dark mode btn color scheme\n    uncategorizedColor: 'hsl(240,20%,80$)', // haven't checked for dark mode\n  },\n};\n","import { StyleSheet } from \"react-native\";\nimport Colors from \"./Colors\";\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 32,\n        // Not a system font on Android\n        // fontFamily: 'Gill Sans MT',\n        marginHorizontal: 25,\n        marginVertical: '5%',\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    alert: {\n        color: 'red',\n        marginHorizontal: 5,\n        marginBottom: 8,\n        maxWidth: 250,\n        alignSelf: 'center',\n        textAlign: 'center'\n    },\n    separator: {\n        marginVertical: 30,\n        height: 1,\n        width: '80%',\n    },\n    colorTitle: {\n        textAlign: 'center',\n        fontSize: 20,\n        marginTop: 25\n    },\n    palette: {\n        width: '75%',\n        marginBottom: 25\n    }, \n    list: {\n        flexDirection: \"row\",\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%',\n        height: 50,\n        backgroundColor: 'white',\n        marginVertical: 5,\n        padding: 10\n    }\n});\n\nexport default styles;\n\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport styles from '../constants/Styles';\n\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function RequiredField({ check, input }: { check: boolean, input: string }) {\n  return (\n    (!check || input) ? (\n      <></>\n    ) : (\n      <Text style={styles.alert}>this field is required</Text>\n    ))\n}\n","import React from 'react';\r\nimport { StyleSheet, Modal, ScrollView } from 'react-native';\r\nimport { Text, View } from '../../components/Themed';\r\nimport { RootStackScreenProps } from '../../types';\r\nimport Styles from '../../constants/Styles';\r\nimport { Svg, G, Circle, Rect, Path, ClipPath, Defs } from 'react-native-svg';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nexport default function ForgotPasswordScreen({ navigation }: RootStackScreenProps<'Welcome'>) {\r\n  const contactemail = 'admin@admin.com'\r\n\r\n  return (\r\n    <View style={[Styles.container, styles.graybackground]}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={true}\r\n        onRequestClose={() => { navigation.goBack() }}\r\n      >\r\n        <ScrollView style={styles.centeredView} contentContainerStyle={{ alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <Ionicons style={styles.close} name='close' size={32} color='gray' onPress={() => navigation.goBack()} />\r\n          <Text style={{ fontSize: 30, width: 250, fontWeight: 'bold', textAlign: 'center' }}>We apologize for the inconvenience</Text>\r\n          <Svg width=\"205\" height=\"171\" viewBox=\"0 0 205 171\" fill=\"none\">\r\n            <G clipPath=\"url(#clip0_61_75)\">\r\n              <Path d=\"M26.5205 105.266C34.1031 90.4073 46.8399 78.722 62.4178 72.3325C77.9958 65.943 95.3816 65.2729 111.418 70.4441C127.454 75.6152 141.078 86.2846 149.814 100.515C158.55 114.745 161.82 131.591 159.029 147.995L146.445 145.915C148.731 132.48 146.053 118.682 138.898 107.027C131.743 95.373 120.585 86.6346 107.451 82.3994C94.3171 78.1641 80.0779 78.7129 67.3194 83.946C54.5609 89.1791 44.1292 98.7495 37.919 110.919L26.5205 105.266Z\" fill=\"#292D32\" />\r\n              <Circle cx=\"79\" cy=\"28\" r=\"9\" fill=\"#292D32\" />\r\n              <Circle cx=\"127\" cy=\"28\" r=\"9\" fill=\"#292D32\" />\r\n            </G>\r\n            <Defs>\r\n              <ClipPath id=\"clip0_61_75\">\r\n                <Rect width=\"205\" height=\"171\" fill=\"white\" />\r\n              </ClipPath>\r\n            </Defs>\r\n          </Svg>\r\n          <Text style={styles.contactemail}>Please contact <Text style={{ fontWeight: 'bold' }}>{contactemail}</Text> for assistance with resetting your password.</Text>\r\n        </ScrollView>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  graybackground: {\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n  },\r\n  contactemail: {\r\n    fontSize: 20,\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    width: '80%',\r\n  },\r\n  close: {\r\n    display: \"flex\",\r\n    alignSelf: 'flex-start',\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    marginVertical: '20%',\r\n    marginHorizontal: '10%',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    paddingBottom: 50,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  }\r\n});\r\n","import { StyleSheet, TouchableOpacity } from 'react-native';\nimport Styles from '../constants/Styles'\nimport { Text, View } from '../components/Themed';\nimport { RootStackScreenProps } from '../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={Styles.container}>\n      <Text style={Styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Welcome')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StyleSheet, Touchable, TouchableOpacity, GestureResponderEvent } from 'react-native';\r\nimport { View, Text } from '../Themed';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\n\r\ntype ButtonProps = {\r\n    text: string;\r\n    backgroundColor?: string;\r\n    textColor?: string;\r\n    onPress?: ((event: GestureResponderEvent) => void) | undefined;\r\n    accessibilityLabel?: string;\r\n    disabled?: boolean | undefined;\r\n    size?: \"full\" | \"half\"\r\n};\r\n\r\nexport default function Button(props: ButtonProps) {\r\n    const theme = useColorScheme();\r\n    const width = props.size === \"half\" ? 120 : 250;\r\n    const bgColor = props.backgroundColor || Colors[theme].btnBackground;\r\n    const txtColor = props.textColor || Colors[theme].btnText;\r\n\r\n    return (\r\n        <TouchableOpacity onPress={props.onPress} accessibilityLabel={props.accessibilityLabel} disabled={props.disabled}>\r\n            <View style={[styles.container, { backgroundColor: bgColor, width: width }]}>\r\n                <Text style={[styles.text, { color: txtColor }]}>{props.text}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 50,\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    text: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n","import { TextInput as DefaultTextInput, TextInputProps, StyleSheet } from 'react-native';\r\n\r\nexport default function TextInput(props: TextInputProps) {\r\n    const { style, ...otherProps } = props;\r\n\r\n    return (\r\n        <DefaultTextInput placeholderTextColor=\"grey\" style={[style, styles.input]} {...otherProps}></DefaultTextInput>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: 250,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        paddingHorizontal: 15,\r\n        borderColor: 'black',\r\n        borderRadius: 7,\r\n    }\r\n});\r\n","import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Budget = {\n  __typename?: 'Budget';\n  budgetCategories?: Maybe<Array<BudgetCategory>>;\n  id: Scalars['Int'];\n  month: MonthType;\n  user: User;\n  year: Scalars['Int'];\n};\n\nexport type BudgetCategoriesPayload = BudgetCategoriesSuccess | FailurePayload;\n\nexport type BudgetCategoriesSuccess = {\n  __typename?: 'BudgetCategoriesSuccess';\n  budgetCategories: Array<BudgetCategory>;\n};\n\nexport type BudgetCategory = {\n  __typename?: 'BudgetCategory';\n  amount: Scalars['Float'];\n  budget: Budget;\n  category: Category;\n  id: Scalars['Int'];\n  user: User;\n};\n\nexport type BudgetCategoryDetails = {\n  __typename?: 'BudgetCategoryDetails';\n  amountActual: Scalars['Float'];\n  amountBudgeted: Scalars['Float'];\n  category: Category;\n};\n\nexport type BudgetCategoryPayload = BudgetCategorySuccess | FailurePayload;\n\nexport type BudgetCategorySuccess = {\n  __typename?: 'BudgetCategorySuccess';\n  budgetCategory: BudgetCategory;\n};\n\nexport type BudgetDetails = {\n  __typename?: 'BudgetDetails';\n  budget: Budget;\n  byCategory: Array<BudgetCategoryDetails>;\n  totalActual: Scalars['Float'];\n  totalBudgeted: Scalars['Float'];\n  totalUnplanned: Scalars['Float'];\n};\n\nexport type BudgetDetailsPayload = BudgetDetails | FailurePayload;\n\nexport type BudgetPayload = BudgetSuccess | FailurePayload;\n\nexport type BudgetSuccess = {\n  __typename?: 'BudgetSuccess';\n  budget: Budget;\n};\n\nexport type BudgetsPayload = BudgetsSuccess | FailurePayload;\n\nexport type BudgetsSuccess = {\n  __typename?: 'BudgetsSuccess';\n  budgets: Array<Budget>;\n};\n\nexport type CategoriesPayload = CategoriesSuccess | FailurePayload;\n\nexport type CategoriesSuccess = {\n  __typename?: 'CategoriesSuccess';\n  categories: Array<Category>;\n};\n\nexport type Category = {\n  __typename?: 'Category';\n  colourHex: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  expenses?: Maybe<Array<Expense>>;\n  id: Scalars['Int'];\n  merchants?: Maybe<Array<Merchant>>;\n  name: Scalars['String'];\n};\n\nexport type CategoryPayload = CategorySuccess | FailurePayload;\n\nexport type CategorySuccess = {\n  __typename?: 'CategorySuccess';\n  category: Category;\n};\n\nexport type CreateUserPayload = CreateUserSuccess | FailurePayload;\n\nexport type CreateUserSuccess = {\n  __typename?: 'CreateUserSuccess';\n  passwordHash: Scalars['String'];\n  user: User;\n};\n\nexport type DeleteCategoryPayload = DeleteSuccess | FailurePayload;\n\nexport type DeleteMerchantPayload = DeleteSuccess | FailurePayload;\n\nexport type DeletePayload = DeleteSuccess | FailurePayload;\n\nexport type DeleteSuccess = {\n  __typename?: 'DeleteSuccess';\n  successMessage?: Maybe<Scalars['String']>;\n};\n\nexport type DeleteUserPayload = DeleteSuccess | FailurePayload;\n\nexport type Expense = {\n  __typename?: 'Expense';\n  amount: Scalars['Float'];\n  category?: Maybe<Category>;\n  date: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  merchant?: Maybe<Merchant>;\n  user: User;\n};\n\nexport type ExpensePayload = ExpenseSuccess | FailurePayload;\n\nexport type ExpenseSuccess = {\n  __typename?: 'ExpenseSuccess';\n  expense: Expense;\n};\n\nexport type ExpensesPayload = ExpensesSuccess | FailurePayload;\n\nexport type ExpensesSuccess = {\n  __typename?: 'ExpensesSuccess';\n  expenses: Array<Expense>;\n};\n\nexport type FailurePayload = {\n  __typename?: 'FailurePayload';\n  errorMessage?: Maybe<Scalars['String']>;\n  exceptionName?: Maybe<Scalars['String']>;\n};\n\nexport type Merchant = {\n  __typename?: 'Merchant';\n  defaultCategory?: Maybe<Category>;\n  description?: Maybe<Scalars['String']>;\n  expenses?: Maybe<Array<Expense>>;\n  id: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type MerchantPayload = FailurePayload | MerchantSuccess;\n\nexport type MerchantSuccess = {\n  __typename?: 'MerchantSuccess';\n  merchant: Merchant;\n};\n\nexport type MerchantsPayload = FailurePayload | MerchantsSuccess;\n\nexport type MerchantsSuccess = {\n  __typename?: 'MerchantsSuccess';\n  merchants: Array<Merchant>;\n};\n\nexport type MonthBreakdown = {\n  __typename?: 'MonthBreakdown';\n  byCategory: Array<MonthBreakdownCategory>;\n  byMerchant: Array<MonthBreakdownMerchant>;\n  month: MonthType;\n  topCategory?: Maybe<MonthBreakdownCategory>;\n  topMerchant?: Maybe<MonthBreakdownMerchant>;\n  totalSpent: Scalars['Float'];\n  year: Scalars['Int'];\n};\n\nexport type MonthBreakdownCategory = {\n  __typename?: 'MonthBreakdownCategory';\n  amountSpent: Scalars['Float'];\n  category?: Maybe<Category>;\n};\n\nexport type MonthBreakdownMerchant = {\n  __typename?: 'MonthBreakdownMerchant';\n  amountSpent: Scalars['Float'];\n  merchant?: Maybe<Merchant>;\n};\n\nexport type MonthBreakdownPayload = FailurePayload | MonthBreakdown;\n\nexport enum MonthType {\n  April = 'APRIL',\n  August = 'AUGUST',\n  December = 'DECEMBER',\n  February = 'FEBRUARY',\n  January = 'JANUARY',\n  July = 'JULY',\n  June = 'JUNE',\n  March = 'MARCH',\n  May = 'MAY',\n  November = 'NOVEMBER',\n  October = 'OCTOBER',\n  September = 'SEPTEMBER'\n}\n\nexport type MonthsTotals = {\n  __typename?: 'MonthsTotals';\n  averageSpent: Scalars['Float'];\n  byMonth: Array<MonthsTotalsItem>;\n};\n\nexport type MonthsTotalsItem = {\n  __typename?: 'MonthsTotalsItem';\n  amountBudgeted: Scalars['Float'];\n  amountSpent: Scalars['Float'];\n  amountSpentPlanned: Scalars['Float'];\n  amountSpentUnplanned: Scalars['Float'];\n  month: MonthType;\n  year: Scalars['Int'];\n};\n\nexport type MonthsTotalsPayload = FailurePayload | MonthsTotals;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  copyBudget: BudgetPayload;\n  createBudget: BudgetPayload;\n  createBudgetCategory: BudgetCategoryPayload;\n  createCategory: CategoryPayload;\n  createExpense: ExpensePayload;\n  createMerchant: MerchantPayload;\n  deleteBudget: DeletePayload;\n  deleteBudgetCategory: DeletePayload;\n  deleteCategory: DeleteCategoryPayload;\n  deleteExpense: DeletePayload;\n  deleteMerchant: DeleteMerchantPayload;\n  deleteUser: DeleteUserPayload;\n  signUp: CreateUserPayload;\n  updateBudgetCategory: BudgetCategoryPayload;\n  updateCategory: CategoryPayload;\n  updateExpense: ExpensePayload;\n  updateMerchant: MerchantPayload;\n};\n\n\nexport type MutationCopyBudgetArgs = {\n  id: Scalars['Int'];\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type MutationCreateBudgetArgs = {\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type MutationCreateBudgetCategoryArgs = {\n  amount: Scalars['Float'];\n  budgetId: Scalars['Int'];\n  categoryId: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationCreateCategoryArgs = {\n  colourHex: Scalars['String'];\n  description?: InputMaybe<Scalars['String']>;\n  name: Scalars['String'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationCreateExpenseArgs = {\n  amount: Scalars['Float'];\n  categoryId?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  epochDate: Scalars['Int'];\n  merchantId?: InputMaybe<Scalars['Int']>;\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationCreateMerchantArgs = {\n  defaultCategoryId?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  name: Scalars['String'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteBudgetArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteBudgetCategoryArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteCategoryArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteExpenseArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteMerchantArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationDeleteUserArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationSignUpArgs = {\n  email: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  password: Scalars['String'];\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  username: Scalars['String'];\n};\n\n\nexport type MutationUpdateBudgetCategoryArgs = {\n  amount: Scalars['Float'];\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationUpdateCategoryArgs = {\n  colourHex: Scalars['String'];\n  description?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  name: Scalars['String'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationUpdateExpenseArgs = {\n  amount: Scalars['Float'];\n  categoryId?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  epochDate: Scalars['Int'];\n  id: Scalars['Int'];\n  merchantId?: InputMaybe<Scalars['Int']>;\n  passwordHash: Scalars['String'];\n};\n\n\nexport type MutationUpdateMerchantArgs = {\n  defaultCategoryId?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  name: Scalars['String'];\n  passwordHash: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  budget: BudgetPayload;\n  budgetByDate: BudgetPayload;\n  budgetCategories: BudgetCategoriesPayload;\n  budgetCategory: BudgetCategoryPayload;\n  budgetDetails: BudgetDetailsPayload;\n  budgetDetailsByDate: BudgetDetailsPayload;\n  budgets: BudgetsPayload;\n  categories: CategoriesPayload;\n  category: CategoryPayload;\n  expense: ExpensePayload;\n  expenses: ExpensesPayload;\n  expensesInMonth: ExpensesPayload;\n  greeting: Scalars['String'];\n  merchant: MerchantPayload;\n  merchants: MerchantsPayload;\n  monthBreakdown: MonthBreakdownPayload;\n  monthsTotals: MonthsTotalsPayload;\n  signIn: SignInPayload;\n  user: UserPayload;\n  userTest?: Maybe<User>;\n};\n\n\nexport type QueryBudgetArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryBudgetByDateArgs = {\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type QueryBudgetCategoriesArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryBudgetCategoryArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryBudgetDetailsArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryBudgetDetailsByDateArgs = {\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type QueryBudgetsArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryCategoriesArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryCategoryArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryExpenseArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryExpensesArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryExpensesInMonthArgs = {\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type QueryMerchantArgs = {\n  id: Scalars['Int'];\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryMerchantsArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryMonthBreakdownArgs = {\n  month: MonthType;\n  passwordHash: Scalars['String'];\n  year: Scalars['Int'];\n};\n\n\nexport type QueryMonthsTotalsArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QuerySignInArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type QueryUserArgs = {\n  passwordHash: Scalars['String'];\n};\n\n\nexport type QueryUserTestArgs = {\n  username: Scalars['String'];\n};\n\nexport type SignInPayload = FailurePayload | SignInSuccess;\n\nexport type SignInSuccess = {\n  __typename?: 'SignInSuccess';\n  passwordHash: Scalars['String'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  budgetCategories?: Maybe<Array<BudgetCategory>>;\n  budgets?: Maybe<Array<Budget>>;\n  categories?: Maybe<Array<Category>>;\n  email: Scalars['String'];\n  expenses?: Maybe<Array<Expense>>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  merchants?: Maybe<Array<Merchant>>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  username: Scalars['String'];\n};\n\nexport type UserPayload = FailurePayload | User;\n\nexport type LoginQueryVariables = Exact<{\n  username: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginQuery = { __typename?: 'Query', signIn: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'SignInSuccess', passwordHash: string } };\n\nexport type GetCategoryQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type GetCategoryQuery = { __typename?: 'Query', category: { __typename: 'CategorySuccess', category: { __typename?: 'Category', id: number, name: string, colourHex: string, description?: string | null } } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type GetGreetingsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetGreetingsQuery = { __typename?: 'Query', greeting: string };\n\nexport type GetUserQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetUserQuery = { __typename?: 'Query', user: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'User', lastName: string, firstName: string, username: string, email: string, phoneNumber?: string | null } };\n\nexport type GetCategoriesQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetCategoriesQuery = { __typename?: 'Query', categories: { __typename: 'CategoriesSuccess', categories: Array<{ __typename?: 'Category', id: number, name: string, colourHex: string, description?: string | null }> } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type CreateUserMutationVariables = Exact<{\n  fname: Scalars['String'];\n  lname: Scalars['String'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type CreateUserMutation = { __typename?: 'Mutation', signUp: { __typename: 'CreateUserSuccess', passwordHash: string } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type CreateCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  name: Scalars['String'];\n  color: Scalars['String'];\n  details?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type CreateCategoryMutation = { __typename?: 'Mutation', createCategory: { __typename: 'CategorySuccess', category: { __typename?: 'Category', id: number } } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type UpdateCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n  name: Scalars['String'];\n  color: Scalars['String'];\n  details?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type UpdateCategoryMutation = { __typename?: 'Mutation', updateCategory: { __typename: 'CategorySuccess', category: { __typename?: 'Category', id: number } } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type DeleteCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteCategoryMutation = { __typename?: 'Mutation', deleteCategory: { __typename?: 'DeleteSuccess', successMessage?: string | null } | { __typename?: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type GetExpensesQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetExpensesQuery = { __typename?: 'Query', expenses: { __typename: 'ExpensesSuccess', expenses: Array<{ __typename?: 'Expense', amount: number, id: number, date: string, description?: string | null, category?: { __typename?: 'Category', colourHex: string, name: string } | null, merchant?: { __typename?: 'Merchant', name: string } | null }> } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type GetExpenseQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  expenseId: Scalars['Int'];\n}>;\n\n\nexport type GetExpenseQuery = { __typename?: 'Query', expense: { __typename?: 'ExpenseSuccess', expense: { __typename?: 'Expense', id: number, amount: number, description?: string | null, date: string, category?: { __typename?: 'Category', id: number, name: string, colourHex: string } | null, merchant?: { __typename?: 'Merchant', id: number, name: string } | null } } | { __typename?: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type CreateExpenseMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  amount: Scalars['Float'];\n  epochDate: Scalars['Int'];\n  merchantId?: InputMaybe<Scalars['Int']>;\n  categoryId?: InputMaybe<Scalars['Int']>;\n  desc?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type CreateExpenseMutation = { __typename?: 'Mutation', createExpense: { __typename?: 'ExpenseSuccess', expense: { __typename?: 'Expense', id: number } } | { __typename?: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type UpdateExpenseMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n  amount: Scalars['Float'];\n  epochDate: Scalars['Int'];\n  merchantId?: InputMaybe<Scalars['Int']>;\n  categoryId?: InputMaybe<Scalars['Int']>;\n  desc?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type UpdateExpenseMutation = { __typename?: 'Mutation', updateExpense: { __typename?: 'ExpenseSuccess', expense: { __typename?: 'Expense', id: number } } | { __typename?: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type DeleteExpenseMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteExpenseMutation = { __typename?: 'Mutation', deleteExpense: { __typename?: 'DeleteSuccess', successMessage?: string | null } | { __typename?: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type GetMerchantsQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetMerchantsQuery = { __typename?: 'Query', merchants: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MerchantsSuccess', merchants: Array<{ __typename?: 'Merchant', id: number, name: string, description?: string | null, defaultCategory?: { __typename?: 'Category', id: number, name: string, description?: string | null, colourHex: string } | null }> } };\n\nexport type CreateMerchantMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  name: Scalars['String'];\n  description?: InputMaybe<Scalars['String']>;\n  defaultCategoryId?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type CreateMerchantMutation = { __typename?: 'Mutation', createMerchant: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MerchantSuccess', merchant: { __typename?: 'Merchant', id: number, name: string, description?: string | null, defaultCategory?: { __typename?: 'Category', id: number, name: string, colourHex: string, description?: string | null } | null } } };\n\nexport type GetMerchantQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type GetMerchantQuery = { __typename?: 'Query', merchant: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MerchantSuccess', merchant: { __typename?: 'Merchant', id: number, name: string, description?: string | null, defaultCategory?: { __typename?: 'Category', id: number, name: string, colourHex: string, description?: string | null } | null } } };\n\nexport type GetBudgetsQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetBudgetsQuery = { __typename?: 'Query', budgets: { __typename: 'BudgetsSuccess', budgets: Array<{ __typename?: 'Budget', id: number, year: number, month: MonthType, budgetCategories?: Array<{ __typename?: 'BudgetCategory', amount: number, id: number, category: { __typename?: 'Category', id: number, name: string, colourHex: string } }> | null }> } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type CreateBudgetMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  month: MonthType;\n  year: Scalars['Int'];\n}>;\n\n\nexport type CreateBudgetMutation = { __typename?: 'Mutation', createBudget: { __typename: 'BudgetSuccess', budget: { __typename?: 'Budget', id: number, month: MonthType, year: number } } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type CreateBudgetCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  budgetId: Scalars['Int'];\n  categoryId: Scalars['Int'];\n  amount: Scalars['Float'];\n}>;\n\n\nexport type CreateBudgetCategoryMutation = { __typename?: 'Mutation', createBudgetCategory: { __typename: 'BudgetCategorySuccess', budgetCategory: { __typename?: 'BudgetCategory', id: number, amount: number, category: { __typename?: 'Category', id: number, name: string, colourHex: string }, budget: { __typename?: 'Budget', id: number, month: MonthType, year: number } } } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type UpdateBudgetCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n  amount: Scalars['Float'];\n}>;\n\n\nexport type UpdateBudgetCategoryMutation = { __typename?: 'Mutation', updateBudgetCategory: { __typename: 'BudgetCategorySuccess', budgetCategory: { __typename?: 'BudgetCategory', id: number } } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type UpdateMerchantMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n  name: Scalars['String'];\n  description?: InputMaybe<Scalars['String']>;\n  defaultCategoryId?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type UpdateMerchantMutation = { __typename?: 'Mutation', updateMerchant: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MerchantSuccess', merchant: { __typename?: 'Merchant', id: number, name: string, description?: string | null, defaultCategory?: { __typename?: 'Category', id: number, name: string, colourHex: string, description?: string | null } | null } } };\n\nexport type DeleteBudgetCategoryMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteBudgetCategoryMutation = { __typename?: 'Mutation', deleteBudgetCategory: { __typename: 'DeleteSuccess', successMessage?: string | null } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type GetMonthBreakdownQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  month: MonthType;\n  year: Scalars['Int'];\n}>;\n\n\nexport type GetMonthBreakdownQuery = { __typename?: 'Query', monthBreakdown: { __typename?: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } | { __typename?: 'MonthBreakdown', month: MonthType, year: number, totalSpent: number, byCategory: Array<{ __typename?: 'MonthBreakdownCategory', amountSpent: number, category?: { __typename?: 'Category', colourHex: string, name: string, id: number } | null }>, byMerchant: Array<{ __typename?: 'MonthBreakdownMerchant', amountSpent: number, merchant?: { __typename?: 'Merchant', id: number, name: string, description?: string | null } | null }>, topMerchant?: { __typename?: 'MonthBreakdownMerchant', amountSpent: number, merchant?: { __typename?: 'Merchant', id: number, name: string } | null } | null } };\n\nexport type CopyBudgetMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  month: MonthType;\n  year: Scalars['Int'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type CopyBudgetMutation = { __typename?: 'Mutation', copyBudget: { __typename: 'BudgetSuccess', budget: { __typename?: 'Budget', id: number } } | { __typename: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } };\n\nexport type GetExpensesInMonthQueryVariables = Exact<{\n  month: MonthType;\n  year: Scalars['Int'];\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetExpensesInMonthQuery = { __typename?: 'Query', expensesInMonth: { __typename: 'ExpensesSuccess', expenses: Array<{ __typename?: 'Expense', id: number, date: string, amount: number, description?: string | null, category?: { __typename?: 'Category', name: string, colourHex: string } | null, merchant?: { __typename?: 'Merchant', name: string } | null }> } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type DeleteMerchantMutationVariables = Exact<{\n  passwordHash: Scalars['String'];\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteMerchantMutation = { __typename?: 'Mutation', deleteMerchant: { __typename: 'DeleteSuccess', successMessage?: string | null } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type GetMonthTotalsQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type GetMonthTotalsQuery = { __typename?: 'Query', monthsTotals: { __typename?: 'FailurePayload', errorMessage?: string | null, exceptionName?: string | null } | { __typename?: 'MonthsTotals', averageSpent: number, byMonth: Array<{ __typename?: 'MonthsTotalsItem', amountBudgeted: number, amountSpent: number, amountSpentPlanned: number, amountSpentUnplanned: number, month: MonthType, year: number }> } };\n\nexport type MerchantsAndCategoriesQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n}>;\n\n\nexport type MerchantsAndCategoriesQuery = { __typename: 'Query', merchants: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MerchantsSuccess', merchants: Array<{ __typename?: 'Merchant', id: number, name: string, defaultCategory?: { __typename?: 'Category', id: number, name: string } | null }> }, categories: { __typename: 'CategoriesSuccess', categories: Array<{ __typename?: 'Category', id: number, name: string, colourHex: string }> } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\nexport type HomePageDataQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  month: MonthType;\n  year: Scalars['Int'];\n}>;\n\n\nexport type HomePageDataQuery = { __typename?: 'Query', budgetDetailsByDate: { __typename: 'BudgetDetails', totalActual: number, byCategory: Array<{ __typename?: 'BudgetCategoryDetails', amountActual: number, amountBudgeted: number, category: { __typename?: 'Category', name: string, expenses?: Array<{ __typename?: 'Expense', amount: number, date: string, id: number, category?: { __typename?: 'Category', name: string, colourHex: string, id: number } | null }> | null } }> } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null }, monthBreakdown: { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } | { __typename: 'MonthBreakdown', totalSpent: number } };\n\nexport type BudgetDetailsByDateQueryVariables = Exact<{\n  passwordHash: Scalars['String'];\n  month: MonthType;\n  year: Scalars['Int'];\n}>;\n\n\nexport type BudgetDetailsByDateQuery = { __typename?: 'Query', budgetDetailsByDate: { __typename: 'BudgetDetails', byCategory: Array<{ __typename?: 'BudgetCategoryDetails', amountBudgeted: number, amountActual: number, category: { __typename?: 'Category', name: string } }> } | { __typename: 'FailurePayload', exceptionName?: string | null, errorMessage?: string | null } };\n\n\nexport const LoginDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"login\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signIn\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"SignInSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<LoginQuery, LoginQueryVariables>;\nexport const GetCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorySuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetCategoryQuery, GetCategoryQueryVariables>;\nexport const GetGreetingsDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getGreetings\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"greeting\"}}]}}]} as unknown as DocumentNode<GetGreetingsQuery, GetGreetingsQueryVariables>;\nexport const GetUserDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"phoneNumber\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetUserQuery, GetUserQueryVariables>;\nexport const GetCategoriesDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCategories\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CategoriesSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetCategoriesQuery, GetCategoriesQueryVariables>;\nexport const CreateUserDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"fname\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"lname\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signUp\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"fname\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"lname\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"phoneNumber\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"password\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateUserSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateUserMutation, CreateUserMutationVariables>;\nexport const CreateCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"details\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"details\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorySuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateCategoryMutation, CreateCategoryMutationVariables>;\nexport const UpdateCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"details\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"details\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorySuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateCategoryMutation, UpdateCategoryMutationVariables>;\nexport const DeleteCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DeleteSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"successMessage\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<DeleteCategoryMutation, DeleteCategoryMutationVariables>;\nexport const GetExpensesDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getExpenses\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expenses\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExpensesSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expenses\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<GetExpensesQuery, GetExpensesQueryVariables>;\nexport const GetExpenseDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getExpense\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"expenseId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expense\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"expenseId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExpenseSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expense\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetExpenseQuery, GetExpenseQueryVariables>;\nexport const CreateExpenseDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createExpense\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"desc\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createExpense\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"desc\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExpenseSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expense\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateExpenseMutation, CreateExpenseMutationVariables>;\nexport const UpdateExpenseDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateExpense\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"desc\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateExpense\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"epochDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"desc\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExpenseSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expense\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateExpenseMutation, UpdateExpenseMutationVariables>;\nexport const DeleteExpenseDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteExpense\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteExpense\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DeleteSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"successMessage\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<DeleteExpenseMutation, DeleteExpenseMutationVariables>;\nexport const GetMerchantsDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getMerchants\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchants\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MerchantsSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetMerchantsQuery, GetMerchantsQueryVariables>;\nexport const CreateMerchantDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createMerchant\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createMerchant\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MerchantSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateMerchantMutation, CreateMerchantMutationVariables>;\nexport const GetMerchantDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getMerchant\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MerchantSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetMerchantQuery, GetMerchantQueryVariables>;\nexport const GetBudgetsDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getBudgets\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgets\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetsSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgets\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetCategories\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<GetBudgetsQuery, GetBudgetsQueryVariables>;\nexport const CreateBudgetDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createBudget\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createBudget\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budget\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateBudgetMutation, CreateBudgetMutationVariables>;\nexport const CreateBudgetCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createBudgetCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createBudgetCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetCategorySuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budget\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<CreateBudgetCategoryMutation, CreateBudgetCategoryMutationVariables>;\nexport const UpdateBudgetCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateBudgetCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateBudgetCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetCategorySuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateBudgetCategoryMutation, UpdateBudgetCategoryMutationVariables>;\nexport const UpdateMerchantDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateMerchant\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateMerchant\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategoryId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MerchantSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateMerchantMutation, UpdateMerchantMutationVariables>;\nexport const DeleteBudgetCategoryDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteBudgetCategory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteBudgetCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DeleteSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"successMessage\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<DeleteBudgetCategoryMutation, DeleteBudgetCategoryMutationVariables>;\nexport const GetMonthBreakdownDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getMonthBreakdown\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"monthBreakdown\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthBreakdown\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"byCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpent\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"byMerchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpent\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"topMerchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpent\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalSpent\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables>;\nexport const CopyBudgetDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"copyBudget\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"copyBudget\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budget\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<CopyBudgetMutation, CopyBudgetMutationVariables>;\nexport const GetExpensesInMonthDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getExpensesInMonth\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expensesInMonth\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExpensesSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expenses\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<GetExpensesInMonthQuery, GetExpensesInMonthQueryVariables>;\nexport const DeleteMerchantDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteMerchant\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteMerchant\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DeleteSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"successMessage\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<DeleteMerchantMutation, DeleteMerchantMutationVariables>;\nexport const GetMonthTotalsDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getMonthTotals\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"monthsTotals\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthsTotals\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"byMonth\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountBudgeted\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpent\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpentPlanned\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountSpentUnplanned\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"averageSpent\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}}]}}]}}]}}]} as unknown as DocumentNode<GetMonthTotalsQuery, GetMonthTotalsQueryVariables>;\nexport const MerchantsAndCategoriesDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantsAndCategories\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchants\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MerchantsSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CategoriesSuccess\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<MerchantsAndCategoriesQuery, MerchantsAndCategoriesQueryVariables>;\nexport const HomePageDataDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"homePageData\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetDetailsByDate\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetDetails\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalActual\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"byCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"expenses\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colourHex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountActual\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountBudgeted\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"monthBreakdown\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthBreakdown\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalSpent\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<HomePageDataQuery, HomePageDataQueryVariables>;\nexport const BudgetDetailsByDateDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetDetailsByDate\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MonthType\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"budgetDetailsByDate\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordHash\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BudgetDetails\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"byCategory\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountBudgeted\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amountActual\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FailurePayload\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exceptionName\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errorMessage\"}}]}}]}}]}}]} as unknown as DocumentNode<BudgetDetailsByDateQuery, BudgetDetailsByDateQueryVariables>;","import { useLazyQuery } from \"@apollo/client\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables } from \"../components/generated\";\r\n\r\nexport interface UseAuthArgs {\r\n    /**\r\n     * Callback which is called when passwordHash has been retrieved from\r\n     * local AsyncStorage.\r\n     */\r\n    onRetrieved?: (passwordHash: string) => void;\r\n\r\n    /**\r\n     * Perform a redirect. `ifAuthorized` will redirect to Root screen if user is\r\n     * already logged in. `ifUnauthorized` will redirect to Welcome screen if user\r\n     * is not logged in or local passwordHash is invalid.\r\n     */\r\n    redirect?: 'ifAuthorized' | 'ifUnauthorized';\r\n}\r\n\r\n/**\r\n * Use this hook when you need the locally stored password hash.\r\n */\r\nexport function useAuth(args?: UseAuthArgs): string {\r\n    const [passwordHash, setPasswordHash] = useState('');\r\n    const nav = useNavigation();\r\n    const [validatePasswordHash] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n        onCompleted: (response) => {\r\n            if (response.categories.__typename === 'FailurePayload' && response.categories.exceptionName === 'NotAuthorizedException') {\r\n                // Clear the invalid locally stored passwordHash.\r\n                AsyncStorage.setItem('passwordHash', '').then(() => {\r\n                    nav.navigate('Welcome');\r\n                }).catch((e) => {\r\n                    console.log('Error occurred while trying to clear the invalid locally stored passwordHash.');\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        AsyncStorage.getItem('passwordHash').then((val) => {\r\n            args?.onRetrieved && args.onRetrieved(val || '');\r\n            if (args?.redirect) {\r\n                switch (args.redirect) {\r\n                    case 'ifAuthorized':\r\n                        if (val) nav.navigate('Root')\r\n                        break;\r\n\r\n                    case 'ifUnauthorized':\r\n                        if (!val) {\r\n                            nav.navigate('Welcome');\r\n                        } else {\r\n                            validatePasswordHash({ variables: { passwordHash: val } });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            setPasswordHash(val || '');\r\n        }).catch((e) => {\r\n            console.log('Error retrieving passwordHash from AsyncStorage: ' + e);\r\n        });\r\n    }, []);\r\n\r\n    return passwordHash;\r\n}\r\n","import { BottomTabNavigationProp } from \"@react-navigation/bottom-tabs\";\r\nimport { CompositeNavigationProp, useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { ReactElement, useEffect, useMemo } from \"react\";\r\nimport { SafeAreaView, TouchableWithoutFeedback } from \"react-native\";\r\nimport { Keyboard, StyleSheet } from \"react-native\";\r\nimport { RootStackParamList, RootStackScreenProps, RootTabParamList } from \"../../types\";\r\nimport { View } from \"../Themed\";\r\n\r\nexport interface ScreenProps {\r\n    children?: ReactElement<any, any> | ReactElement<any, any>[];\r\n    onDismissKeyboard?: () => void;\r\n    /**\r\n     * If backdrop is enabled, to show an element on top of the backdrop give\r\n     * it the styles: `zIndex: 1` and `elevation: 1`.\r\n     */\r\n    backdrop?: boolean;\r\n}\r\n\r\nexport function Form({ children, onDismissKeyboard, backdrop }: ScreenProps) {\r\n    return (\r\n        <TouchableWithoutFeedback onPress={() => { Keyboard.dismiss(); onDismissKeyboard && onDismissKeyboard(); }}>\r\n            <SafeAreaView style={styles.screen}>\r\n                {children}\r\n                {\r\n                    backdrop &&\r\n                    <View style={styles.backdrop}></View>\r\n                }\r\n            </SafeAreaView>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    backdrop: {\r\n        backgroundColor: 'rgba(0,0,0,0.5)',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n});\r\n","import { useEffect, useState } from \"react\"\r\nimport { StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport Button from \"../../components/buttons/Button\";\r\nimport TextInput from \"../../components/forms/TextInput\";\r\nimport Colors from '../../constants/Colors';\r\nimport { Text, View } from '../../components/Themed';\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { LoginDocument, LoginQuery, LoginQueryVariables } from \"../../components/generated\";\r\nimport Styles from \"../../constants/Styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { Form } from \"../../components/forms/Form\";\r\n\r\nexport default function SignInScreen({ navigation }: RootStackScreenProps<'SignIn'>) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useAuth({ redirect: 'ifAuthorized' });\r\n\r\n    const [triggerLogin, { loading, error, data }] = useLazyQuery<LoginQuery, LoginQueryVariables>(LoginDocument, {\r\n        onCompleted: (data) => {\r\n            if (data?.signIn.__typename === 'SignInSuccess') {\r\n                AsyncStorage.setItem('passwordHash', data.signIn.__typename === 'SignInSuccess' ? data.signIn.passwordHash : '').then(() => {\r\n                    navigation.navigate('Root');\r\n                });\r\n            }\r\n        },\r\n        onError: (data) => {\r\n            // console.log(data);\r\n        }\r\n    });\r\n\r\n    const handleLogin = () => {\r\n        if (username && password) {\r\n            triggerLogin({ variables: { username, password } });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <View style={styles.screen}>\r\n                <Text style={styles.title}>Sign into your account</Text>\r\n                {!loading ? (\r\n                    data?.signIn.__typename === 'SignInSuccess' ? (\r\n                        <Text>Sign in successful</Text>\r\n                    ) : (\r\n                        <Text style={[Styles.alert, { paddingTop: 20 }]}>{data?.signIn.__typename === 'FailurePayload' && 'Invalid credentials.'}</Text>\r\n                    )) : (\r\n                    <ActivityIndicator size=\"large\" />\r\n                )}\r\n                <View style={styles.textfields}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Username\"\r\n                        onChangeText={(username) => setUsername(username)}\r\n                        value={username}\r\n                    />\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Password\"\r\n                        onChangeText={(password) => setPassword(password)}\r\n                        value={password}\r\n                        secureTextEntry={true}\r\n                    />\r\n                </View>\r\n                <TouchableOpacity onPress={() => navigation.navigate('ForgotPasswordModal')} style={styles.helpLink}>\r\n                    <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n                        Forgot Password?\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.buttonContainer}>\r\n                    <Button text=\"Sign In\" onPress={() => handleLogin()} accessibilityLabel={\"Sign In Button\"} />\r\n                </View>\r\n            </View>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        marginTop: 25,\r\n        fontSize: 36,\r\n        fontWeight: 'bold',\r\n        width: 250,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        margin: 12,\r\n    },\r\n    textfields: {\r\n        marginBottom: 0,\r\n    },\r\n    buttonContainer: {\r\n        marginTop: 80,\r\n    },\r\n    link: {\r\n        marginTop: 15,\r\n        paddingVertical: 15,\r\n    },\r\n    linkText: {\r\n        fontSize: 14,\r\n        color: '#2e78b7',\r\n    },\r\n    helpContainer: {\r\n        marginTop: 5,\r\n        marginHorizontal: 20,\r\n        alignItems: 'center',\r\n    },\r\n    helpLink: {\r\n        paddingVertical: 15,\r\n    },\r\n    helpLinkText: {\r\n        textAlign: 'center',\r\n    },\r\n});\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport const eyeIconSize = 15;\r\nexport const eyeIconMarginRight = 13;\r\n\r\n\r\nexport const styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    scrollView: {\r\n        width: '100%',\r\n    },\r\n    formContainer: {\r\n        width: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    codeText: {\r\n        marginRight: 5\r\n    },\r\n    phoneContainer: {\r\n        width: 250,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        paddingHorizontal: 15,\r\n        borderColor: 'black',\r\n        borderRadius: 7,\r\n        marginVertical: 7\r\n    },\r\n    textField: {\r\n        height: 50,\r\n        backgroundColor: 'invisible',\r\n        paddingHorizontal: 2,\r\n    },\r\n    phoneInput: {\r\n        fontSize: 14,\r\n        height: 50,\r\n        width: 170,\r\n    },\r\n    countryBtn: {\r\n        width: 30,\r\n    },\r\n    alert: {\r\n        color: 'red',\r\n        marginHorizontal: 5,\r\n        marginBottom: 8,\r\n        maxWidth: 250,\r\n        textAlign: 'center'\r\n    },\r\n    reqs: {\r\n        color: 'gray',\r\n        fontSize: 14,\r\n        marginHorizontal: 5,\r\n        marginBottom: 1,\r\n    },\r\n    formField: {\r\n        marginVertical: 7,\r\n    },\r\n    icon: {\r\n        position: 'absolute',\r\n        right: eyeIconMarginRight,\r\n        top: '50%',\r\n        transform: [{ translateY: -(eyeIconSize) / 2 }],\r\n    },\r\n    pwordinput: {\r\n        paddingRight: 20 + eyeIconMarginRight,\r\n    },\r\n    btnContainer: {\r\n        marginTop: 20,\r\n        marginBottom: 40,\r\n    },\r\n});\r\n","import { useMutation } from '@apollo/client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, Alert, ScrollView, StyleSheet } from 'react-native';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { Text, View, RequiredField } from '../../components/Themed';\r\nimport { RootStackScreenProps } from '../../types';\r\nimport TextInput from '../../components/forms/TextInput';\r\nimport Button from '../../components/buttons/Button';\r\nimport Styles from \"../../constants/Styles\";\r\nimport { styles, eyeIconSize } from './SignUpScreen.styles';\r\nimport { CreateUserMutation, CreateUserDocument } from '../../components/generated';\r\nimport PhoneInput from 'react-native-phone-number-input';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nexport default function SignUpScreen({ navigation }: RootStackScreenProps<'SignUp'>) {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [fname, setFname] = useState(\"\")\r\n    const [lname, setLname] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [pwordConfirm, setPwordConfirm] = useState(\"\")\r\n\r\n    const [check, setCheck] = useState(false)\r\n    const [pwordCheck, setPwordCheck] = useState(false)\r\n    const [userCheck, setUserCheck] = useState(false)\r\n    const [pwordRules, setPwordRules] = useState(false)\r\n    const [emailCheck, setEmailCheck] = useState(false)\r\n    const [phoneCheck, setPhoneCheck] = useState(false)\r\n    const [hidePword, setHidePword] = useState(true)\r\n\r\n    const [lengthCheck, setLengthCheck] = useState(true)\r\n    const [lettersCheck, setLettersCheck] = useState(true)\r\n    const [numberCheck, setNumberCheck] = useState(true)\r\n    const [specialCheck, setSpecialCheck] = useState(true)\r\n    const [minCheck, setMinCheck] = useState(true)\r\n    const [maxCheck, setMaxCheck] = useState(true)\r\n    const [formatCheck, setFormatCheck] = useState(true)\r\n    const [emailRegex, setEmailRegex] = useState(true)\r\n    const [minPhone, setMinPhone] = useState(true)\r\n\r\n    useAuth({ redirect: 'ifAuthorized' });\r\n\r\n    // Create user graphql query\r\n    const [createUser, { loading, data }] = useMutation<CreateUserMutation>(CreateUserDocument, {\r\n        variables: { fname, lname, username, email, phone, password },\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        }),\r\n        onCompleted: (() => setData())\r\n    })\r\n\r\n    const register = () => {\r\n        setCheck(true);\r\n        setPwordRules(true);\r\n        if (password && pwordConfirm && (pwordConfirm === password) && fname && lname && email && username) {\r\n            if (lengthCheck && lettersCheck && numberCheck && specialCheck && minCheck && formatCheck && emailRegex && minPhone) {\r\n                createUser();\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLengthCheck(password.length >= 8);\r\n        setLettersCheck(/[A-Z]/.test(password) && /[a-z]/.test(password));\r\n        setNumberCheck(/\\d/.test(password));\r\n        setSpecialCheck(/[^A-Za-z0-9]/.test(password));\r\n    }, [password]);\r\n\r\n    useEffect(() => {\r\n        setMinCheck(username.length >= 4);\r\n        setMaxCheck(username.length === 16);\r\n        setFormatCheck(/^[A-Za-z0-9_.]*$/.test(username));\r\n    }, [username]);\r\n\r\n    useEffect(() => {\r\n        setEmailRegex(/^[^/\\\\*;:,{}\\[\\]()$?]+@+[^/\\\\~`*;:,|{}\\[\\]=()%$?]+[.]{1}[^/\\\\~`*;:,|{}\\[\\]=()%$?]+$/.test(email));\r\n    }, [email])\r\n\r\n    useEffect(() => {\r\n        setMinPhone(phone.length === 0 || phone.length >= 6);\r\n    }, [phone]);\r\n\r\n    const setData = async () => {\r\n        if (data?.signUp.__typename === \"CreateUserSuccess\") {\r\n            try {\r\n                await AsyncStorage.setItem('passwordHash', data.signUp.passwordHash, () => navigation.navigate('Root'));\r\n            } catch (error) {\r\n                console.log(error);\r\n                Alert.alert(\"Something went wrong\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function PasswordRules() {\r\n        if (lettersCheck && lengthCheck && numberCheck && specialCheck) {\r\n            return (<></>);\r\n        }\r\n        return (\r\n            <View>\r\n                <Text style={styles.reqs}>Password requirements:</Text>\r\n                {lengthCheck ? (<></>) : (<Text style={styles.reqs}> - 8 characters minimum</Text>)}\r\n                {lettersCheck ? (<></>) : (<Text style={styles.reqs}> - Upper and lower case letters</Text>)}\r\n                {numberCheck ? (<></>) : (<Text style={styles.reqs}> - At least one number</Text>)}\r\n                {specialCheck ? (<></>) : (<Text style={styles.reqs}> - At least one special character</Text>)}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function CheckEmail() {\r\n        if (!emailCheck || !email || emailRegex) {\r\n            return (<></>);\r\n        } else {\r\n            return (<Text style={styles.alert}>Invalid email address</Text>)\r\n        }\r\n    }\r\n\r\n    function FormatPhone(newPhone: string) {\r\n        setPhone(newPhone.replace(/[^0-9]/g, \"\").substring(0, 15));\r\n        setPhoneCheck(false);\r\n    }\r\n\r\n    function CheckPhone() {\r\n        if (phoneCheck && phone && !minPhone) {\r\n            return (<Text style={styles.alert}>Invalid phone number</Text>);\r\n        } else if (phone.length === 15) {\r\n            return (<Text style={styles.alert}>Maximum length reached</Text>)\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n    function UsernameRules() {\r\n        if (username && userCheck && !minCheck) {\r\n            return (<Text style={styles.alert}>Username must have at least 4 characters</Text>)\r\n        } else if (maxCheck) {\r\n            return (<Text style={styles.alert}>Maximum length reached</Text>)\r\n        } else if (!formatCheck) {\r\n            return (<Text style={styles.alert}>Username can only include letters, numbers, underscore (_) and dot (.)</Text>)\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            <Text style={Styles.title}>Create a New Account</Text>\r\n            {!loading ? (\r\n                data?.signUp.__typename === \"CreateUserSuccess\" ? (\r\n                    <Text>Account created successfully! Logging you in...</Text>\r\n                ) : (\r\n                    <Text style={styles.alert}>{data?.signUp.errorMessage}</Text>\r\n                )) : (\r\n                <ActivityIndicator size='large' />\r\n            )}\r\n            <ScrollView style={styles.scrollView}>\r\n                <View style={styles.formContainer}>\r\n                    <TextInput\r\n                        style={styles.formField}\r\n                        onChangeText={(fname) => setFname(fname)}\r\n                        value={fname}\r\n                        placeholder=\"First Name*\"\r\n                    />\r\n                    <RequiredField check={check} input={fname} />\r\n                    <TextInput\r\n                        style={styles.formField}\r\n                        onChangeText={(lname) => setLname(lname)}\r\n                        value={lname}\r\n                        placeholder=\"Last Name*\"\r\n                    />\r\n                    <RequiredField check={check} input={lname} />\r\n                    <TextInput\r\n                        style={styles.formField}\r\n                        onChangeText={(user) => { setUsername(user.substring(0, 16)); setUserCheck(false) }}\r\n                        onBlur={() => setUserCheck(true)}\r\n                        value={username}\r\n                        placeholder=\"Username*\"\r\n                    />\r\n                    <RequiredField check={check} input={username} />\r\n                    <UsernameRules />\r\n                    <TextInput\r\n                        keyboardType='email-address'\r\n                        style={styles.formField}\r\n                        onChangeText={(email) => { setEmail(email.replace(/\\s+/g, \"\")); setEmailCheck(false) }}\r\n                        onBlur={() => setEmailCheck(true)}\r\n                        value={email}\r\n                        placeholder=\"Email*\"\r\n                    />\r\n                    <CheckEmail />\r\n                    <RequiredField check={check} input={email} />\r\n                    <View style={styles.formField}>\r\n                        <TextInput\r\n                            style={styles.pwordinput}\r\n                            onChangeText={(password) => setPassword(password)}\r\n                            value={password}\r\n                            onFocus={() => setPwordRules(true)}\r\n                            onBlur={() => setPwordRules(false)}\r\n                            secureTextEntry={hidePword}\r\n                            placeholder=\"Password*\"\r\n                        />\r\n                        <FontAwesome style={styles.icon} name={hidePword ? (\"eye\") : (\"eye-slash\")} size={eyeIconSize} onPress={() => setHidePword(!hidePword)} />\r\n                    </View>\r\n                    <RequiredField check={check} input={password} />\r\n                    {pwordRules ? (<PasswordRules />) : (<></>)}\r\n                    <TextInput\r\n                        style={styles.formField}\r\n                        onChangeText={(pword) => { setPwordConfirm(pword); setPwordCheck(false) }}\r\n                        onBlur={() => setPwordCheck(true)}\r\n                        value={pwordConfirm}\r\n                        secureTextEntry={hidePword}\r\n                        placeholder=\"Confirm Password*\"\r\n                    />\r\n                    {\r\n                        (!pwordCheck || (pwordConfirm === password)) ? (\r\n                            <RequiredField check={check} input={pwordConfirm} />\r\n                        ) : (\r\n                            (<Text style={Styles.alert}>Password fields need to match</Text>)\r\n                        )\r\n                    }\r\n                    <PhoneInput\r\n                        containerStyle={styles.phoneContainer}\r\n                        textContainerStyle={styles.textField}\r\n                        countryPickerButtonStyle={styles.countryBtn}\r\n                        codeTextStyle={styles.codeText}\r\n                        disableArrowIcon={true}\r\n                        defaultCode='CA'\r\n                        textInputProps={{ onChangeText: (phone) => { FormatPhone(phone); setPhoneCheck(false) }, onBlur: () => setPhoneCheck(true), value: phone, style: styles.phoneInput }}\r\n                        placeholder=\"Phone Number (optional)\"\r\n                    />\r\n                    <CheckPhone />\r\n                    <View style={styles.btnContainer}>\r\n                        <Button\r\n                            onPress={() => register()}\r\n                            text='Sign Up'\r\n                            accessibilityLabel='Sign Up Button'\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScrollView >\r\n        </View >\r\n    );\r\n}\r\n","import { GestureResponderEvent, StyleSheet, Image } from 'react-native';\r\n\r\nimport { Text, View } from '../../components/Themed';\r\nimport Button from '../../components/buttons/Button';\r\nimport React from 'react';\r\nimport { RootStackScreenProps } from '../../types';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\n\r\nexport default function WelcomeScreen({ navigation }: RootStackScreenProps<'Welcome'>) {\r\n    useAuth({ redirect: 'ifAuthorized' });\r\n\r\n    function onPressSignIn() {\r\n        navigation.navigate('SignIn');\r\n    }\r\n\r\n    function onPressSignUp() {\r\n        navigation.navigate('SignUp');\r\n    }\r\n\r\n    return (\r\n        <View style={style.screen}>\r\n            <Text style={style.title}>Welcome to</Text>\r\n            <Text style={style.pigeon}>Pigeon</Text>\r\n            <Text style={style.tagline}>Don't let your money fly away!</Text>\r\n            <Image style={style.image} source={require('../../assets/images/pigeon.png')}></Image>\r\n            <Button text=\"Sign in\" onPress={onPressSignIn} accessibilityLabel={'Sign In Page'}></Button>\r\n            <Text style={style.registerCaption}>Don't have an account?</Text>\r\n            <Button text=\"Create an account\" onPress={onPressSignUp} accessibilityLabel={'Sign Up Page'}></Button>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        marginHorizontal: 25,\r\n        marginTop: 10,\r\n        textAlign: 'center',\r\n    },\r\n    pigeon: {\r\n        fontSize: 32,\r\n        marginHorizontal: 25,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    tagline: {\r\n        fontSize: 18,\r\n        marginTop: 12,\r\n        marginHorizontal: 25,\r\n        textAlign: 'center',\r\n        fontWeight: '300',\r\n    },\r\n    image: {\r\n        height: 150,\r\n        width: 200,\r\n        marginVertical: 80\r\n    },\r\n    registerCaption: {\r\n        fontWeight: 'bold',\r\n        marginTop: 30,\r\n    },\r\n});\r\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n    prefixes: [Linking.createURL('/')],\n    config: {\n        screens: {\n            Welcome: '',\n            SignIn: 'login',\n            SignUp: 'register',\n            Root: {\n                screens: {\n                    Home: 'home',\n                    Expenses: 'expenses-list',\n                    Reports: 'reports',\n                    Budget: 'budget',\n                    Settings: 'settings',\n                }\n            },\n            CategorySettings: 'category-settings',\n            MerchantSettings: 'merchant-settings',\n            CreateCategory: 'create-category',\n            EditCategory: 'update-category',\n            ExpenseDetails: 'expense-details',\n            CreateExpense: 'create-expense',\n            UpdateExpense: 'update-expense',\n            ForgotPasswordModal: 'forgot-password',\n            CreateMerchant: 'create-merchant',\n            CreateBudget: 'create-budget',\n            EditBudget: 'update-budget',\n            UpdateMerchant: 'update-merchant',\n            ExpandExpenses: 'reports-expand-expense',\n            ExpandBudget: 'reports-expand-budget',\n            ExpandWheel: 'reports-expand-wheel',\n            ExpandBarCat: 'reports-expand-bar-cat',\n            NotFound: '*',\n        },\n    },\n};\n\nexport default linking;\n","import { StyleSheet, Touchable, TouchableOpacity, GestureResponderEvent, StyleProp, ViewStyle } from 'react-native';\r\nimport { View, Text } from '../Themed';\r\nimport Colors from '../../constants/Colors';\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\ntype AddButtonProps = {\r\n    onPress?: ((event: GestureResponderEvent) => void) | undefined;\r\n    size: number;\r\n};\r\n\r\nexport default function AddButton(props: AddButtonProps) {\r\n    const theme = useColorScheme();\r\n    const bgColor = Colors[theme].btnBackground;\r\n    const dynamicStyles = StyleSheet.create({\r\n        container: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: bgColor,\r\n            width: props.size,\r\n            height: props.size,\r\n            borderRadius: props.size / 2\r\n        },\r\n    });\r\n\r\n    return (\r\n        <TouchableOpacity onPress={props.onPress} activeOpacity={0.85}>\r\n            <View style={dynamicStyles.container}>\r\n                <AntDesign name=\"plus\" size={props.size / 2} color=\"white\" />\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n","import { useIsFocused } from \"@react-navigation/native\";\nimport { useEffect, DependencyList } from \"react\";\n\n/**\n * Call a callback whenever user navigates to the screen containing this hook.\n * Useful to refetch data which may have changed since user was last on the same screen.\n * Eg. `useRefresh(refetch, [passwordHash])`\n * @param onRefresh Callback to call when screen is navigated to.\n * @param deps Same as deps in useEffect. Call callback again whenever a dep changes.\n */\nexport function useRefresh(onRefresh: () => void, deps?: DependencyList) {\n    const screenIsFocused = useIsFocused();\n\n    useEffect(() => {\n        if (screenIsFocused) onRefresh();\n    }, [screenIsFocused].concat(deps || []));\n}\n","import { ColorValue, TouchableHighlight, View, Text } from \"react-native\";\r\nimport { useMemo } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nexport interface ExpenseDisplayProps {\r\n    id: number;\r\n    color: ColorValue;\r\n    name: string;\r\n    amount: number;\r\n    merchant?: string;\r\n    onPress: (id: number) => void;\r\n}\r\n\r\nexport function ExpenseDisplay({ id, color, name, amount, merchant, onPress }: ExpenseDisplayProps) {\r\n    const dynamicStyles = useMemo(() => {\r\n        return StyleSheet.create({\r\n            coloredBar: {\r\n                backgroundColor: color,\r\n                width: 15,\r\n            }\r\n        });\r\n    }, [color]);\r\n\r\n    return (\r\n        <TouchableHighlight style={staticStyles.container} onPress={() => onPress(id)} underlayColor=\"rgba(0,0,0,0.2)\">\r\n            <>\r\n                <View style={dynamicStyles.coloredBar}></View>\r\n                <View style={staticStyles.contentContainer}>\r\n                    <View style={staticStyles.content}>\r\n                        <Text style={staticStyles.itemName}>{name}</Text>\r\n                        <Text style={staticStyles.amount}>${amount.toFixed(2)}</Text>\r\n                    </View>\r\n                    {\r\n                        merchant !== undefined && merchant.length > 0 &&\r\n                        <View style={staticStyles.merchantContainer}>\r\n                            <Text style={staticStyles.merchant}>{merchant}</Text>\r\n                        </View>\r\n                    }\r\n                </View>\r\n            </>\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nconst staticStyles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n    },\r\n    contentContainer: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 20,\r\n        flex: 1,\r\n        borderTopWidth: 1,\r\n        borderColor: 'rgba(0,0,0,0.1)',\r\n    },\r\n    content: {\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    itemName: {\r\n        fontWeight: 'bold',\r\n        fontSize: 22,\r\n    },\r\n    amount: {\r\n        fontSize: 22,\r\n    },\r\n    merchantContainer: {\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    merchant: {\r\n        fontSize: 16,\r\n    },\r\n});\r\n","import { ColorValue, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\nexport interface PencilButtonProps {\r\n    onPress: () => void;\r\n    color?: ColorValue;\r\n}\r\n\r\nexport function PencilButton(props: PencilButtonProps) {\r\n    return (\r\n        <TouchableHighlight style={styles.container} onPress={props.onPress}\r\n            underlayColor=\"rgba(0,0,0,0.1)\">\r\n            <Feather name=\"edit-2\" size={24} color={props.color || 'orange'} />\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: 44,\r\n        height: 44,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 22,\r\n    },\r\n});\r\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Category, GetExpenseDocument, GetExpenseQuery, GetExpenseQueryVariables } from \"../components/generated\";\r\nimport { ColorValue, TouchableOpacity } from \"react-native\"\r\nimport Colors from \"../constants/Colors\";\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport { RootStackScreenProps } from \"../types\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { useRefresh } from \"../hooks/useRefresh\";\r\nimport { PencilButton } from \"../components/buttons/PencilButton\";\r\n\r\nexport function formatDate(date: string | null | undefined): string {\r\n    if (!date) {\r\n        return 'undefined';\r\n    }\r\n    const [year, month, dayOfMonth] = date.split(' ')[0].split('-');\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    return `${months[parseInt(month) - 1]} ${dayOfMonth}, ${year}`;\r\n}\r\n\r\nfunction formatAmount(amount: number | null | undefined): string {\r\n    if (!amount) {\r\n        return '0.00';\r\n    }\r\n    return Number(amount).toFixed(2);\r\n}\r\n\r\nexport default function ExpenseDetailsScreen({ navigation, route }: RootStackScreenProps<'ExpenseDetails'>) {\r\n    const { expenseId } = route.params;\r\n    const [getExpense, { data, refetch }] = useLazyQuery<GetExpenseQuery, GetExpenseQueryVariables>(GetExpenseDocument);\r\n    const passwordHash = useAuth({\r\n        onRetrieved: ((passwordHash) => getExpense({ variables: { passwordHash, expenseId } })),\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => refetch({ passwordHash, expenseId }), [expenseId]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            navigation.setOptions({\r\n                headerRight: () =>\r\n                    <PencilButton onPress={() =>\r\n                        navigation.navigate('UpdateExpense',\r\n                            data.expense.__typename === 'ExpenseSuccess' ? {\r\n                                id: data.expense.expense.id,\r\n                                amount: data.expense.expense.amount,\r\n                                date: data.expense.expense.date,\r\n                                desc: data.expense.expense.description || '',\r\n                                merchant: { id: data.expense.expense.merchant?.id, name: data.expense.expense.merchant?.name },\r\n                                category: { id: data.expense.expense.category?.id, name: data.expense.expense.category?.name },\r\n                            } : undefined\r\n                        )}\r\n                    />\r\n            })\r\n        };\r\n    }, [data]);\r\n\r\n    const expenseTypename = data?.expense.__typename;\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            {\r\n                expenseTypename === \"ExpenseSuccess\" ?\r\n                    <View>\r\n                        <View style={styles.colHeader}>\r\n                            <Text style={styles.amountHeading}>Amount</Text>\r\n                        </View>\r\n                        <View style={styles.catAndAmount}>\r\n                            <View style={styles.catColorAndName}>\r\n                                <View style={[styles.catColor, { backgroundColor: data?.expense.expense.category ? \"#\" + data.expense.expense.category.colourHex : Colors.light.uncategorizedColor }]}></View>\r\n                                <Text style={styles.catName}>{data?.expense.expense.category?.name ? data?.expense.expense.category?.name : \"Uncategorized\"}</Text>\r\n                            </View>\r\n                            <Text style={styles.amount}>${formatAmount(data?.expense.expense.amount)}</Text>\r\n                        </View>\r\n                        <View style={styles.dateContainer}>\r\n                            <Text style={styles.date}>{formatDate(data?.expense.expense.date)}</Text>\r\n                        </View>\r\n                        <View style={styles.separator}></View>\r\n                        <View style={styles.merchantContainer}>\r\n                            <Text style={styles.merchantLabel}>Merchant:</Text>\r\n                            <Text style={styles.merchant}>{data?.expense.expense.merchant?.name ? data.expense.expense.merchant.name : 'None'}</Text>\r\n                        </View>\r\n                        <View style={styles.separator} />\r\n                        <View style={styles.descContainer}>\r\n                            <Text style={styles.descLabel}>Details:</Text>\r\n                            <Text style={styles.desc}>{data?.expense.expense.description ? data.expense.expense.description : 'None'}</Text>\r\n                        </View>\r\n                        <View style={styles.separator}></View>\r\n                    </View>\r\n                    :\r\n                    <Text>{expenseTypename === \"FailurePayload\" ? data?.expense.exceptionName : \"\"}</Text>\r\n            }\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    colHeader: {\r\n        paddingHorizontal: 40,\r\n        alignItems: \"flex-end\",\r\n        marginTop: 30,\r\n    },\r\n    amountHeading: {\r\n        fontSize: 18,\r\n    },\r\n    catAndAmount: {\r\n        paddingHorizontal: 40,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    catColorAndName: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    catColor: {\r\n        width: 15,\r\n        height: 50,\r\n        marginRight: 10,\r\n    },\r\n    catName: {\r\n        fontWeight: \"600\",\r\n        fontSize: 18,\r\n    },\r\n    amount: {\r\n        fontWeight: \"600\",\r\n        fontSize: 18,\r\n    },\r\n    dateContainer: {\r\n        paddingHorizontal: 40,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n    },\r\n    date: {\r\n        fontWeight: \"600\",\r\n        fontSize: 18,\r\n    },\r\n    separator: {\r\n        alignSelf: \"center\",\r\n        height: 1,\r\n        width: \"80%\",\r\n        backgroundColor: '#444',\r\n        opacity: 0.2,\r\n        marginVertical: 20,\r\n    },\r\n    merchantContainer: {\r\n        flexDirection: 'row',\r\n        paddingHorizontal: 40,\r\n    },\r\n    merchantLabel: {\r\n        fontWeight: '600',\r\n        marginRight: 10,\r\n        fontSize: 18,\r\n    },\r\n    merchant: {\r\n        fontSize: 18,\r\n    },\r\n    descContainer: {\r\n        paddingHorizontal: 40,\r\n    },\r\n    descLabel: {\r\n        fontWeight: '600',\r\n        fontSize: 18,\r\n        marginBottom: 10,\r\n    },\r\n    desc: {\r\n        fontSize: 18,\r\n    },\r\n});\r\n","export const MONTHS_ORDER = [\n    \"JANUARY\",\n    \"FEBRUARY\",\n    \"MARCH\",\n    \"APRIL\",\n    \"MAY\",\n    \"JUNE\",\n    \"JULY\",\n    \"AUGUST\",\n    \"SEPTEMBER\",\n    \"OCTOBER\",\n    \"NOVEMBER\",\n    \"DECEMBER\",\n]\n\nexport const MONTH_TO_NUM_STRING = (month: string) => {\n\n    const monthIndex = MONTHS_ORDER.findIndex(monthEle => monthEle == month)\n    if (monthIndex == -1) {\n        return null\n    }\n    let monthString;\n    if (monthIndex < 10) {\n        monthString = '0' + monthIndex\n    } else {\n        monthString = monthIndex.toString()\n    }\n    return monthString\n}\n\nexport const GET_SHORT_MONTH = () => {\n    return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n}","import { useLazyQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { useMemo } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View, ImageBackground, TouchableOpacity, ScrollView } from \"react-native\";\nimport { GET_SHORT_MONTH } from \"../../constants/Months\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useRefresh } from \"../../hooks/useRefresh\";\nimport Button from \"../buttons/Button\"\nimport { GetCategoriesDocument, GetCategoriesQuery, GetMerchantsDocument, GetMerchantsQuery, GetMonthTotalsDocument, GetMonthTotalsQuery } from \"../generated\";\n\ntype Expenses = {\n    __typename?: \"Expense\" | undefined;\n    amount: number;\n    id: number;\n    date: string;\n    description?: string | null | undefined;\n    category?: {\n        __typename?: \"Category\" | undefined;\n        colourHex: string;\n        name: string;\n    } | null | undefined;\n    merchant?: {\n        __typename?: \"Merchant\" | undefined;\n        name: string;\n    } | null | undefined;\n}[];\n\nfunction ApplyFilter(expenses: Expenses, filters: filterSet): Expenses {\n\n    //merchnat filter\n    const merchnatFiltered = expenses.filter((ele) => {\n        if (filters.merchant.length == 0) {\n            return true\n        }\n        const foundIndex = filters.merchant.findIndex(merch => merch == ele.merchant?.name)\n        return foundIndex != -1\n    })\n\n    //category filter\n    const categoryFiltered = merchnatFiltered.filter((ele) => {\n        if (filters.category.length == 0) {\n            return true\n        }\n        const foundIndex = filters.category.findIndex(cat => cat == ele.category?.name)\n        return foundIndex != -1\n    })\n\n\n    //date filter\n    const dateFiltered = categoryFiltered.filter((ele) => {\n        if (Object.keys(filters.date).length == 0) {\n            return true\n        }\n        const year = ele.date.split('-')[0]\n        const month = GET_SHORT_MONTH()[parseInt(ele.date.split('-')[1]) - 1]\n        if (!(year in filters.date)) {\n            return false\n        }\n        const selectedYear = filters.date[year]\n\n        const foundIndex = selectedYear.findIndex((mon: string) => mon == month)\n        return foundIndex != -1\n    })\n\n\n    return dateFiltered\n\n}\n\nfunction RadioButton({ style, selected, text, onPress }: { style?: any, selected: boolean, text: string, onPress?: () => void }) {\n    return (\n        <TouchableOpacity onPress={onPress}>\n            <View style={{ flexDirection: 'row', marginVertical: 2 }}>\n\n                <View style={[{\n                    height: 24,\n                    width: 24,\n                    borderRadius: 12,\n                    borderWidth: 2,\n                    borderColor: '#000',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }, style]}>\n                    {\n                        selected ?\n                            <View style={{\n                                height: 12,\n                                width: 12,\n                                borderRadius: 6,\n                                backgroundColor: '#000',\n                            }} />\n                            : null\n                    }\n                </View>\n                <Text style={{ fontSize: 20, marginLeft: 10 }}>{text}</Text>\n            </View>\n        </TouchableOpacity>\n    );\n}\n\ninterface filterSet {\n    date: any,\n    category: string[],\n    merchant: string[],\n}\n\ninterface ExpenseFilterParams {\n    onApplyFilter: (item: filterSet) => void,\n    visible: boolean;\n    onHide?: () => void;\n}\n\nconst ExpenseFilter = ({ onApplyFilter, visible, onHide }: ExpenseFilterParams) => {\n\n    const [filters, setFilters] = useState<filterSet>({\n        date: {},\n        category: [],\n        merchant: [],\n    })\n    const [modalVisible, setModalVisible] = useState(visible);\n\n    useEffect(() => {\n        setModalVisible(visible);\n    }, [visible]);\n\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getCategory()\n            getMerchnat()\n            getDate()\n        },\n        redirect: 'ifUnauthorized',\n    });\n\n    useRefresh(() => {\n        categoryRefresh()\n        merchnatRefresh()\n        dateRefresh()\n    })\n\n    const [getCategory, { data: categroyData, refetch: categoryRefresh }] = useLazyQuery<GetCategoriesQuery>(GetCategoriesDocument,\n        { variables: { passwordHash } })\n    const [getMerchnat, { data: merchantData, refetch: merchnatRefresh }] = useLazyQuery<GetMerchantsQuery>(GetMerchantsDocument,\n        { variables: { passwordHash } })\n    const [getDate, { data: dateData, refetch: dateRefresh }] = useLazyQuery<GetMonthTotalsQuery>(GetMonthTotalsDocument,\n        { variables: { passwordHash } })\n\n    function handleSelect(item: string, group: 'category' | 'merchant' | 'date') {\n\n        const copyArray = [...filters[group]]\n        const index = copyArray.indexOf(item);\n        if (index > -1) { // only splice array when item is found\n            copyArray.splice(index, 1); // 2nd parameter means remove one item only\n        } else {\n            copyArray.push(item)\n        }\n\n        let newFilter = JSON.parse(JSON.stringify(filters));\n        newFilter[group] = copyArray\n        setFilters(newFilter)\n    }\n\n    function handleYearPress(year: string) {\n        const stringYear = year.toString()\n        const copyDate = JSON.parse(JSON.stringify(filters.date))\n        const previousSelected = year in filters.date\n        if (previousSelected) {\n            delete copyDate[year]\n        } else {\n            copyDate[year] = GET_SHORT_MONTH()\n        }\n        let newFilter = JSON.parse(JSON.stringify(filters));\n        newFilter.date = copyDate\n        setFilters(newFilter)\n    }\n\n    function handleMonthPress(year: string, month: string) {\n        const copyDate = JSON.parse(JSON.stringify(filters.date))\n        const index = filters.date[year].findIndex((mon: string) => mon == month)\n        if (index != -1) {\n            copyDate[year].splice(index, 1);\n            if (copyDate[year].length == 0) {\n                delete copyDate[year]\n            }\n        } else {\n            copyDate[year].push(month)\n        }\n        let newFilter = JSON.parse(JSON.stringify(filters));\n        newFilter.date = copyDate\n        setFilters(newFilter)\n    }\n\n    const orderDates = useMemo(() => {\n        let yearDict: any = {}\n        if (dateData?.monthsTotals.__typename == 'MonthsTotals') {\n            dateData.monthsTotals.byMonth.forEach(ele => {\n                if (!(ele.year in yearDict)) {\n                    yearDict[ele.year] = GET_SHORT_MONTH()\n                }\n            })\n        }\n        return yearDict\n    }, [dateData])\n\n\n\n    return (<>\n        <View style={styles.centeredView}>\n\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                    Alert.alert(\"Modal has been closed.\");\n                    setModalVisible(!modalVisible);\n                }}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                        <View style={{ width: \"100%\", flexDirection: 'row', justifyContent: 'space-between' }}>\n\n                            <Text style={styles.modalText}>Filters</Text>\n                            <View>\n\n                                {/* <Pressable\n                                    style={[styles.button, styles.buttonClose]}\n                                    onPress={() => setModalVisible(!modalVisible)}\n                                >\n                                    <Text style={styles.textStyle}>Close</Text>\n                                </Pressable> */}\n                            </View>\n                        </View>\n\n                        <ScrollView style={{ width: \"100%\" }}>\n\n                            <View style={{ width: \"100%\" }}>\n\n                                <Text style={styles.typeDivitor}>Date</Text>\n\n                                {Object.keys(orderDates).map((ele, index) => {\n                                    const selected = ele in filters.date\n                                    return <View key={index}>\n                                        <RadioButton selected={selected} text={ele} onPress={() => handleYearPress(ele.toString())} />\n                                        {selected &&\n                                            <View style={styles.monthContainer}>\n                                                {orderDates[ele].map((month: string, mIndex: number) => {\n                                                    const selectedMonth = filters.date[ele].find((searchMon: string) => searchMon == month)\n                                                    return <RadioButton key={mIndex} selected={selectedMonth} text={month} onPress={() => handleMonthPress(ele.toString(), month)} />\n                                                })}\n                                            </View>}\n                                    </View>\n                                })}\n\n                                <Text style={styles.typeDivitor}>Merchant</Text>\n                                {merchantData?.merchants.__typename == 'MerchantsSuccess' &&\n                                    merchantData.merchants.merchants.map((ele, index) => {\n                                        const selected = filters.merchant.findIndex(fEle => fEle === ele.name) !== -1\n                                        return <RadioButton key={index} selected={selected} text={ele.name} onPress={() => handleSelect(ele.name, 'merchant')}></RadioButton>\n                                    })}\n\n                                <Text style={styles.typeDivitor}>Category</Text>\n                                {categroyData?.categories.__typename == 'CategoriesSuccess' &&\n                                    categroyData.categories.categories.map((ele, index) => {\n                                        const selected = filters.category.findIndex(fEle => fEle === ele.name) !== -1\n                                        return <RadioButton key={index} selected={selected} text={ele.name} onPress={() => handleSelect(ele.name, 'category')}></RadioButton>\n                                    })}\n\n                            </View>\n                            <View style={{ height: 30 }} />\n\n                        </ScrollView>\n\n                        <Button text=\"Save Filter\" onPress={() => {\n                            onHide && onHide();\n                            setModalVisible(false);\n                            onApplyFilter(filters);\n                        }} />\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n        width: \"90%\",\n        height: \"90%\",\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        fontSize: 36,\n        marginBottom: 15,\n        textAlign: \"center\"\n    },\n    typeDivitor: {\n        marginTop: 20,\n        marginBottom: 8,\n        fontSize: 26,\n    },\n    monthContainer: {\n        marginLeft: 50\n    }\n});\n\nexport default ExpenseFilter\nexport { ApplyFilter }\n","import { ColorValue, StyleSheet, TouchableHighlight } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\n\nexport interface FilterButtonProps {\n    onPress: () => void;\n}\n\nexport function FilterButton(props: FilterButtonProps) {\n    return (\n        <TouchableHighlight style={styles.container} onPress={props.onPress}\n            underlayColor=\"rgba(0,0,0,0.1)\">\n            <Feather name=\"filter\" size={24} color=\"black\" />\n        </TouchableHighlight>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 44,\n        height: 44,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 22,\n    },\n});\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { GetExpensesDocument, GetExpensesQuery, GetExpensesQueryVariables } from \"../components/generated\";\r\nimport { FlatList } from \"react-native\";\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport AddButton from \"../components/buttons/AddButton\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { useRefresh } from \"../hooks/useRefresh\";\r\nimport Colors from \"../constants/Colors\";\r\nimport { ExpenseDisplay, ExpenseDisplayProps } from \"../components/ExpenseDisplay\";\r\nimport { formatDate } from \"./ExpenseDetailsScreen\";\r\nimport ExpenseFilter, { ApplyFilter } from \"../components/filter/ExpenseFilter\"\r\nimport { FilterButton } from \"../components/buttons/FilterButton\";\r\nimport { TrashButton } from \"../components/buttons/TrashButton\";\r\n\r\ntype ExpenseDisplayPropsOrDate = ExpenseDisplayProps | string;\r\n\r\ntype Expenses = {\r\n    __typename?: \"Expense\" | undefined;\r\n    amount: number;\r\n    id: number;\r\n    date: string;\r\n    description?: string | null | undefined;\r\n    category?: {\r\n        __typename?: \"Category\" | undefined;\r\n        colourHex: string;\r\n        name: string;\r\n    } | null | undefined;\r\n    merchant?: {\r\n        __typename?: \"Merchant\" | undefined;\r\n        name: string;\r\n    } | null | undefined;\r\n}[];\r\n\r\n/**\r\n * Takes a list of expenses, sorts it by date, and prcoesses into an object that ExpenseDisplayProps\r\n * can display.\r\n * @param expenses The list of expenses to process.\r\n * @param onPress Callback that is passed to the ExpenseDisplay component.\r\n * @returns List of expenses that ExpenseDisplay can understand.\r\n */\r\nfunction processExpenses(expenses: Expenses, onPress: (id: number) => void): ExpenseDisplayPropsOrDate[] {\r\n    if (expenses.length === 0) return [];\r\n\r\n    // Call map first to copy the array and avoid mutating it while extracting the necessary info\r\n    const preProcessed = expenses.map((expense) => {\r\n        return {\r\n            id: expense.id,\r\n            name: expense.category?.name || 'Uncategorized',\r\n            color: `#${expense.category?.colourHex || Colors.light.uncategorizedColor}`,\r\n            amount: expense.amount,\r\n            onPress: onPress,\r\n            date: expense.date.split(' ')[0], // ignore the time\r\n            merchant: expense.merchant?.name || '',\r\n        };\r\n    }).sort((ex1, ex2) => { // Sort by date\r\n        if (ex1.date > ex2.date) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n\r\n    let processed: ExpenseDisplayPropsOrDate[] = [];\r\n\r\n    // Add dates to the array whenever the date is different between neighbouring expenses\r\n    for (let i = preProcessed.length - 1; i >= 0; i--) {\r\n        const { date, ...otherProps } = preProcessed[i];\r\n        processed.unshift({ ...otherProps });\r\n        if (i === 0 || preProcessed[i].date !== preProcessed[i - 1].date) {\r\n            processed.unshift(`${preProcessed[i].date}`);\r\n        }\r\n    }\r\n\r\n    return processed;\r\n}\r\n\r\ninterface FilterSet {\r\n    date: any,\r\n    category: string[],\r\n    merchant: string[],\r\n}\r\n\r\nfunction renderItem({ item }: { item: ExpenseDisplayPropsOrDate }) {\r\n    if (typeof item === 'string') {\r\n        return (\r\n            <View style={staticStyles.dateContainer}>\r\n                <Text style={staticStyles.date}>{formatDate(item)}</Text>\r\n            </View>\r\n        );\r\n    } else {\r\n        return <ExpenseDisplay {...item} />\r\n    }\r\n}\r\n\r\nfunction keyExtractor(item: ExpenseDisplayPropsOrDate) {\r\n    if (typeof item === 'string') return item;\r\n    return item.id.toString();\r\n}\r\n\r\nexport default function ExpensesScreen({ navigation }: RootTabScreenProps<'Expenses'>) {\r\n    const [getExpenses, { data, refetch }] = useLazyQuery<GetExpensesQuery, GetExpensesQueryVariables>(GetExpensesDocument, {\r\n        fetchPolicy: 'no-cache',\r\n    });\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => getExpenses({ variables: { passwordHash } }),\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => refetch({ passwordHash }));\r\n    const [filters, setFilters] = useState<FilterSet>({\r\n        date: {},\r\n        category: [],\r\n        merchant: [],\r\n    })\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => (\r\n                <View style={staticStyles.filterBtnContainer}>\r\n                    <FilterButton onPress={() => setModalVisible(true)} />\r\n                </View>\r\n            )\r\n        });\r\n    }, []);\r\n\r\n    const processedExpenses = useMemo(() => {\r\n        if (data?.expenses.__typename === 'ExpensesSuccess') {\r\n            const filteredExpenses = ApplyFilter(data.expenses.expenses, filters)\r\n            return processExpenses(filteredExpenses, (id) => navigation.navigate('ExpenseDetails', { expenseId: id }));\r\n        }\r\n        return [];\r\n    }, [data, filters]);\r\n\r\n    const handleAddExpense = () => navigation.navigate('CreateExpense');\r\n\r\n    if (data === undefined) {\r\n        return <View style={staticStyles.screen}><Text>Loading data...</Text></View>;\r\n    } else if (data.expenses.__typename !== 'ExpensesSuccess') {\r\n        return <View style={staticStyles.screen}><Text>Error fetching data.</Text></View>;\r\n    } else {\r\n        return (\r\n            <View style={staticStyles.screen}>\r\n                <ExpenseFilter onApplyFilter={setFilters} visible={modalVisible} onHide={() => setModalVisible(false)} />\r\n                <>\r\n                    {\r\n                        processedExpenses.length === 0 &&\r\n                        <Text style={staticStyles.noExpensesText}>You have no expenses. Press the '+' button to add one!</Text>\r\n                    }\r\n                </>\r\n                <FlatList\r\n                    data={processedExpenses}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={keyExtractor}\r\n                    maxToRenderPerBatch={30} />\r\n                <View style={staticStyles.addExpenseBtn}>\r\n                    <AddButton size={80} onPress={handleAddExpense} />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst staticStyles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    filterBtnContainer: {\r\n        paddingRight: 10,\r\n    },\r\n    itemSeparator: {\r\n        flex: 1,\r\n        flexBasis: 2,\r\n        backgroundColor: '#c9c9c9',\r\n    },\r\n    noExpensesText: {\r\n        alignSelf: 'center',\r\n        fontSize: 15,\r\n        width: 300,\r\n        marginTop: 20,\r\n    },\r\n    addExpenseBtn: {\r\n        position: 'absolute',\r\n        right: 15,\r\n        bottom: 15,\r\n    },\r\n    dateContainer: {\r\n        paddingTop: 20,\r\n        paddingBottom: 10,\r\n        width: 350,\r\n        alignSelf: 'center',\r\n    },\r\n    date: {\r\n        fontSize: 18,\r\n    },\r\n    filterButton: {\r\n        position: 'absolute',\r\n        right: 15,\r\n        top: 0,\r\n        zIndex: 10\r\n    }\r\n});\r\n","import { BudgetCategory } from \"../generated\";\nimport { View, Text } from \"react-native\";\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryStack } from 'victory-native';\n\nexport interface ChartDisplayProps {\n    planned: number;\n    actualBudgeted: number;\n    actualUnbudgeted: number;\n    height?: number;\n    width?: number;\n}\n\nexport function ChartDisplay({ planned, actualBudgeted, actualUnbudgeted, height, width }: ChartDisplayProps) {\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <VictoryChart width={width || 360} height={height || 200} domainPadding={70} padding={{ top: 0, bottom: 30, left: 50, right: 50 }}>\n                <VictoryAxis crossAxis />\n                <VictoryStack colorScale={['#aa3377', '#e0b4cd']}>\n                    <VictoryBar\n                        categories={{ x: ['Total Budgeted', 'Total Spent'] }}\n                        data={[\n                            { x: 'Total Budgeted', y: planned, label: '$' + planned.toFixed(2), fill: '#4477aa' },\n                            { x: 'Total Spent', y: actualBudgeted, fill: '#aa3377' },\n                        ]}\n                        style={{\n                            data:\n                            {\n                                fill:\n                                    ({ datum }) => datum.fill,\n                            }\n                        }\n                        }\n                        width={200}\n                        barWidth={50} />\n                    <VictoryBar\n                        categories={{ x: ['Total Budgeted', 'Total Spent'] }}\n                        data={[\n                            { x: 'Total Budgeted', y: 0 },\n                            { x: 'Total Spent', y: actualUnbudgeted, label: `$${(actualBudgeted + actualUnbudgeted).toFixed(2)}` }\n                        ]}\n                        width={200}\n                        barWidth={50} />\n                </VictoryStack>\n            </VictoryChart>\n        </View>\n\n    );\n}\n","import { ReactElement } from \"react\"\r\nimport { View, Text } from \"react-native\"\r\n\r\nconst FakeFlatList = (\r\n    {\r\n        data,\r\n        title,\r\n        renderItem,\r\n        ItemSeparatorComponent\r\n    }\r\n        :\r\n        {\r\n            data: Array<any>,\r\n            title?: string | undefined,\r\n            renderItem: (item: any) => ReactElement,\r\n            ItemSeparatorComponent?: () => ReactElement\r\n        }) => {\r\n\r\n    const itemsRender = data.map((item: any, index: number) => {\r\n\r\n        return (<View key={index}>\r\n            {index != 0 && (ItemSeparatorComponent && ItemSeparatorComponent())}\r\n            {renderItem({ item })}\r\n        </View>)\r\n    })\r\n\r\n    return (<View>\r\n        {title && <Text>{title}</Text>}\r\n        {itemsRender}\r\n    </View>)\r\n}\r\n\r\nexport default FakeFlatList;","import { ColorValue, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport { View, Text } from \"../Themed\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { PencilButton } from \"../buttons/PencilButton\";\r\n\r\ninterface BudgetWarningProps {\r\n    label?: 'Over Budget' | 'Near Budget' | 'At Budget';\r\n}\r\n\r\nfunction BudgetWarning({ label }: BudgetWarningProps) {\r\n    if (!label) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <View style={staticStyles.warningRow}>\r\n            <View style={staticStyles.warningContainer}>\r\n                <Text style={staticStyles.warningText}>\r\n                    {label}\r\n                </Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport interface BudgetCategoryProps {\r\n    category: string;\r\n    color: ColorValue;\r\n    planned: number;\r\n    actual: number;\r\n    onPressDots: () => void;\r\n    topBorder?: boolean;\r\n    bottomBorder?: boolean;\r\n}\r\n\r\nexport function BudgetCategory({ category, color, planned, actual, onPressDots, topBorder, bottomBorder }: BudgetCategoryProps) {\r\n    const dynamicStyles = StyleSheet.create({\r\n        container: {\r\n            flexDirection: 'row',\r\n            borderTopWidth: topBorder ? 1 : 0,\r\n            borderBottomWidth: bottomBorder ? 1 : 0,\r\n            borderColor: 'rgba(0,0,0,0.1)',\r\n        },\r\n        coloredBar: {\r\n            backgroundColor: color,\r\n            width: 10,\r\n        },\r\n    });\r\n    const overBudget = actual > planned;\r\n    const nearBudget = !overBudget && actual > planned * 0.75\r\n    const atBudget = actual === planned;\r\n\r\n    return (\r\n        <View style={dynamicStyles.container}>\r\n            <View style={dynamicStyles.coloredBar}></View>\r\n            <View style={staticStyles.contentContainer}>\r\n                <View style={staticStyles.content}>\r\n                    <View style={staticStyles.header}>\r\n                        <Text style={staticStyles.headerText}>\r\n                            {category}\r\n                        </Text>\r\n                        <PencilButton onPress={onPressDots} color=\"black\" />\r\n                    </View>\r\n                    <BudgetWarning label={(atBudget && 'At Budget') || (overBudget && 'Over Budget') || (nearBudget && 'Near Budget') || undefined} />\r\n                    <View style={staticStyles.body}>\r\n                        <View style={staticStyles.amntDisplayContainer}>\r\n                            <View style={staticStyles.amntTitleContainer}>\r\n                                <Text style={staticStyles.amntTitle}>Budgeted</Text>\r\n                            </View>\r\n                            <Text style={staticStyles.amntText}>\r\n                                ${planned}\r\n                            </Text>\r\n                        </View>\r\n                        <View style={staticStyles.amntDisplayContainer}>\r\n                            <View style={staticStyles.amntTitleContainer}>\r\n                                <Text style={staticStyles.amntTitle}>Spent</Text>\r\n                            </View>\r\n                            <Text style={staticStyles.amntText}>\r\n                                ${actual}\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst staticStyles = StyleSheet.create({\r\n    contentContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    content: {\r\n        width: 300,\r\n        paddingTop: 20,\r\n        paddingBottom: 30,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    headerText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n    },\r\n    iconContainer: {\r\n        height: 40,\r\n        width: 40,\r\n        borderRadius: 40 / 2,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    warningRow: {\r\n        paddingTop: 8,\r\n    },\r\n    warningContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'rgb(191, 0, 0)',\r\n        padding: 7,\r\n        width: 110,\r\n        alignItems: 'center',\r\n    },\r\n    warningText: {\r\n        color: 'white',\r\n    },\r\n    body: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginTop: 15,\r\n    },\r\n    amntDisplayContainer: {\r\n        width: 120,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        paddingLeft: 20,\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n    },\r\n    amntText: {\r\n        fontSize: 20,\r\n    },\r\n    amntTitleContainer: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 3,\r\n        position: 'absolute',\r\n        top: -10,\r\n        left: 10,\r\n    },\r\n    amntTitle: {\r\n        fontSize: 15,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport FakeFlatList from './FakeFlatList';\r\nimport { BudgetCategory as BudgetCategoryType, GetMonthBreakdownQuery } from '../generated';\r\nimport { BudgetCategory } from './BudgetCategory';\r\n\r\nexport interface BudgetListProps {\r\n    data: Array<BudgetCategoryType> | undefined | null;\r\n    monthlyData: GetMonthBreakdownQuery | undefined;\r\n    updateCallback: (budgetCategory: BudgetCategoryType) => void;\r\n}\r\n\r\nexport function BudgetList({ data, monthlyData, updateCallback }: BudgetListProps) {\r\n    // TODO move this component outside BudgetList component.\r\n    const RowItem = (item: BudgetCategoryType) => {\r\n        const applicableMonthlyData = monthlyData?.monthBreakdown.__typename == \"MonthBreakdown\" ?\r\n            monthlyData.monthBreakdown.byCategory.find(x => x.category?.name == item.category.name) : undefined;\r\n        const spent = applicableMonthlyData ? applicableMonthlyData.amountSpent : 0;\r\n\r\n        return (\r\n            <>\r\n                <BudgetCategory\r\n                    planned={parseInt(item.amount.toFixed(2))}\r\n                    actual={parseInt(spent.toFixed(2))}\r\n                    category={item.category.name}\r\n                    color={'#' + item.category.colourHex}\r\n                    onPressDots={() => updateCallback(item)} />\r\n                <View style={styles.itemSeparator}></View>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <FakeFlatList\r\n                data={data ? data : []}\r\n                renderItem={({ item }) => <RowItem {...item} />}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    itemSeparator: {\r\n        height: 1,\r\n        backgroundColor: 'rgba(0,0,0,0.2)',\r\n    },\r\n});\r\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { Budget, BudgetCategory, CopyBudgetDocument, CopyBudgetMutation, CopyBudgetMutationVariables, CreateBudgetCategoryDocument, CreateBudgetCategoryMutation, CreateBudgetCategoryMutationVariables, CreateBudgetDocument, CreateBudgetMutation, CreateBudgetMutationVariables, GetBudgetsDocument, GetBudgetsQuery, GetBudgetsQueryVariables, GetMonthBreakdownDocument, GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables, MonthType } from \"../../components/generated\";\r\nimport { TouchableHighlight } from \"react-native\"\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, View, ScrollView, Text } from 'react-native';\r\nimport { RootTabScreenProps } from \"../../types\";\r\nimport { ChartDisplay } from \"../../components/budget/ChartDisplay\";\r\nimport { BudgetList } from \"../../components/budget/BudgetList\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { MONTHS_ORDER } from \"../../constants/Months\"\r\nimport Button from \"../../components/buttons/Button\";\r\nimport moment from \"moment\";\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\ninterface HeaderButtonProps {\r\n    direction: 'left' | 'right';\r\n    onPress?: () => void;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n}\r\n\r\nexport function HeaderButton({ direction, onPress, marginLeft, marginRight }: HeaderButtonProps) {\r\n    return (\r\n        <TouchableHighlight onPress={onPress} style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            marginLeft: marginLeft,\r\n            marginRight: marginRight,\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 25,\r\n        }} underlayColor=\"rgba(0,0,0,0.2)\">\r\n            <AntDesign name={direction} size={32} color=\"black\" />\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nexport default function BudgetScreen({ navigation, route }: RootTabScreenProps<'Budget'>) {\r\n    const now = moment();\r\n    const [month, setMonth] = useState(MONTHS_ORDER[now.month()]);\r\n    const [year, setYear] = useState(now.year());\r\n    const currentMonthIsNotPast = (year > now.year() || (year === now.year() && MONTHS_ORDER.indexOf(month) >= now.month()));\r\n\r\n    useEffect(() => {\r\n        // Why is this not a valid listener in Typescript? It works and is in the docs.\r\n        const listener = navigation.addListener('tabPress', () => {\r\n            setMonth(MONTHS_ORDER[now.month()]);\r\n            setYear(now.year());\r\n        });\r\n\r\n        return listener;\r\n    }, []);\r\n\r\n    const [getBudgets, { data: budgetData, refetch: budgetRefetch }] = useLazyQuery<GetBudgetsQuery, GetBudgetsQueryVariables>(GetBudgetsDocument);\r\n    const [getMonthlyBreakdown, { data: monthData, refetch: monthRefetch }] = useLazyQuery<GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables>(GetMonthBreakdownDocument);\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => {\r\n            getBudgets({ variables: { passwordHash } });\r\n            getMonthlyBreakdown({ variables: { passwordHash, month: month as MonthType, year } });\r\n        },\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => {\r\n        budgetRefetch({ passwordHash });\r\n        monthRefetch({ passwordHash, month: month as MonthType, year });\r\n    }, [month, year]);\r\n\r\n    const [createBudget] = useMutation<CreateBudgetMutation>(CreateBudgetDocument, {\r\n        variables: { passwordHash, month, year },\r\n    });\r\n    const [createBudgetCategory] = useMutation<CreateBudgetCategoryMutation, CreateBudgetCategoryMutationVariables>(CreateBudgetCategoryDocument);\r\n    const [copyBudget] = useMutation<CopyBudgetMutation, CopyBudgetMutationVariables>(CopyBudgetDocument);\r\n\r\n    const selectedBudget = useMemo(() => {\r\n        if (budgetData?.budgets.__typename == 'BudgetsSuccess') {\r\n            return budgetData.budgets.budgets.find(bud => (bud.month == month && bud.year == year));\r\n        }\r\n    }, [month, year, budgetData]);\r\n\r\n    const previousBudget = useMemo(() => {\r\n        if (budgetData?.budgets.__typename === 'BudgetsSuccess') {\r\n            const sorted = budgetData.budgets.budgets.slice().sort((a, b) => {\r\n                if (a.year > b.year) {\r\n                    return 1;\r\n                } else if (a.year < b.year) {\r\n                    return -1;\r\n                } else {\r\n                    if (MONTHS_ORDER.indexOf(a.month) > MONTHS_ORDER.indexOf(b.month)) {\r\n                        return 1;\r\n                    } else if (MONTHS_ORDER.indexOf(a.month) < MONTHS_ORDER.indexOf(b.month)) {\r\n                        return -1;\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }).filter((budget) => budget.budgetCategories && budget.budgetCategories.length > 0);\r\n\r\n            for (let i = sorted.length - 1; i >= 0; i--) {\r\n                if (sorted[i].year < year || (sorted[i].year === year && MONTHS_ORDER.indexOf(sorted[i].month) < MONTHS_ORDER.indexOf(month))) {\r\n                    return sorted[i];\r\n                }\r\n            }\r\n        }\r\n    }, [month, year, budgetData]);\r\n\r\n    const plannedAmount = useMemo(() => {\r\n        if (selectedBudget !== undefined) {\r\n            return selectedBudget.budgetCategories?.reduce((previousValue, currentValue) => previousValue + currentValue.amount, 0);\r\n        }\r\n    }, [month, year, budgetData]);\r\n\r\n    const actualAmount = useMemo(() => {\r\n        if (selectedBudget !== undefined && monthData?.monthBreakdown.__typename === 'MonthBreakdown') {\r\n            const calculated = { budgeted: 0, unbudgeted: 0 };\r\n            monthData.monthBreakdown.byCategory.filter((monthBreakdownCat) => {\r\n                if (monthBreakdownCat.category && selectedBudget.budgetCategories) {\r\n                    return !!selectedBudget.budgetCategories?.find((cat) => {\r\n                        return cat.category.name === monthBreakdownCat.category?.name;\r\n                    });\r\n                } else {\r\n                    return false;\r\n                }\r\n            }).forEach((applicableMonthBreakdownCat) => {\r\n                calculated.budgeted += applicableMonthBreakdownCat.amountSpent;\r\n            });\r\n            monthData.monthBreakdown.byCategory.forEach((monthBreakdownCat) => {\r\n                calculated.unbudgeted += monthBreakdownCat.amountSpent;\r\n            });\r\n            calculated.unbudgeted = calculated.unbudgeted - calculated.budgeted;\r\n            return calculated\r\n        }\r\n    }, [month, year, monthData, selectedBudget]);\r\n\r\n    const months = MONTHS_ORDER;\r\n\r\n    const backAMonth = () => {\r\n        const curIndex = months.indexOf(month)\r\n        if (curIndex === 0) {\r\n            setMonth(months[months.length - 1])\r\n            setYear((prevYear) => prevYear - 1);\r\n        } else {\r\n            setMonth((prevMonth) => months[months.indexOf(prevMonth) - 1]);\r\n        }\r\n    };\r\n\r\n    const forwardAMonth = () => {\r\n        const curIndex = months.indexOf(month)\r\n        if (curIndex === months.length - 1) {\r\n            setMonth(months[0]);\r\n            setYear((prevYear) => prevYear + 1);\r\n        } else {\r\n            setMonth((prevMonth) => months[months.indexOf(prevMonth) + 1]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerTitle: `${month} ${year}`,\r\n            headerBackVisible: false,\r\n            headerLeft: () => <HeaderButton direction=\"left\" marginLeft={10} onPress={backAMonth} />,\r\n            headerRight: () => <HeaderButton direction=\"right\" marginRight={10} onPress={forwardAMonth} />,\r\n        });\r\n    }, [month]);\r\n\r\n    function handleAddBudget() {\r\n        if (selectedBudget) {\r\n            navigation.navigate(\"CreateBudget\", { budget: selectedBudget as Budget });\r\n        } else {\r\n            createBudget({\r\n                onError: (error => {\r\n                    alert(error.message);\r\n                }),\r\n                onCompleted: ((response) => {\r\n                    if (response.createBudget.__typename == \"BudgetSuccess\") {\r\n                        navigation.navigate('CreateBudget', { budget: response.createBudget.budget as Budget })\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleUsePreviousBudget() {\r\n        if (!previousBudget) return;\r\n        if (selectedBudget) {\r\n            previousBudget?.budgetCategories?.forEach((budgetCategory) => {\r\n                createBudgetCategory({\r\n                    variables: {\r\n                        passwordHash,\r\n                        amount: budgetCategory.amount,\r\n                        budgetId: selectedBudget.id,\r\n                        categoryId: budgetCategory.category.id,\r\n                    },\r\n                    onCompleted: () => {\r\n                        budgetRefetch();\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            copyBudget({\r\n                variables: {\r\n                    passwordHash,\r\n                    month: month as MonthType,\r\n                    year,\r\n                    id: previousBudget.id,\r\n                },\r\n                onCompleted: () => {\r\n                    budgetRefetch();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            <ChartDisplay\r\n                planned={plannedAmount || 0}\r\n                actualBudgeted={actualAmount?.budgeted || 0}\r\n                actualUnbudgeted={actualAmount?.unbudgeted || 0} />\r\n            <>\r\n                {\r\n                    actualAmount && actualAmount.unbudgeted > 0 &&\r\n                    <View style={styles.warningContainer}>\r\n                        <Feather name=\"info\" size={21} color=\"red\" style={styles.warningIcon} />\r\n                        <Text style={styles.warningText}>${actualAmount?.unbudgeted.toFixed(2)} of expenses {currentMonthIsNotPast ? \"are\" : \"were\"} unplanned.</Text>\r\n                    </View>\r\n                }\r\n            </>\r\n            {\r\n                (selectedBudget && selectedBudget.budgetCategories && selectedBudget.budgetCategories.length > 0 &&\r\n                    <>\r\n                        <View style={{ alignSelf: 'center', marginBottom: 20, }}>\r\n                            {\r\n                                currentMonthIsNotPast &&\r\n                                <Button text=\"Add Budget\" onPress={handleAddBudget} />\r\n                            }\r\n                        </View>\r\n                        <View style={styles.itemSeparator}></View>\r\n                        <ScrollView>\r\n                            <TouchableHighlight>\r\n                                <BudgetList\r\n                                    data={selectedBudget.budgetCategories as BudgetCategory[]}\r\n                                    monthlyData={monthData}\r\n                                    updateCallback={(budCat: BudgetCategory) => {\r\n                                        navigation.navigate(\"EditBudget\", { budgetCategory: budCat })\r\n                                    }} />\r\n                            </TouchableHighlight>\r\n                        </ScrollView>\r\n                    </>)\r\n                || (\r\n                    <View style={{ alignItems: 'center', flex: 1, paddingTop: 70, }}>\r\n                        {\r\n                            currentMonthIsNotPast &&\r\n                            <Button text=\"Add Budget\" onPress={handleAddBudget} />\r\n                        }\r\n                        {\r\n                            previousBudget && currentMonthIsNotPast &&\r\n                            <Button text=\"Use Previous Budget\" onPress={handleUsePreviousBudget} />\r\n                        }\r\n                    </View>\r\n                )\r\n            }\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    itemSeparator: {\r\n        height: 1,\r\n        backgroundColor: 'rgba(0,0,0,0.2)',\r\n    },\r\n    warningContainer: {\r\n        alignItems: 'center',\r\n        paddingTop: 8,\r\n        paddingBottom: 10,\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    warningIcon: {\r\n        marginRight: 8,\r\n    },\r\n    warningText: {\r\n        color: 'red',\r\n        fontSize: 18,\r\n        fontWeight: '700',\r\n    },\r\n});\r\n","export default {\r\n    fontSize: 18,\r\n    verticalSpacing: 15,\r\n    horizontalSpacing: 15,\r\n    errorFontSize: 18,\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { ColorValue, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nexport interface ColorCircleProps {\r\n    color: ColorValue | 'plus';\r\n    /**\r\n     * size === width === height\r\n     */\r\n    size: number;\r\n}\r\n\r\nexport function ColorCircle({ color, size }: ColorCircleProps) {\r\n    const containerStyle: StyleProp<ViewStyle> = useMemo(() => {\r\n        return {\r\n            backgroundColor: color === 'plus' ? 'black' : color,\r\n            width: size,\r\n            height: size,\r\n            borderRadius: size / 2,\r\n            borderWidth: 0.5,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        }\r\n    }, [color, size]);\r\n\r\n    if (color === 'plus') {\r\n        return (\r\n            <View style={containerStyle}>\r\n                <AntDesign name=\"plus\" size={size / 2} color=\"white\" />\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        <View style={containerStyle} />\r\n    );\r\n}\r\n","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { StyleSheet, TouchableHighlight, View, Text, TextInput, ScrollView, Keyboard, KeyboardAvoidingView, Platform, ColorValue, ViewStyle, StyleProp } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport Forms from \"../../constants/Forms\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport { ColorCircle } from \"../ColorCircle\";\r\nimport { ReactElement } from \"react\";\r\n\r\nexport type DropdownFieldDatum = { id: string, value: string, color?: ColorValue }\r\n\r\nexport interface DropdownItemProps {\r\n    item: DropdownFieldDatum;\r\n    onPress: (id: string, value: string) => void;\r\n}\r\n\r\nexport function DropdownItem({ item, onPress }: DropdownItemProps) {\r\n    const { id, value, color } = item;\r\n    const textStyle: StyleProp<ViewStyle> = useMemo(() => {\r\n        return [styles.itemValue, { paddingLeft: color ? 20 : 80 }]\r\n    }, [color]);\r\n\r\n    return (\r\n        <TouchableHighlight style={styles.container} onPress={() => onPress(id, value)} underlayColor=\"rgba(0,0,0,0.1)\" key={id}>\r\n            <View style={styles.content}>\r\n                {\r\n                    color &&\r\n                    <View style={{ marginLeft: 40 }}>\r\n                        <ColorCircle color={color} size={20} />\r\n                    </View>\r\n                }\r\n                <Text style={textStyle}>{value}</Text>\r\n            </View>\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nexport interface DropdownFieldProps {\r\n    label: string;\r\n    placeholder: string;\r\n    data: DropdownFieldDatum[];\r\n    defaultValue?: string;\r\n    onChange: (id: string) => void;\r\n    onFocus?: () => void;\r\n    required?: boolean;\r\n    /**\r\n     * Only does anything if `required` is true. Tells this component to check whether the field\r\n     * is empty and, if so, display error.\r\n     */\r\n    check?: boolean;\r\n    onCreateNew?: (value: string) => void;\r\n    /**\r\n     * Only does anything if onCreateNew is defined.\r\n     */\r\n    labelForCreateNew?: string;\r\n    /**\r\n     * This is not a controlled component!! The cached value is the value that reappers when the user exits the dropdown without making a\r\n     * new selection or whenever the dropdown is collapsed. This component may change the cachedValue internally even when the prop is\r\n     * given.\r\n     */\r\n    cachedValue?: string;\r\n    /**\r\n     * If true, will not try to calculate dropdown height based on keyboard, and will render the entire dropdown.\r\n     */\r\n    disableScroll?: boolean;\r\n}\r\n\r\n/**\r\n * This component has a lot of moving parts. Modification can result in unexpected behaviour and is\r\n * done at your own risk. If you need any changes to this component, ask Hark.\r\n */\r\nexport function DropdownField(props: DropdownFieldProps) {\r\n    const [focused, setFocused] = useState(false);\r\n    const inputRef = useRef<TextInput>(null);\r\n    const scrollViewStartRef = useRef<View>(null);\r\n    const [value, setValue] = useState(props.defaultValue || '');\r\n    const [cachedValue, setCachedValue] = useState(props.defaultValue || props.cachedValue || '');\r\n    const filteredData = useMemo(() => {\r\n        return props.data.filter(datum => datum.value.toLowerCase().startsWith(value.toLowerCase()));\r\n    }, [props.data, value]);\r\n    const backgroundColor = focused ? 'rgba(0,0,0,0.1)' : 'white';\r\n    const containerStyle = useMemo(() => {\r\n        return [styles.container, { backgroundColor, zIndex: -1, elevation: -1 }]\r\n    }, [backgroundColor]);\r\n    const [keyboardScreenY, setKeyboardScreenY] = useState(0);\r\n    const [scrollViewScreenY, setScrollViewScreenY] = useState(0);\r\n    const maxScrollViewHeight = keyboardScreenY - scrollViewScreenY - (Platform.OS === 'android' ? 25 : 0);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => console.log('scroll view height: ' + maxScrollViewHeight), [maxScrollViewHeight]);\r\n\r\n    useEffect(() => {\r\n        Keyboard.addListener('keyboardDidShow', (e) => {\r\n            setKeyboardScreenY(e.endCoordinates.screenY);\r\n        });\r\n        Keyboard.addListener('keyboardDidHide', (e) => {\r\n            setKeyboardScreenY(e.endCoordinates.screenY);\r\n        });\r\n        return () => {\r\n            Keyboard.removeAllListeners('keyboardDidShow');\r\n            Keyboard.removeAllListeners('keyboardDidHide');\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCachedValue(props.cachedValue || '');\r\n        if (!focused) setValue(props.cachedValue || '');\r\n    }, [props.cachedValue]);\r\n\r\n    useEffect(() => {\r\n        if (props.required && props.check && !cachedValue) setErrorMessage('This field is required.');\r\n    }, [props.check]);\r\n\r\n    useEffect(() => {\r\n        if (focused) {\r\n            props.onFocus && props.onFocus();\r\n            inputRef.current?.focus();\r\n            setValue('');\r\n        } else {\r\n            setValue(cachedValue);\r\n            if (props.required && !cachedValue) {\r\n                setErrorMessage('This field is required.');\r\n            } else {\r\n                setErrorMessage('');\r\n            }\r\n        }\r\n    }, [focused]);\r\n\r\n    useRefresh(() => {\r\n        setErrorMessage('');\r\n    });\r\n\r\n    const handleItemPress = (itemId: string, itemValue: string) => {\r\n        props.onChange(itemId);\r\n        setCachedValue(itemValue);\r\n        setFocused(false);\r\n    };\r\n\r\n    const handlePress = () => {\r\n        setFocused(true);\r\n        scrollViewStartRef.current?.measureInWindow((x, y) => {\r\n            setScrollViewScreenY(y);\r\n        });\r\n    };\r\n\r\n    const handlePressArrow = () => {\r\n        if (!focused) {\r\n            scrollViewStartRef.current?.measureInWindow((x, y) => {\r\n                setScrollViewScreenY(y);\r\n            });\r\n        }\r\n        setFocused(oldFocused => !oldFocused);\r\n    };\r\n\r\n    function handlePressCreateNew() {\r\n        props.onCreateNew && props.onCreateNew(value);\r\n        setCachedValue(value);\r\n        setFocused(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TouchableHighlight style={containerStyle} onPress={handlePress} underlayColor=\"rgba(0,0,0,0.1)\">\r\n                <>\r\n                    <View style={styles.content}>\r\n                        <Text style={styles.label}>{props.label}</Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            placeholderTextColor=\"grey\"\r\n                            placeholder={!focused ? props.placeholder : 'start typing to search'}\r\n                            editable={focused}\r\n                            ref={inputRef}\r\n                            onBlur={() => setFocused(false)}\r\n                            value={value}\r\n                            onChangeText={setValue}\r\n                            pointerEvents=\"none\" />\r\n                        <TouchableHighlight\r\n                            style={styles.arrowIconContainer}\r\n                            underlayColor=\"rgba(0,0,0,0.1)\"\r\n                            onPress={handlePressArrow}>\r\n                            <AntDesign\r\n                                name={focused ? 'up' : 'down'}\r\n                                size={20}\r\n                                color=\"black\" />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                    {\r\n                        errorMessage.length > 0 && !focused &&\r\n                        <Text style={styles.error}>{errorMessage}</Text>\r\n                    }\r\n                </>\r\n            </TouchableHighlight>\r\n            <View ref={scrollViewStartRef} onLayout={() => scrollViewStartRef.current?.measureInWindow((x, y) => setScrollViewScreenY(y))} />\r\n            <View>\r\n                {\r\n                    focused &&\r\n                    <ScrollView style={[styles.scrollView, { maxHeight: props.disableScroll ? 1000 : maxScrollViewHeight }]} keyboardShouldPersistTaps=\"always\" nestedScrollEnabled={true}>\r\n                        {\r\n                            filteredData.map(datum =>\r\n                                <DropdownItem item={datum} onPress={handleItemPress} key={datum.id} />\r\n                            ).sort((item1, item2) =>\r\n                                item1.props.item.value > item2.props.item.value ? 1 : -1\r\n                            )\r\n                        }\r\n                        {\r\n                            props.onCreateNew &&\r\n                            <DropdownItem\r\n                                item={{ id: 'new', value: value ? `Add \"${value}\"` : `Create new ${props.labelForCreateNew || props.label.toLowerCase()}`, color: 'plus' }}\r\n                                onPress={handlePressCreateNew} />\r\n                        }\r\n                    </ScrollView>\r\n                }\r\n            </View>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'rgba(0,0,0,0.1)',\r\n        paddingVertical: Forms.verticalSpacing,\r\n        alignItems: 'center',\r\n    },\r\n    content: {\r\n        width: 320,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        fontSize: Forms.fontSize,\r\n        fontWeight: 'bold',\r\n        width: 100,\r\n        textAlign: 'right',\r\n        paddingRight: Forms.horizontalSpacing,\r\n    },\r\n    input: {\r\n        width: 190,\r\n        fontSize: Forms.fontSize,\r\n        color: 'black',\r\n        marginRight: 10,\r\n    },\r\n    itemValue: {\r\n        fontSize: Forms.fontSize,\r\n        fontWeight: '600',\r\n        paddingVertical: 3,\r\n    },\r\n    arrowIconContainer: {\r\n        width: 30,\r\n        height: 30,\r\n        borderRadius: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    scrollView: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        zIndex: 1,\r\n        elevation: 1,\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    error: {\r\n        paddingTop: 10,\r\n        color: 'red',\r\n        alignSelf: 'center',\r\n        fontSize: Forms.errorFontSize,\r\n    },\r\n});\r\n","import { useQuery } from \"@apollo/client\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { View, Text, Alert, StyleSheet, ScrollView, Keyboard } from \"react-native\";\nimport { VictoryLegend, VictoryPie } from \"victory-native\";\nimport { EventCallbackInterface, StringOrNumberOrList } from \"victory-core\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { GetCategoriesDocument, GetCategoriesQuery, MonthBreakdownCategory } from \"../generated\";\nimport { DropdownRow } from \"../forms/DropdownRow\";\nimport { DropdownField, DropdownItem } from \"../forms/DropdownField\";\n\ntype byCategoryProps = {\n    categoryData: MonthBreakdownCategory[];\n    month: string;\n    year: number;\n    onChangeCategory?: (newCategory?: { id: number, name: string }) => void;\n}\n\nexport default function ByCategory({ categoryData, month, year, onChangeCategory }: byCategoryProps, { navigation }: RootStackScreenProps<'CreateMerchant'>) {\n    const passwordHash = useAuth();\n    const [category, setCategory] = useState<{ id: number, name: string }>();\n    const [selectedMonth, setSelectedMonth] = useState(\"\");\n\n    const { data: categoriesData, refetch } = useQuery<GetCategoriesQuery>(GetCategoriesDocument, {\n        variables: { passwordHash: passwordHash },\n        onError: (error => {\n            Alert.alert(error.message);\n        }),\n    });\n\n    useEffect(() => {\n        setCategory(undefined);\n    }, [month]);\n\n    useEffect(() => {\n        if (onChangeCategory) {\n            onChangeCategory(category);\n        }\n    }, [category])\n\n    const filteredCategoryData = useMemo(() => {\n        return categoryData.slice().filter(x => !!x.category && x.amountSpent > 0);\n    }, [categoryData]);\n\n    const hasUncategorizedExpenses = useMemo(() => {\n        return categoryData.find(datum => datum.category === null && datum.amountSpent !== 0);\n    }, [categoryData]);\n\n    function handleCategorySelect(categoryId: string | undefined) {\n        if (categoryId === '-1') setCategory({ id: -1, name: 'Uncategorized' })\n        if (categoriesData?.categories.__typename == \"CategoriesSuccess\") {\n            const foundCategory = categoriesData.categories.categories.find(x => x.id.toString() == categoryId);\n\n            if (foundCategory !== undefined) {\n                setCategory(foundCategory);\n            }\n        }\n    }\n\n    return (\n        <>\n            <View style={styles.graphContainer}>\n                <View style={{ position: \"absolute\", height: '100%', width: '100%', justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Text>{year}</Text>\n                    <Text>{month}</Text>\n                </View>\n                <VictoryPie\n                    padAngle={2}\n                    labelRadius={130}\n                    radius={({ datum }) => datum.category.name === category?.name ? 120 : 100}\n                    innerRadius={({ datum }) => datum.category.name === category?.name ? 90 : 70}\n                    data={\n                        categoryData.map((data) => {\n                            if (data.category === null) {\n                                return {\n                                    amountSpent: data.amountSpent,\n                                    category: {\n                                        id: -1,\n                                        name: \"Uncategorized\",\n                                        colourHex: \"757575\",\n                                    }\n                                }\n                            } else {\n                                return data\n                            }\n                        }).filter((data) => data.amountSpent != 0)\n\n                    }\n                    labels={({ datum }) => datum.category.name === category?.name ? \"$\" + datum.amountSpent.toFixed(2) : datum.category.name.substring(0, 7) + \"...\"}\n                    y={\"amountSpent\"}\n                    width={900}\n                    height={300}\n                    style={{\n                        data:\n                            { fill: (d) => \"#\" + d.datum.category.colourHex }\n                    }}\n                    events={[\n                        {\n                            target: \"data\",\n                            eventHandlers: {\n                                onPressIn: () => {\n                                    return (\n                                        [\n                                            {\n                                                target: \"data\",\n                                                mutation: (props) => {\n                                                    setCategory({ id: props.datum.category.id, name: props.datum.category.name });\n                                                }\n                                            }\n                                        ]\n                                    );\n                                },\n                                onClick: () => [\n                                    {\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            setCategory({ id: props.datum.category.id, name: props.datum.category.name });\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        {\n                            target: 'parent',\n                            eventHandlers: {\n                                onPress: () => [\n                                    {\n                                        target: 'data',\n                                        callback: () => {\n                                            Keyboard.dismiss();\n                                        }\n                                    }\n                                ],\n                            }\n                        }\n                    ]}\n                />\n            </View >\n            {\n                categoryData.length !== 0 &&\n                <View style={{ alignItems: 'center', marginBottom: 15, marginTop: 25 }}>\n                    <VictoryLegend\n                        width={320}\n                        orientation=\"horizontal\"\n                        colorScale={categoryData.map((data) => data.category ? \"#\" + data.category.colourHex : \"gray\")}\n                        data={\n                            categoryData.filter((data) => data.amountSpent != 0).map((data) => {\n                                if (data.category === null) {\n                                    return {\n                                        name: \"Uncategorized\",\n                                        symbol: {\n                                            fill: \"#757575\",\n                                        }\n                                    }\n                                } else {\n                                    return {\n                                        name: data.category?.name,\n                                        symbol: {\n                                            fill: \"#\" + data.category?.colourHex\n                                        }\n                                    }\n                                }\n                            })\n                        }\n                        itemsPerRow={2}\n                        gutter={20}\n                        height={40 * (categoryData.filter((data) => data.amountSpent != 0).length / 2)}\n                        events={[\n                            {\n                                target: 'parent',\n                                eventHandlers: {\n                                    onPress: () => [\n                                        {\n                                            target: 'parent',\n                                            callback: () => {\n                                                Keyboard.dismiss();\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ]}\n                    />\n                </View>\n            }\n            <View style={styles.dropdownContainer}>\n                <DropdownField\n                    label=\"Category\"\n                    placeholder=\"choose a category\"\n                    data={\n                        hasUncategorizedExpenses ?\n                            [...filteredCategoryData.map(x => {\n                                return { id: x.category?.id.toString() || '-2', value: x.category?.name || '' }\n                            }), { id: '-1', value: 'Uncategorized' }]\n                            : [...filteredCategoryData.map(x => {\n                                return { id: x.category?.id.toString() || '-2', value: x.category?.name || '' }\n                            })]\n                    }\n                    onChange={handleCategorySelect}\n                    cachedValue={category?.name}\n                    disableScroll={true} />\n            </View>\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    graphContainer: {\n        alignItems: 'center',\n        marginTop: 20,\n    },\n    dropdownContainer: {\n        marginBottom: 20,\n        zIndex: 1,\n        elevation: 1,\n    }\n});\n","import { AntDesign } from \"@expo/vector-icons\";\nimport { TouchableHighlight } from \"react-native\";\n\ninterface SliderButtonProps {\n    direction: 'left' | 'right';\n    size: number;\n    onPress?: () => void;\n    marginLeft?: number;\n    marginRight?: number;\n}\n\nexport function SliderButton(props: SliderButtonProps) {\n    return (\n        <TouchableHighlight onPress={props.onPress} style={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginLeft: props.marginLeft,\n            marginRight: props.marginRight,\n            width: props.size,\n            height: props.size,\n            borderRadius: props.size / 2,\n        }} underlayColor=\"rgba(0,0,0,0.2)\">\n            <AntDesign name={props.direction} size={props.size / 2} color=\"black\" />\n        </TouchableHighlight>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\"\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryGroup, VictoryLabel, VictoryLegend, VictoryStack } from \"victory-native\";\nimport ArrowButton from \"../buttons/ArrowButton\";\nimport { SliderButton } from \"../buttons/SliderButton\";\nimport { Budget, BudgetCategory } from \"../generated\";\n\ninterface GraphDatum {\n    \"amountSpent\": number,\n    \"amountBudgeted\": number,\n    \"category\": {\n        \"colourHex\": string,\n        \"name\": string\n    }\n}\n\ninterface GraphParameters {\n    data: GraphDatum[];\n    onPressLeft?: () => void;\n    onPressRight?: () => void;\n}\n\nconst RenderGraph = ({ data, onPressLeft, onPressRight }: GraphParameters) => {\n    const filteredData = data.map((ele, index) => {\n        return {\n            ...ele,\n            id: index,\n            shortCat: ele.category.name.substring(0, 5) + '..',\n            amountUnplanned: ele.amountBudgeted === 0 ? ele.amountSpent : 0,\n            amountPlanned: ele.amountBudgeted !== 0 ? ele.amountSpent : 0,\n            zero: 0\n        }\n    });\n\n    const [undefY, setUndefY] = useState<number | undefined>(100)\n    //to combat Y being undefined at the start which caused an label error\n    useEffect(() => {\n        setUndefY(0)\n        setTimeout(() => setUndefY(undefined), 100);\n    }, [data])\n\n    return (<>\n        <VictoryChart>\n            <VictoryAxis style={{ grid: { stroke: \"none\" } }} />\n            <VictoryGroup offset={20}>\n                <VictoryStack colorScale={['#4477aa', '#4477aa']}\n                    labelComponent={<VictoryLabel y={undefY} dx={-20} />}>\n                    <VictoryBar\n                        categories={{ x: filteredData.map(ele => ele.shortCat) }}\n                        barWidth={20}\n                        data={filteredData.map(ele => {\n                            return {\n                                x: ele.shortCat,\n                                y: ele.amountBudgeted,\n                                label: ele.amountBudgeted ? '$' + ele.amountBudgeted.toFixed(2) : null\n                            }\n                        })} />\n                    <VictoryBar\n                        categories={{ x: filteredData.map(ele => ele.shortCat) }}\n                        barWidth={20}\n                        data={filteredData.map(ele => {\n                            return {\n                                x: ele.shortCat,\n                                y: ele.zero\n                            }\n                        })} />\n                </VictoryStack>\n                <VictoryStack colorScale={['#aa3377', '#e0b4cd']}\n                    labelComponent={<VictoryLabel y={undefY} dx={20} />}>\n                    <VictoryBar\n                        categories={{ x: filteredData.map(ele => ele.shortCat) }}\n                        name=\"bar-1\"\n                        barWidth={20}\n                        data={filteredData.map(ele => {\n                            return {\n                                x: ele.shortCat,\n                                y: ele.amountPlanned\n                            }\n                        })} />\n                    <VictoryBar\n                        categories={{ x: filteredData.map(ele => ele.shortCat) }}\n                        name=\"bar-2\"\n                        barWidth={20}\n                        data={filteredData.map(ele => {\n                            return {\n                                x: ele.shortCat,\n                                y: ele.amountUnplanned,\n                                label: ele.amountSpent ? '$' + ele.amountSpent.toFixed(2) : null,\n                            }\n                        })} />\n                </VictoryStack>\n            </VictoryGroup>\n        </VictoryChart>\n        <View style={styles.leftSliderContainer}>\n            <SliderButton direction=\"left\" size={40} onPress={onPressLeft} />\n        </View>\n        <View style={styles.rightSliderContainer}>\n            <SliderButton direction=\"right\" size={40} onPress={onPressRight} />\n        </View>\n        <View style={{ alignItems: 'center', marginBottom: 20 }}>\n            <VictoryLegend\n                height={55}\n                colorScale={['#4477aa', '#aa3377', '#e0b4cd']}\n                data={[{ name: 'Budgeted' }, { name: 'Planned Expenses' }, { name: 'Unplanned Expenses' }]}\n                width={320}\n                orientation=\"horizontal\"\n                itemsPerRow={2}\n                padding={20}\n                gutter={0} />\n        </View>\n    </>)\n}\n\ninterface MonthlyVsBudgetedParameters {\n    displayAmount?: number,\n    jumpAmount?: number,\n    data: {\n        \"amountSpent\": number,\n        \"category\"?: {\n            \"colourHex\": string,\n            \"name\": string\n        } | null\n    }[],\n    budgetReferenceData: Budget | undefined,\n}\n\nconst MonthlyVsBudgetedCategory = ({ displayAmount, jumpAmount, data, budgetReferenceData }: MonthlyVsBudgetedParameters) => {\n    const displayAmountNumber = displayAmount ? displayAmount : 5\n    const jumpAmountNumber = jumpAmount ? jumpAmount : 3\n    const inputData = data.map((ele, index) => {\n        const curCat = ele.category?.name\n        const curBud: BudgetCategory | undefined = budgetReferenceData?.budgetCategories?.find(ele => ele.category.name == curCat)\n        return {\n            amountSpent: ele.amountSpent,\n            category: ele.category ? ele.category : {\n                colourHex: \"gray\",\n                name: \"Uncategorized\"\n            },\n            index,\n            amountBudgeted: curBud ? curBud.amount : 0\n        }\n    }) as GraphDatum[]\n\n    const [sliceEnd, setSliceEnd] = useState(inputData.length - displayAmountNumber)\n\n    useEffect(\n        () => {\n            setSliceEnd(inputData.length - displayAmountNumber)\n        }\n        , [data])\n\n    const showArrows = inputData.length > displayAmountNumber\n    return (<View>\n\n        <View style={{ flexDirection: 'row', width: \"100%\" }}>\n            <View style={{ flex: 1, flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n                <View>\n                    <RenderGraph data={inputData.length <= displayAmountNumber ? inputData :\n                        sliceEnd + displayAmountNumber > inputData.length ? inputData.slice(sliceEnd).concat(\n                            (inputData.slice(0, (sliceEnd + displayAmountNumber) - (inputData.length)))\n                        ) :\n                            inputData.slice(sliceEnd, sliceEnd + displayAmountNumber)\n                    }\n                        onPressLeft={() => {\n                            const newSpot = sliceEnd - jumpAmountNumber\n                            setSliceEnd(newSpot < 0 ? newSpot + inputData.length : newSpot)\n                        }}\n                        onPressRight={() => {\n                            const newSpot = sliceEnd + jumpAmountNumber\n                            setSliceEnd(newSpot % inputData.length)\n                        }} />\n                </View>\n            </View>\n        </View>\n    </View >)\n}\n\nconst styles = StyleSheet.create({\n    leftSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        left: 8,\n    },\n    rightSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        right: 8,\n    },\n});\n\nexport default MonthlyVsBudgetedCategory;","import { ReactElement } from \"react\";\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../buttons/Button\";\n\nexport interface CardProps {\n    title: string;\n    graph: ReactElement<any, any>;\n    onViewDetails?: () => void;\n}\n\nexport function Card(props: CardProps) {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>{props.title}</Text>\n            <View style={styles.graphContainer}>\n                {props.graph}\n            </View>\n            {\n                props.onViewDetails &&\n                <View style={styles.btnContainer}>\n                    <Button text=\"View More Details\" onPress={props.onViewDetails} />\n                </View>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingTop: 40,\n        borderBottomWidth: 1,\n        borderBottomColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 22,\n        maxWidth: 350,\n    },\n    graphContainer: {\n        alignItems: 'center'\n    },\n    btnContainer: {\n        marginBottom: 30,\n        zIndex: -1,\n        elevation: -1,\n    },\n});\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryStack } from \"victory-native\";\nimport { MONTHS_ORDER } from \"../../../constants/Months\";\nimport { MonthType } from \"../../generated\";\nimport { SliderButton } from \"../../buttons/SliderButton\"\n\nexport type ExpensesByMonthDatum = { month: MonthType, amount: number };\n\ntype DomainEnd = 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction calcDomainEnd(month: MonthType): DomainEnd {\n    return (\n        MONTHS_ORDER.indexOf(month) < 3\n            ? 5\n            : MONTHS_ORDER.indexOf(month) > 8\n                ? 12\n                : MONTHS_ORDER.indexOf(month) + 3\n    ) as DomainEnd;\n}\n\nexport interface ExpensesByMonthProps {\n    data: ExpensesByMonthDatum[];\n    month: MonthType;\n}\n\nexport function ExpensesByMonth(props: ExpensesByMonthProps) {\n    const [domainEnd, setDomainEnd] = useState<DomainEnd>(calcDomainEnd(props.month));\n    const highestAmount = useMemo(() => {\n        let highest = 0;\n        for (let i = 0; i < props.data.length; i++) {\n            if (props.data[i].amount > highest) highest = props.data[i].amount;\n        }\n        return highest;\n    }, [props.data]);\n    // Add data for months that have 0 amount\n    const data: ExpensesByMonthDatum[] = useMemo(() => {\n        return MONTHS_ORDER.map(month => {\n            return {\n                month: month as MonthType,\n                amount: props.data.find(datum => datum.month === month)?.amount || 0,\n            };\n        });\n    }, [props.data]);\n    const slicedData: ExpensesByMonthDatum[] = useMemo(() => {\n        return data.slice(domainEnd - 5, domainEnd);\n    }, [data, domainEnd]);\n    // Need to pad the data so that bar size doesn't change as range of months changes.\n    const padData: ExpensesByMonthDatum[] = useMemo(() => {\n        return slicedData.map(datum => {\n            return {\n                month: datum.month,\n                amount: highestAmount - datum.amount,\n            };\n        });\n    }, [slicedData]);\n\n    useEffect(() => {\n        setDomainEnd(calcDomainEnd(props.month));\n    }, [props.month]);\n\n    const incrementDomainEnd = useCallback(() => {\n        setDomainEnd(oldDomainEnd => {\n            if (oldDomainEnd < 12) {\n                return oldDomainEnd + 1 as DomainEnd;\n            } else {\n                return oldDomainEnd as DomainEnd;\n            }\n        });\n    }, []);\n\n    const decrementDomainEnd = useCallback(() => {\n        setDomainEnd(oldDomainEnd => {\n            if (oldDomainEnd > 5) {\n                return oldDomainEnd - 1 as DomainEnd;\n            } else {\n                return oldDomainEnd as DomainEnd;\n            }\n        });\n    }, []);\n\n    return (\n        <View>\n            <VictoryChart domainPadding={{ x: 20 }}>\n                <VictoryAxis crossAxis />\n                <VictoryStack colorScale={['black', 'rgba(0,0,0,0)']}>\n                    <VictoryBar\n                        data={slicedData}\n                        x={(datum: object) => (datum as ExpensesByMonthDatum).month.slice(0, 3)}\n                        y={(datum: object) => (datum as ExpensesByMonthDatum).amount}\n                        labels={({ datum }: { datum: ExpensesByMonthDatum }) => datum.amount > 0 ? datum.amount.toFixed(2) : null}\n                        style={{ data: { fill: '#aa3377' } }}\n                        barRatio={0.7} />\n                    <VictoryBar\n                        data={padData}\n                        x={(datum: object) => (datum as ExpensesByMonthDatum).month.slice(0, 3)}\n                        y={(datum: object) => (datum as ExpensesByMonthDatum).amount}\n                        barRatio={0.7} />\n                </VictoryStack>\n            </VictoryChart>\n            {\n                domainEnd > 5 &&\n                <View style={styles.leftSliderContainer}>\n                    <SliderButton direction=\"left\" size={40} onPress={decrementDomainEnd} />\n                </View>\n            }\n            {\n                domainEnd < 12 &&\n                <View style={styles.rightSliderContainer}>\n                    <SliderButton direction=\"right\" size={40} onPress={incrementDomainEnd} />\n                </View>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    leftSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        left: 8,\n    },\n    rightSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        right: 8,\n    },\n});\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Rect, VictoryAxis, VictoryBar, VictoryChart, VictoryGroup, VictoryLabel, VictoryLegend, VictoryStack } from \"victory-native\";\nimport { MONTHS_ORDER } from \"../../../constants/Months\";\nimport { SliderButton } from \"../../buttons/SliderButton\";\nimport { MonthType } from \"../../generated\";\n\ntype BudgetsByMonthDatum = {\n    month: MonthType,\n    budget: number,\n    spent: {\n        planned: number,\n        unplanned: number,\n    },\n};\n\ntype DomainEnd = 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction calcDomainEnd(month: MonthType): DomainEnd {\n    return (\n        MONTHS_ORDER.indexOf(month) < 2\n            ? 3\n            : MONTHS_ORDER.indexOf(month) > 9\n                ? 12\n                : MONTHS_ORDER.indexOf(month) + 2\n    ) as DomainEnd;\n}\n\nexport interface BudgetsByMonthProps {\n    data: BudgetsByMonthDatum[];\n    month: MonthType;\n}\n\nexport function BudgetsByMonth(props: BudgetsByMonthProps) {\n    const [domainEnd, setDomainEnd] = useState<DomainEnd>(calcDomainEnd(props.month));\n    const highestBudget = useMemo(() => {\n        let highest = 0;\n        for (let i = 0; i < props.data.length; i++) {\n            if (props.data[i].budget > highest) highest = props.data[i].budget;\n        }\n        return highest;\n    }, [props.data]);\n    const data: (BudgetsByMonthDatum & { totalSpent: number })[] = useMemo(() => {\n        return MONTHS_ORDER.map(month => {\n            const datum = props.data.find(datum => datum.month === month);\n            return {\n                month: month as MonthType,\n                budget: datum?.budget || 0,\n                spent: datum?.spent || { planned: 0, unplanned: 0 },\n                totalSpent: datum ? datum.spent.planned + datum.spent.unplanned : 0,\n            };\n        });\n    }, [props.data]);\n    const slicedData: (BudgetsByMonthDatum & { totalSpent: number })[] = useMemo(() => {\n        return data.slice(domainEnd - 3, domainEnd);\n    }, [data, domainEnd]);\n    const padData: (BudgetsByMonthDatum & { totalSpent: number })[] = useMemo(() => {\n        return slicedData.map(datum => {\n            return {\n                month: datum.month,\n                budget: highestBudget - datum.budget,\n                spent: datum.spent,\n                totalSpent: datum.totalSpent,\n            };\n        });\n    }, [slicedData]);\n    const [undefY, setUndefY] = useState<number | undefined>(0);\n\n    useEffect(() => {\n        setDomainEnd(calcDomainEnd(props.month));\n    }, [props.month]);\n\n    // It is disgusting that this is necessary.\n    // Counter of dev hours wasted trying to fix this: 3\n    // Needed because VictoryLabel needs a non-undefined y prop on initialization\n    // when part of a VictoryGroup.\n    useEffect(() => {\n        setUndefY(0);\n        setTimeout(() => setUndefY(undefined), 100);\n    }, [slicedData])\n\n    const incrementDomainEnd = useCallback(() => {\n        setDomainEnd(oldDomainEnd => {\n            if (oldDomainEnd < 12) {\n                return oldDomainEnd + 1 as DomainEnd;\n            } else {\n                return oldDomainEnd as DomainEnd;\n            }\n        });\n    }, []);\n\n    const decrementDomainEnd = useCallback(() => {\n        setDomainEnd(oldDomainEnd => {\n            if (oldDomainEnd > 3) {\n                return oldDomainEnd - 1 as DomainEnd;\n            } else {\n                return oldDomainEnd as DomainEnd;\n            }\n        });\n    }, []);\n\n    return (\n        <View>\n            <VictoryChart domainPadding={{ x: 25 }}>\n                <VictoryAxis crossAxis />\n                <VictoryGroup offset={20}>\n                    <VictoryStack>\n                        <VictoryBar\n                            data={slicedData.map(x => {\n                                return {\n                                    x: x.month.slice(0, 3),\n                                    y: x.budget,\n                                    label: x.budget ? '$' + x.budget.toFixed(2) : null,\n                                };\n                            })}\n                            labelComponent={<VictoryLabel dx={-20} />}\n                            barWidth={20}\n                            style={{ data: { fill: '#4477aa' } }} />\n                        <VictoryBar\n                            data={padData.map(x => {\n                                return {\n                                    x: x.month.slice(0, 3),\n                                    y: x.budget,\n                                };\n                            })}\n                            barWidth={20}\n                            style={{ data: { fill: 'rgba(0,0,0,0)' } }} />\n                    </VictoryStack>\n                    <VictoryStack>\n                        <VictoryBar\n                            data={slicedData.map(x => {\n                                return {\n                                    x: x.month.slice(0, 3),\n                                    y: x.spent.planned,\n                                };\n                            })}\n                            barWidth={20}\n                            style={{ data: { fill: '#aa3377' } }} />\n                        <VictoryBar\n                            data={slicedData.map(x => {\n                                return {\n                                    x: x.month.slice(0, 3),\n                                    y: x.spent.unplanned,\n                                    label: x.totalSpent ? '$' + x.totalSpent.toFixed(2) : null,\n                                };\n                            })}\n                            labelComponent={<VictoryLabel y={undefY} dx={20} />}\n                            barWidth={20}\n                            style={{ data: { fill: '#e0b4cd' } }} />\n                    </VictoryStack>\n                </VictoryGroup>\n            </VictoryChart>\n            {\n                domainEnd > 3 &&\n                <View style={styles.leftSliderContainer}>\n                    <SliderButton direction=\"left\" size={40} onPress={decrementDomainEnd} />\n                </View>\n            }\n            {\n                domainEnd < 12 &&\n                <View style={styles.rightSliderContainer}>\n                    <SliderButton direction=\"right\" size={40} onPress={incrementDomainEnd} />\n                </View>\n            }\n            <View style={{ alignItems: 'center', marginBottom: 20 }}>\n                <VictoryLegend\n                    height={55}\n                    colorScale={['#4477aa', '#aa3377', '#e0b4cd']}\n                    data={[{ name: 'Budgeted' }, { name: 'Planned Expenses' }, { name: 'Unplanned Expenses' }]}\n                    width={320}\n                    orientation=\"horizontal\"\n                    itemsPerRow={2}\n                    padding={20}\n                    gutter={0} />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    leftSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        left: 8,\n    },\n    rightSliderContainer: {\n        position: 'absolute',\n        top: 245,\n        right: 8,\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, View, Text, ScrollView } from 'react-native';\nimport { RootTabScreenProps } from \"../types\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Budget, BudgetDetailsByDateDocument, BudgetDetailsByDateQuery, BudgetDetailsByDateQueryVariables, GetBudgetsDocument, GetBudgetsQuery, GetMonthBreakdownDocument, GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables, GetMonthTotalsDocument, GetMonthTotalsQuery, MonthType } from '../components/generated';\nimport MonthlyExpenseGraph from '../components/graphs/MonthlyExpenses';\nimport { useLazyQuery } from '@apollo/client';\nimport ByCategory from '../components/graphs/ByCategory';\nimport { TopBar } from '../components/budget/TopBar';\nimport { MONTHS_ORDER } from '../constants/Months';\nimport MonthlyVsBudgeted from '../components/graphs/MonthlyVsBudgeted';\nimport { useRefresh } from '../hooks/useRefresh';\nimport Button from '../components/buttons/Button';\nimport MonthlyVsBudgetedCategory from '../components/graphs/monthlyVsBudgetedCategory';\nimport { HeaderButton } from './Budget/BudgetScreen';\nimport { Form } from '../components/forms/Form';\nimport { Card } from '../components/reports/Card';\nimport { VictoryPie } from 'victory-native';\nimport { ExpensesByMonth } from '../components/reports/graphs/ExpensesByMonth';\nimport { BudgetsByMonth } from '../components/reports/graphs/BudgetsByMonth';\nimport { BudgetsByCategory } from '../components/reports/graphs/BudgetsByCategory';\n\n\nexport default function ReportsScreen({ navigation }: RootTabScreenProps<'Reports'>) {\n    const date = new Date();\n    const [month, setMonth] = useState(MONTHS_ORDER[date.getMonth()]);\n    const [year, setYear] = useState(date.getFullYear());\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getMonthlyBreakdown()\n            getMonthTotals()\n            getBudgets()\n            getBudgetDetailsByDate({ variables: { passwordHash, month: month as MonthType, year } });\n        },\n        redirect: 'ifUnauthorized',\n    });\n    useRefresh(() => {\n        monthlyBreakdownRefetch()\n        // monthTotalsRefetch()\n        budgetsRefetch()\n        budgetDetailsRefetch();\n    })\n\n    const [getMonthlyBreakdown, { loading: monthlyBreakdownLoading, data: monthlyBreakdownData, refetch: monthlyBreakdownRefetch }] = useLazyQuery<GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables>(GetMonthBreakdownDocument,\n        { variables: { passwordHash, month: month as MonthType, year } });\n    const [getMonthTotals, { loading: monthTotalsLoading, data: monthTotalsData, refetch: monthTotalsRefetch }] = useLazyQuery<GetMonthTotalsQuery>(GetMonthTotalsDocument,\n        { variables: { passwordHash } })\n    const [getBudgets, { loading: budgetsLoading, data: budgetsData, refetch: budgetsRefetch }] = useLazyQuery<GetBudgetsQuery>(GetBudgetsDocument, {\n        variables: { passwordHash }\n    })\n    const [getBudgetDetailsByDate, { data: budgetDetailsData, refetch: budgetDetailsRefetch }] = useLazyQuery<BudgetDetailsByDateQuery, BudgetDetailsByDateQueryVariables>(BudgetDetailsByDateDocument);\n\n    function handleSetMonth(newMonth: string) {\n        setMonth(newMonth);\n    }\n\n    useEffect(() => {\n        budgetDetailsRefetch({ passwordHash, month: month as MonthType, year });\n    }, [month]);\n\n    const months = MONTHS_ORDER;\n\n    const backAMonth = () => {\n        const curIndex = months.indexOf(month)\n        if (curIndex === 0) {\n            setMonth(months[months.length - 1])\n            setYear((prevYear) => prevYear - 1);\n        } else {\n            setMonth((prevMonth) => months[months.indexOf(prevMonth) - 1]);\n        }\n    };\n\n    const forwardAMonth = () => {\n        const curIndex = months.indexOf(month)\n        if (curIndex === months.length - 1) {\n            setMonth(months[0]);\n            setYear((prevYear) => prevYear + 1);\n        } else {\n            setMonth((prevMonth) => months[months.indexOf(prevMonth) + 1]);\n        }\n    };\n\n    useEffect(() => {\n        navigation.setOptions({\n            headerTitle: `${month} ${year}`,\n            headerBackVisible: false,\n            headerLeft: () => <HeaderButton direction=\"left\" marginLeft={10} onPress={backAMonth} />,\n            headerRight: () => <HeaderButton direction=\"right\" marginRight={10} onPress={forwardAMonth} />,\n        });\n    }, [month]);\n\n    return (\n        <ScrollView keyboardShouldPersistTaps=\"always\">\n            <Form>\n                <Card\n                    title='Expenses by Category'\n                    graph={\n                        <ByCategory\n                            categoryData={\n                                monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\"\n                                    ? monthlyBreakdownData.monthBreakdown.byCategory.slice().sort((a, b) => {\n                                        if (!a.category || !b.category) {\n                                            return 0;\n                                        } else if (a.category.name > b.category.name) {\n                                            return 1;\n                                        } else if (a.category.name < b.category.name) {\n                                            return -1;\n                                        } else {\n                                            return 0;\n                                        }\n                                    })\n                                    : []\n                            }\n                            month={month}\n                            year={year} />\n                    }\n                    onViewDetails={() => navigation.navigate('ExpandWheel', { year, month })} />\n                <View style={{ zIndex: -1, elevation: -1 }}>\n                    <Card\n                        title='Expenses by Month'\n                        graph={\n                            <ExpensesByMonth\n                                month={month as MonthType}\n                                data={\n                                    monthTotalsData?.monthsTotals.__typename == \"MonthsTotals\" ? monthTotalsData.monthsTotals.byMonth.map(x => ({ month: x.month, amount: x.amountSpent })) : []\n                                } />\n                        }\n                        onViewDetails={() => navigation.navigate('ExpandExpenses', { year, month })} />\n                </View>\n                <Card\n                    title='Budgets by Month'\n                    graph={\n                        <BudgetsByMonth\n                            month={month as MonthType}\n                            data={\n                                monthTotalsData?.monthsTotals.__typename == \"MonthsTotals\" ? monthTotalsData.monthsTotals.byMonth.map(x => {\n                                    return {\n                                        month: x.month,\n                                        budget: x.amountBudgeted,\n                                        spent: {\n                                            planned: x.amountSpentPlanned,\n                                            unplanned: x.amountSpentUnplanned,\n                                        },\n                                    }\n                                }) : []\n                            } />\n                    }\n                    onViewDetails={() => navigation.navigate('ExpandBudget', { year, month })} />\n                {/* <Card\n                    // Work in progress\n                    title='Budgets by Category'\n                    graph={\n                        <BudgetsByCategory data={\n                            budgetDetailsData?.budgetDetailsByDate.__typename === 'BudgetDetails'\n                                ? budgetDetailsData.budgetDetailsByDate.byCategory.map(x => ({\n                                    category: x.category.name,\n                                    budgeted: x.amountBudgeted,\n                                    spent: x.amountActual,\n                                }))\n                                : []\n                        } />\n                    }\n                    onViewDetails={() => navigation.navigate('ExpandBarCat', { year, month })} /> */}\n                <Card\n                    title='Budgets by Category'\n                    graph={\n                        <MonthlyVsBudgetedCategory\n                            displayAmount={3}\n                            jumpAmount={1}\n                            data={monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\" ?\n                                monthlyBreakdownData.monthBreakdown.byCategory.filter(ele => {\n                                    const foundBudget = budgetsData?.budgets.__typename == 'BudgetsSuccess' ?\n                                        budgetsData.budgets.budgets.find(bud => {\n                                            return bud.month == month && bud.year == year\n                                        }) as Budget : undefined\n                                    const foundPair = foundBudget?.budgetCategories?.find(cat => cat.category.name == ele.category?.name)\n                                    // console.log(\"pari\", foundPair, ele)\n                                    return !(ele.amountSpent == 0 && (foundPair === undefined || foundPair.amount == 0))// && (foundPair === undefined || foundPair.amount == 0)\n                                }) : []}\n                            budgetReferenceData={budgetsData?.budgets.__typename === 'BudgetsSuccess' ?\n                                budgetsData.budgets.budgets.find(ele => {\n                                    return ele.month == month && ele.year == year\n                                }) as Budget : undefined} />\n                    }\n                    onViewDetails={() => navigation.navigate('ExpandBarCat', { year, month })} />\n            </Form>\n\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: 'white',\n    },\n    btnContainer: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 50,\n        zIndex: -1,\n        elevation: -1,\n    }\n});\n","import { useMemo } from \"react\";\nimport { StyleSheet, TouchableHighlight, View, Text } from \"react-native\";\nimport { Entypo } from '@expo/vector-icons';\n\nexport interface SettingsBarProps {\n    title: string,\n    onPress: () => void;\n    subtitle?: string,\n    topBorder?: boolean;\n    bottomBorder?: boolean;\n}\n\nexport function SettingsBar({ title, onPress, subtitle, topBorder, bottomBorder }: SettingsBarProps) {\n    const dynamicStyles = useMemo(() => {\n        return StyleSheet.create({\n            container: {\n                backgroundColor: '#f5f5f5',\n                borderTopWidth: topBorder ? 1 : 0,\n                borderBottomWidth: bottomBorder ? 1 : 0,\n                borderTopColor: 'rgba(0,0,0,0.2)',\n                borderBottomColor: 'rgba(0,0,0,0.2)',\n                paddingVertical: 20,\n            }\n        });\n    }, [topBorder, bottomBorder]);\n\n    return (\n        <TouchableHighlight style={dynamicStyles.container} onPress={onPress} underlayColor=\"rgba(0,0,0,0.2)\">\n            <View style={staticStyles.content}>\n                <View style={staticStyles.titlesContiainer}>\n                    <Text style={staticStyles.title}>{title}</Text>\n                    {\n                        subtitle !== undefined && subtitle.length > 0 &&\n                        <Text style={staticStyles.subtitle}>{subtitle}</Text>\n                    }\n                </View>\n                <Entypo name=\"chevron-right\" size={24} color=\"black\" style={staticStyles.icon} />\n            </View>\n        </TouchableHighlight>\n    );\n}\n\nconst staticStyles = StyleSheet.create({\n    content: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    titlesContiainer: {\n        width: 270,\n        marginRight: 20,\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        paddingTop: 5,\n    },\n    icon: {},\n});\n","import { View, Text } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\n\nexport interface UserDetailProps {\n    label: string;\n    value: string;\n}\n\nexport function UserDetail({ label, value }: UserDetailProps) {\n    return (\n        <View style={styles.userDetailsRow}>\n            <Text style={styles.userDetailsLabel}>{label}</Text>\n            <Text style={styles.userDetailsValue}>{value}</Text>\n        </View>\n    );\n}\n\nconst userDetailsFontSize = 17;\nconst userDetailsVerticalSpacing = 5;\nconst userDetailsHorizontalSpacing = 20;\n\nconst styles = StyleSheet.create({\n    userDetailsRow: {\n        flexDirection: 'row',\n        paddingVertical: userDetailsVerticalSpacing,\n    },\n    userDetailsLabel: {\n        width: 100,\n        textAlign: 'right',\n        fontSize: userDetailsFontSize,\n    },\n    userDetailsValue: {\n        fontWeight: 'bold',\n        width: 250,\n        paddingLeft: userDetailsHorizontalSpacing,\n        paddingRight: 20,\n        fontSize: userDetailsFontSize,\n    },\n});\n","import React, { useEffect, useMemo } from 'react';\r\nimport { View, Text, TouchableHighlight, SafeAreaView, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport Button from \"../components/buttons/Button\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { MaterialIcons, FontAwesome5 } from \"@expo/vector-icons\";\r\nimport Styles from '../constants/Styles';\r\nimport { useLazyQuery, useQuery } from '@apollo/client';\r\nimport { GetUserDocument, GetUserQuery, GetUserQueryVariables } from '../components/generated';\r\nimport { useRefresh } from '../hooks/useRefresh';\r\nimport { SettingsBar } from '../components/profile/SettingsBar';\r\nimport { UserDetail } from '../components/profile/UserDetail';\r\n\r\nfunction formatPhoneNumber(phoneNumber: string): string {\r\n    return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\r\n}\r\n\r\nexport default function SettingsScreen({ navigation }: RootTabScreenProps<'Settings'>) {\r\n    const [getUser, { data, refetch }] = useLazyQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument);\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => getUser({ variables: { passwordHash } }),\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => refetch({ passwordHash }));\r\n\r\n    const logout = () => {\r\n        AsyncStorage.multiRemove(['passwordHash', 'New Category']).then(() => {\r\n            navigation.navigate('Welcome');\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity onPress={logout}>\r\n                    <Text style={styles.logoutBtn}>Log Out</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        });\r\n    }, []);\r\n\r\n    if (!data) {\r\n        return <View style={styles.screen}></View>;\r\n    } else if (data?.user.__typename !== 'User') {\r\n        return <View style={styles.screen}><Text>Error fetching user data.</Text></View>;\r\n    } else {\r\n        const user = data.user;\r\n\r\n        return (\r\n            <ScrollView style={styles.screen}>\r\n                <FontAwesome5 name=\"user-circle\" size={80} color=\"black\" style={styles.userIcon} />\r\n                <View style={styles.userDetailsContainer}>\r\n                    <UserDetail label=\"First name\" value={user.firstName} />\r\n                    <UserDetail label=\"Last name\" value={user.lastName} />\r\n                    <UserDetail label=\"Username\" value={user.username} />\r\n                    <UserDetail label=\"Email\" value={user.email} />\r\n                    <UserDetail label=\"Phone\" value={user.phoneNumber ? formatPhoneNumber(user.phoneNumber) : 'None'} />\r\n                </View>\r\n                <View style={styles.settingsList}>\r\n                    <SettingsBar\r\n                        title='Categories'\r\n                        subtitle='Modify your list of existing categories'\r\n                        onPress={() => navigation.navigate('CategorySettings')}\r\n                        topBorder />\r\n                    <SettingsBar\r\n                        title='Merchants'\r\n                        subtitle='Modify your list of existing merchants'\r\n                        onPress={() => navigation.navigate('MerchantSettings')}\r\n                        topBorder />\r\n                    <SettingsBar\r\n                        title='Security'\r\n                        subtitle='View or change your password'\r\n                        onPress={() => alert('Security screen is not yet implemented.')}\r\n                        topBorder />\r\n                    <SettingsBar\r\n                        title='Notifications'\r\n                        subtitle='Choose how often you want to recieve notifications'\r\n                        onPress={() => alert('Notifications screen is not yet implemented.')}\r\n                        topBorder />\r\n                    <SettingsBar\r\n                        title='Help'\r\n                        subtitle='Contact our Helpdesk'\r\n                        onPress={() => alert('Help screen is not yet implemented.')}\r\n                        topBorder />\r\n                    <SettingsBar\r\n                        title='Privacy Policy'\r\n                        subtitle='Learn more about this app'\r\n                        onPress={() => alert('Privacy policy screen is not yet implemented.')}\r\n                        topBorder\r\n                        bottomBorder />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    logoutBtn: {\r\n        color: 'red',\r\n        paddingRight: 30,\r\n        fontWeight: 'bold',\r\n        fontSize: 17,\r\n    },\r\n    userIcon: {\r\n        alignSelf: 'center',\r\n        marginTop: 10,\r\n        marginBottom: 20,\r\n    },\r\n    userDetailsContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    settingsList: {\r\n        marginTop: 25,\r\n        marginBottom: 20,\r\n    },\r\n});\r\n","export const colorsList = [\n    '#EB4034',\n    '#EB7734',\n    '#EBC034',\n    '#FFFF00',\n    '#D3EB34',\n    '#96EB34',\n    '#30B027',\n    '#27B097',\n    '#2797B0',\n    '#273BB0',\n    '#784FD6',\n    '#773D9C',\n    '#B662BF',\n    '#ED72D0',\n    '#B82562',\n    '#99DDFF',\n    '#ABE8A9',\n    '#E6E287',\n    '#77768C',\n    '#DDDDDD'\n]","import { Alert, ActivityIndicator, TouchableHighlight } from 'react-native';\r\nimport { Text, View, RequiredField } from '../../components/Themed';\r\nimport Button from '../../components/buttons/Button';\r\nimport React, { useState } from 'react';\r\nimport Styles from '../../constants/Styles';\r\nimport { RootStackScreenProps } from '../../types';\r\nimport TextInput from '../../components/forms/TextInput';\r\nimport ColorPalette from 'react-native-color-palette';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useLazyQuery, useMutation, useQuery } from '@apollo/client';\r\nimport { CreateCategoryDocument, CreateCategoryMutation, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables } from '../../components/generated';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { colorsList } from '../../constants/CategoryColors';\r\nimport { Form } from '../../components/forms/Form';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useRefresh } from '../../hooks/useRefresh';\r\n\r\nexport default function CreateCategoryScreen({ navigation, route }: RootStackScreenProps<'CreateCategory'>) {\r\n  const [name, setName] = useState(route.params?.name || '')\r\n  const [color, setColor] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [check, setCheck] = useState(false) // true if need to check required fields\r\n\r\n  const [getCategories, { data: categoriesData, refetch }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n    onError: (error => {\r\n      Alert.alert(error.message);\r\n    }),\r\n  });\r\n  const passwordHash = useAuth({\r\n    onRetrieved: (passwordHash) => getCategories({ variables: { passwordHash } }),\r\n    redirect: 'ifUnauthorized',\r\n  });\r\n  useRefresh(() => refetch({ passwordHash }));\r\n\r\n  // Create category graphql query\r\n  const [createCategory, { loading, data }] = useMutation<CreateCategoryMutation>(CreateCategoryDocument, {\r\n    variables: { passwordHash, name, color, details },\r\n    onError: (error => {\r\n      Alert.alert(error.message);\r\n    }),\r\n    onCompleted: (data => {\r\n      if (data.createCategory.__typename === 'CategorySuccess') {\r\n        AsyncStorage.setItem('New Category', JSON.stringify({ name, id: data.createCategory.category.id }))\r\n          .then(() => navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"Root\"))\r\n          .catch((err) => console.log(\"Couldn't store new category\"))\r\n      }\r\n    })\r\n  })\r\n\r\n  const categoryTaken = () => {\r\n    if (categoriesData?.categories.__typename === 'CategoriesSuccess') {\r\n      return categoriesData.categories.categories.find((cat) => {\r\n        return cat.name.toLowerCase() === name.toLowerCase()\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const colorTaken = () => {\r\n    if (categoriesData?.categories.__typename === 'CategoriesSuccess') {\r\n      return categoriesData.categories.categories.find((cat) => {\r\n        return cat.colourHex.toLowerCase() === color.toLowerCase()\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function onSubmit() {\r\n    setCheck(true);\r\n    if (color && name && !categoryTaken() && !colorTaken()) createCategory();\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <View style={Styles.container}>\r\n        {\r\n          loading ?\r\n            <ActivityIndicator size=\"large\" />\r\n            :\r\n            data?.createCategory.__typename === 'CategorySuccess' ?\r\n              <Text>Category created successfully! Redirecting...</Text> : <Text>{data?.createCategory.errorMessage}</Text>\r\n        }\r\n        <TouchableHighlight>\r\n          <TextInput\r\n            onChangeText={setName}\r\n            value={name}\r\n            placeholder=\"Name\"\r\n          />\r\n        </TouchableHighlight>\r\n        {check && categoryTaken() ? <Text style={Styles.alert}>This category already exists</Text> : <></>}\r\n        <RequiredField check={check} input={name} />\r\n        <View style={Styles.palette}>\r\n          <ColorPalette\r\n            onChange={(color: string) => setColor(color.substring(1))}\r\n            value={'#' + color}\r\n            colors={colorsList}\r\n            titleStyles={Styles.colorTitle}\r\n            title={\"Select Category Color:\"}\r\n            icon={<Ionicons name=\"checkmark-circle-outline\" size={30} color=\"black\" />}\r\n          />\r\n        </View>\r\n        {check && colorTaken() ? <Text style={Styles.alert}>There is already a category with this color</Text> : <></>}\r\n        <RequiredField check={check} input={color} />\r\n        <TouchableHighlight>\r\n          <TextInput\r\n            onChangeText={(details) => setDetails(details)}\r\n            value={details}\r\n            placeholder=\"Details\"\r\n          />\r\n        </TouchableHighlight>\r\n        <Button text=\"Save Category\" onPress={onSubmit} accessibilityLabel={'Save Category Button'}></Button>\r\n      </View>\r\n    </Form>\r\n  );\r\n}\r\n","import { TextInput, TextInputProps, StyleSheet, TouchableHighlight, Text, NativeSyntheticEvent, TextInputSelectionChangeEventData } from 'react-native';\r\nimport { MutableRefObject, useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { View } from '../Themed';\r\nimport {\r\n    useFonts,\r\n    B612Mono_400Regular,\r\n    B612Mono_400Regular_Italic,\r\n    B612Mono_700Bold,\r\n    B612Mono_700Bold_Italic\r\n} from '@expo-google-fonts/b612-mono';\r\n\r\nexport interface AmountInputProps {\r\n    onChangeAmount: (amount: number) => void;\r\n    defaultAmount: number;\r\n    onSelect?: () => void;\r\n    /**\r\n     * The error message is fully controlled by the parent.\r\n     */\r\n    errorMessage?: string;\r\n};\r\n\r\nfunction amountToValue(amount: number): string {\r\n    return amount.toFixed(2);\r\n}\r\n\r\nfunction valueToAmount(value: string): number {\r\n    return parseFloat(value);\r\n}\r\n\r\nexport function AmountInput({ onChangeAmount, defaultAmount, onSelect, errorMessage }: AmountInputProps) {\r\n    const [fontLoaded] = useFonts({ B612Mono_700Bold });\r\n    const [value, setValue] = useState(amountToValue(defaultAmount));\r\n    const charWidth = 30;\r\n    const maxLength = 10;\r\n\r\n    function handleChangeText(newValue: string) {\r\n        // Numbers and periods only.\r\n        newValue = newValue.replace(/[^0-9.]/, \"\")\r\n        // One period only (chooses to keep the first one).\r\n        newValue = newValue.replace(/(\\d*\\.\\d*)(\\.)(\\d*)/, '$1$3');\r\n        // Only two digits after the decimal point.\r\n        newValue = newValue.replace(/(\\d*\\.)(\\d{2})(\\d*)/, '$1$2');\r\n\r\n        const amount = valueToAmount(newValue) || 0;\r\n        onChangeAmount(amount);\r\n        setValue(newValue);\r\n    }\r\n\r\n    function handleFocus() {\r\n        onSelect && onSelect();\r\n    }\r\n\r\n    if (!fontLoaded) {\r\n        return <View></View>;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableHighlight style={styles.dollarSignAndInput}>\r\n                <>\r\n                    <Text style={styles.dollarSign}>$</Text>\r\n                    <TextInput\r\n                        keyboardType='numeric'\r\n                        style={[styles.input, { fontSize: 50, width: (value?.length || 0) * charWidth + charWidth }]}\r\n                        value={value}\r\n                        onChangeText={handleChangeText}\r\n                        maxLength={maxLength}\r\n                        onBlur={() => setValue((valueToAmount(value) || 0).toFixed(2))}\r\n                        onFocus={handleFocus}\r\n                        selectTextOnFocus />\r\n                </>\r\n            </TouchableHighlight>\r\n            {\r\n                errorMessage !== undefined && errorMessage.length > 0 &&\r\n                <Text style={styles.error}>{errorMessage}</Text>\r\n            }\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    dollarSignAndInput: {\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n    },\r\n    dollarSign: {\r\n        fontSize: 20,\r\n        marginRight: 5,\r\n        paddingBottom: 15,\r\n    },\r\n    input: {\r\n        fontFamily: 'B612Mono_700Bold', // Must be a monospaced font\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontSize: 18,\r\n    },\r\n});\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { StyleSheet, View, Text, TouchableHighlight } from \"react-native\";\r\nimport Forms from \"../../constants/Forms\";\r\n\r\nexport interface DisplayFieldProps {\r\n    label: string;\r\n    value: string;\r\n    onPress?: () => void;\r\n    /**\r\n     * Setting this prop only does anything if onPress is also set.\r\n     * Should be set whenever onPress is set.\r\n     */\r\n    focused?: boolean;\r\n}\r\n\r\n/**\r\n * A simple field for displaying text. It can be interactive or non-interactive\r\n * depending on whether onPress is defined.\r\n */\r\nexport function DisplayField({ label, value, onPress, ...otherProps }: DisplayFieldProps) {\r\n    const [focused, setFocused] = useState(otherProps.focused !== undefined ? otherProps.focused : false);\r\n    const backgroundColor = !onPress || focused ? 'rgba(0,0,0,0.1)' : 'white';\r\n    const containerStyle = useMemo(() => {\r\n        return [styles.container, { backgroundColor }];\r\n    }, [backgroundColor]);\r\n\r\n    useEffect(() => {\r\n        if (otherProps.focused !== undefined) setFocused(otherProps.focused);\r\n    }, [otherProps.focused]);\r\n\r\n    return (\r\n        <>\r\n            <TouchableHighlight\r\n                style={containerStyle}\r\n                onPress={() => { setFocused(true); onPress && onPress(); }}\r\n                underlayColor=\"rgba(0,0,0,0.1)\">\r\n                <View style={styles.content}>\r\n                    <Text style={styles.label}>{label}</Text>\r\n                    <Text style={styles.value}>{value}</Text>\r\n                </View>\r\n            </TouchableHighlight>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'rgba(0,0,0,0.1)',\r\n        paddingVertical: Forms.verticalSpacing,\r\n        alignItems: 'center',\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    content: {\r\n        width: 320,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        fontSize: Forms.fontSize,\r\n        fontWeight: 'bold',\r\n        width: 100,\r\n        textAlign: 'right',\r\n        paddingRight: Forms.horizontalSpacing,\r\n    },\r\n    value: {\r\n        width: 220,\r\n        fontSize: Forms.fontSize,\r\n    },\r\n});\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { StyleSheet, TouchableHighlight, View, Text, TextInput, TouchableOpacity } from \"react-native\";\r\nimport Forms from \"../../constants/Forms\";\r\n\r\nexport interface InputFieldProps {\r\n    label: string;\r\n    placeholder: string;\r\n    defaultValue?: string;\r\n    onChange: (value: string) => void;\r\n    /**\r\n     * The error message is fully controlled by the parent.\r\n     */\r\n    errorMessage?: string;\r\n}\r\n\r\nexport function InputField({ label, placeholder, defaultValue, onChange, errorMessage }: InputFieldProps) {\r\n    const [focused, setFocused] = useState(false);\r\n    const inputRef = useRef<TextInput>(null);\r\n    const backgroundColor = focused ? 'rgba(0,0,0,0.1)' : 'white';\r\n    const containerStyle = useMemo(() => {\r\n        return [styles.container, { backgroundColor }]\r\n    }, [backgroundColor]);\r\n\r\n    useEffect(() => {\r\n        if (focused) inputRef.current?.focus();\r\n    }, [focused]);\r\n\r\n    return (\r\n        <TouchableHighlight style={containerStyle} onPress={() => setFocused(true)} underlayColor=\"rgba(0,0,0,0.1)\">\r\n            <>\r\n                <View style={styles.content}>\r\n                    <Text style={styles.label}>{label}</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"grey\"\r\n                        placeholder={placeholder}\r\n                        defaultValue={defaultValue || ''}\r\n                        editable={focused}\r\n                        ref={inputRef}\r\n                        onBlur={() => setFocused(false)}\r\n                        onChangeText={onChange}\r\n                        pointerEvents=\"none\" />\r\n                </View>\r\n                {\r\n                    errorMessage !== undefined && errorMessage.length > 0 &&\r\n                    <Text style={styles.error}>{errorMessage}</Text>\r\n                }\r\n            </>\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'rgba(0,0,0,0.1)',\r\n        paddingVertical: Forms.verticalSpacing,\r\n        alignItems: 'center',\r\n    },\r\n    content: {\r\n        width: 320,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        fontSize: Forms.fontSize,\r\n        fontWeight: 'bold',\r\n        width: 100,\r\n        textAlign: 'right',\r\n        paddingRight: Forms.horizontalSpacing,\r\n    },\r\n    input: {\r\n        width: 220,\r\n        fontSize: Forms.fontSize,\r\n        color: 'black',\r\n    },\r\n    error: {\r\n        paddingTop: 10,\r\n        color: 'red',\r\n        alignSelf: 'center',\r\n        fontSize: Forms.errorFontSize,\r\n    },\r\n});\r\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { CreateMerchantDocument, CreateMerchantMutation, CreateMerchantMutationVariables, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables, GetMerchantsQueryVariables, MerchantsAndCategoriesDocument, MerchantsAndCategoriesQuery, MerchantsAndCategoriesQueryVariables } from \"../generated\";\r\n\r\nimport { StyleSheet, View, Text, TextInput, TouchableHighlight, Keyboard, TouchableWithoutFeedback, Alert } from 'react-native';\r\nimport Colors from \"../../constants/Colors\";\r\nimport { AmountInput } from \"./AmountInput\";\r\nimport { AntDesign, Feather } from '@expo/vector-icons';\r\nimport Button from \"../buttons/Button\";\r\nimport { GetMerchantsQuery, GetMerchantsDocument } from \"../generated\";\r\nimport { DropdownRow } from \"./DropdownRow\";\r\nimport CalendarPicker from \"react-native-calendar-picker\";\r\nimport moment, { Moment } from \"moment\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { InputRow } from \"./InputRow\";\r\nimport { Form } from \"./Form\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { DisplayField } from \"./DisplayField\";\r\nimport { InputField } from \"./InputField\";\r\nimport { DropdownField } from \"./DropdownField\";\r\n\r\nexport type FormValues = {\r\n    amount: number;\r\n    merchantId?: number;\r\n    categoryId?: number;\r\n    date: string;\r\n    desc?: string;\r\n};\r\n\r\nexport interface ExpenseEditFormProps {\r\n    /**\r\n     * Values to initial the form fields with.\r\n     */\r\n    initVals?: FormValues;\r\n    onSubmit: (vals: FormValues) => void;\r\n}\r\n\r\nexport function ExpenseEditForm({ initVals, onSubmit }: ExpenseEditFormProps) {\r\n    const [getMerchantsAndCategories, { data, refetch }] = useLazyQuery<MerchantsAndCategoriesQuery, MerchantsAndCategoriesQueryVariables>(MerchantsAndCategoriesDocument, {\r\n        onError: () => alert('Error occurred while fetching merchants and categories.'),\r\n    });\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => getMerchantsAndCategories({ variables: { passwordHash } }),\r\n    });\r\n    useRefresh(refetch);\r\n\r\n    const [createMerchant, { }] = useMutation<CreateMerchantMutation, CreateMerchantMutationVariables>(CreateMerchantDocument);\r\n\r\n    const [amount, setAmount] = useState(initVals?.amount || 0);\r\n    const [merchantId, setMerchantId] = useState(initVals?.merchantId);\r\n    const [categoryId, setCategoryId] = useState(initVals?.categoryId);\r\n    const [calendarShown, setCalendarShown] = useState(false);\r\n    const [date, setDate] = useState(initVals?.date || moment().toISOString());\r\n    const [desc, setDesc] = useState(initVals?.desc || '');\r\n    const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][moment(date).month()];\r\n    const day = moment(date).date();\r\n    const year = moment(date).year();\r\n    const [amountError, setAmountError] = useState('');\r\n    const nav = useNavigation();\r\n    const [defaultCategory, setDefaultCategory] = useState<string>();\r\n\r\n    function handleSubmit() {\r\n        if (amount === 0) {\r\n            setAmountError('Please enter a non-zero amount.');\r\n            return;\r\n        }\r\n        onSubmit({\r\n            amount: amount,\r\n            merchantId: merchantId,\r\n            categoryId: categoryId,\r\n            date: date,\r\n            desc: desc,\r\n        });\r\n    }\r\n\r\n    function handleAmountChange(newAmount: number) {\r\n        if (newAmount !== 0) {\r\n            setAmountError('');\r\n        }\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    function handleMerchantChange(id: string) {\r\n        if (data?.merchants.__typename === 'MerchantsSuccess') {\r\n            const merchant = data.merchants.merchants.find(merch => merch.id === parseInt(id));\r\n            setDefaultCategory(merchant?.defaultCategory?.name);\r\n            setCategoryId(merchant?.defaultCategory?.id);\r\n        }\r\n        setMerchantId(parseInt(id));\r\n    }\r\n\r\n    function handleCreateMerchant(value: string) {\r\n        if (!value) {\r\n            nav.navigate('CreateMerchant');\r\n            return;\r\n        }\r\n        createMerchant({\r\n            variables: { passwordHash, name: value },\r\n            onCompleted: (response) => {\r\n                if (response.createMerchant.__typename === 'MerchantSuccess') {\r\n                    refetch();\r\n                    setMerchantId(response.createMerchant.merchant.id);\r\n                } else {\r\n                    alert('Failed to create merchant.');\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    function handleCreateCategory(value: string) {\r\n        nav.navigate('CreateCategory', { name: value });\r\n    }\r\n\r\n    return (\r\n        <Form onDismissKeyboard={() => { setCalendarShown(false); }}>\r\n            <AmountInput onChangeAmount={handleAmountChange} defaultAmount={initVals?.amount || 0} errorMessage={amountError} />\r\n            <>\r\n                {\r\n                    data?.merchants.__typename === 'MerchantsSuccess' &&\r\n                    <DropdownField\r\n                        label=\"Merchant\"\r\n                        placeholder=\"optional\"\r\n                        data={\r\n                            data.merchants.merchants.map(x => { return { id: x.id.toString(), value: x.name } })\r\n                        }\r\n                        defaultValue={\r\n                            initVals ?\r\n                                data.merchants.merchants.find((merch) => merch.id === initVals.merchantId)?.name\r\n                                : undefined\r\n                        }\r\n                        onFocus={() => setCalendarShown(false)}\r\n                        onChange={handleMerchantChange}\r\n                        onCreateNew={handleCreateMerchant} />\r\n                }\r\n            </>\r\n            <>\r\n                {\r\n                    data?.categories.__typename === 'CategoriesSuccess' &&\r\n                    <DropdownField\r\n                        label=\"Category\"\r\n                        placeholder=\"optional\"\r\n                        data={data.categories.categories.map(x => { return { id: x.id.toString(), value: x.name, color: '#' + x.colourHex } })}\r\n                        defaultValue={\r\n                            initVals ?\r\n                                data.categories.categories.find((cat) => cat.id === initVals.categoryId)?.name\r\n                                : undefined\r\n                        }\r\n                        cachedValue={defaultCategory}\r\n                        onFocus={() => setCalendarShown(false)}\r\n                        onChange={id => setCategoryId(parseInt(id))}\r\n                        onCreateNew={handleCreateCategory} />\r\n                }\r\n            </>\r\n            <>\r\n                <DisplayField label=\"Date\" value={`${month} ${day} ${year}`} onPress={() => setCalendarShown(true)} focused={calendarShown} />\r\n                <View>\r\n                    {\r\n                        calendarShown &&\r\n                        <View style={styles.calendarContainer}>\r\n                            <CalendarPicker\r\n                                onDateChange={(date, type) => { setDate(date.toISOString()); setCalendarShown(false); }}\r\n                                initialDate={moment(date).toDate()}\r\n                                selectedStartDate={moment(date).toDate()}\r\n                                width={300} />\r\n                        </View>\r\n                    }\r\n                </View>\r\n                <View style={styles.detailsRow}>\r\n                    <InputField label=\"Details\" placeholder=\"optional\" onChange={setDesc} />\r\n                </View>\r\n                <View style={styles.buttonContainer}>\r\n                    <Button\r\n                        text=\"Save Expense\"\r\n                        accessibilityLabel=\"Button to Save Expense\"\r\n                        onPress={handleSubmit} />\r\n                </View>\r\n            </>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    categoriesRow: {\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    detailsRow: {\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingTop: 60,\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    calendarContainer: {\r\n        alignSelf: 'center',\r\n        width: 300,\r\n        backgroundColor: 'white',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        position: 'absolute',\r\n        top: -5,\r\n        left: '50%',\r\n        transform: [{ translateX: -150 }],\r\n    },\r\n});\r\n","import { useMutation } from \"@apollo/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { CreateExpenseDocument, CreateExpenseMutation } from \"../components/generated\";\r\nimport { RootStackScreenProps } from \"../types\";\r\nimport { ExpenseEditForm, FormValues } from \"../components/forms/ExpenseEditForm\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport moment from \"moment\";\r\n\r\nexport default function CreateExpenseScreen({ navigation, route }: RootStackScreenProps<'CreateExpense'>) {\r\n    const passwordHash = useAuth({ redirect: 'ifUnauthorized' });\r\n    const [submit, { }] = useMutation<CreateExpenseMutation>(CreateExpenseDocument);\r\n\r\n    function handleSubmit(vals: FormValues) {\r\n        submit({\r\n            variables: {\r\n                passwordHash: passwordHash,\r\n                amount: vals.amount,\r\n                epochDate: moment(vals.date).unix(),\r\n                merchantId: vals.merchantId || null,\r\n                categoryId: vals.categoryId || null,\r\n                desc: vals.desc || null,\r\n            },\r\n            onCompleted: (response) => {\r\n                if (response.createExpense.__typename === 'ExpenseSuccess') {\r\n                    navigation.navigate('Root', { screen: 'Expenses' });\r\n                } else if (response.createExpense.__typename === 'FailurePayload') {\r\n                    alert('Error creating expense: ' + response.createExpense.exceptionName);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExpenseEditForm onSubmit={handleSubmit} />\r\n    );\r\n}\r\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport moment, { Moment } from \"moment\";\r\nimport { Budget, CreateBudgetCategoryDocument, CreateBudgetCategoryMutation, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables } from \"../../components/generated\";\r\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { AmountInput } from \"../../components/forms/AmountInput\";\r\nimport { DropdownRow } from \"../../components/forms/DropdownRow\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { Form } from \"../../components/forms/Form\";\r\nimport { InputRow } from \"../../components/forms/InputRow\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport { DisplayField } from \"../../components/forms/DisplayField\";\r\nimport { DropdownField } from \"../../components/forms/DropdownField\";\r\n\r\nexport default function CreateBudgetScreen({ navigation, route }: RootStackScreenProps<'CreateBudget'>) {\r\n    const [getCategories, { data, refetch }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument);\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => getCategories({ variables: { passwordHash } }),\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => refetch({ passwordHash }));\r\n\r\n    const [amount, setAmount] = useState(0);\r\n    const [categoryId, setCategoryId] = useState<number | null>(null);\r\n    const [budget, setBudget] = useState<Budget | null>(route.params.budget || null);\r\n    const [amountError, setAmountError] = useState('');\r\n    const [check, setCheck] = useState(false);\r\n\r\n    const [createBudget] = useMutation<CreateBudgetCategoryMutation>(CreateBudgetCategoryDocument, {\r\n        variables: { passwordHash, budgetId: budget?.id, categoryId, amount },\r\n        onError: (error => {\r\n            alert(error.message);\r\n        }),\r\n        onCompleted: ((response) => {\r\n            if (response.createBudgetCategory.__typename == \"BudgetCategorySuccess\") {\r\n                navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"Root\", { screen: \"Budget\" });\r\n            }\r\n        })\r\n    });\r\n\r\n    function selectCategory(name: string) {\r\n        if (data?.categories.__typename === 'CategoriesSuccess') {\r\n            const found = data?.categories.categories.find(cat => cat.name === name);\r\n            if (found !== undefined) {\r\n                setCategoryId(found?.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleBudgetCreation() {\r\n        let noErrors = true;\r\n\r\n        if (amount == 0) {\r\n            setAmountError(\"Please enter a non-zero amount.\");\r\n            noErrors = false;\r\n        }\r\n        if (budget == null || budget.id == null) {\r\n            alert(\"Parent budget not found\");\r\n            noErrors = false;\r\n        }\r\n        if (categoryId == null) {\r\n            setCheck(true);\r\n            noErrors = false;\r\n        }\r\n\r\n        if (noErrors) createBudget();\r\n    }\r\n\r\n    function handleChangeAmount(newAmount: number) {\r\n        if (newAmount !== 0) {\r\n            setAmountError('');\r\n        }\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    function handleCreateCategory(value: string) {\r\n        navigation.navigate('CreateCategory', { name: value });\r\n        setCheck(false);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <AmountInput\r\n                defaultAmount={0}\r\n                onChangeAmount={handleChangeAmount}\r\n                errorMessage={amountError} />\r\n            <DropdownField\r\n                label=\"Category\"\r\n                placeholder=\"required\"\r\n                data={\r\n                    data?.categories.__typename === 'CategoriesSuccess' ?\r\n                        data.categories.categories.filter(filterCat => {\r\n                            const lookingForOverlap = budget?.budgetCategories?.find((other) => other.category.name == filterCat.name);\r\n                            return lookingForOverlap === undefined;\r\n                        }).map(x => { return { value: x.name, id: x.id.toString(), color: '#' + x.colourHex } }) : []\r\n                }\r\n                onChange={(id) => setCategoryId(parseInt(id))}\r\n                onCreateNew={handleCreateCategory}\r\n                required\r\n                check={check} />\r\n            <DisplayField label=\"Month\" value={`${budget?.month} ${budget?.year}`} />\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    text=\"Create New Budget\"\r\n                    accessibilityLabel=\"Button to Create New Budget\"\r\n                    onPress={() => handleBudgetCreation()} />\r\n            </View>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    dollarSign: {\r\n        fontSize: 20,\r\n        marginRight: 5,\r\n        paddingBottom: 15,\r\n    },\r\n    amountInput: {\r\n        fontSize: 50,\r\n        height: 200,\r\n        width: 100,\r\n        padding: 0,\r\n    },\r\n    row: {\r\n        alignItems: 'center',\r\n        borderTopWidth: 1,\r\n        borderTopColor: 'rgba(0,0,0,0.3)',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 30,\r\n    },\r\n    fieldContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: 320,\r\n    },\r\n    fieldLabelAndInputContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: 280,\r\n    },\r\n    fieldLabel: {\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n    },\r\n    fieldInput: {\r\n        fontSize: 15,\r\n        width: 180\r\n    },\r\n    detailsIconAndLabel: {\r\n        flexDirection: 'row',\r\n        paddingHorizontal: 0,\r\n        marginRight: 27,\r\n        alignItems: 'center',\r\n    },\r\n    detailsIcon: {\r\n        transform: [{ rotateZ: '90deg' }, { rotateY: '180deg' }],\r\n        marginRight: 5,\r\n    },\r\n    detailsInput: {\r\n        fontSize: 15,\r\n        width: 250,\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingTop: 60,\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    listItem: {\r\n        fontSize: 15,\r\n    },\r\n    calendarContainer: {\r\n        alignSelf: 'center',\r\n        width: 300,\r\n        backgroundColor: 'white',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        position: 'absolute',\r\n        top: 43,\r\n        left: '50%',\r\n        transform: [{ translateX: -150 }],\r\n    },\r\n});","import { TouchableHighlight, StyleSheet } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nexport interface TrashButtonProps {\r\n    onPress: () => void;\r\n}\r\n\r\nexport function TrashButton({ onPress }: TrashButtonProps) {\r\n    return (\r\n        <TouchableHighlight style={styles.container} onPress={onPress} underlayColor=\"rgba(0,0,0,0.1)\">\r\n            <AntDesign name=\"delete\" size={24} color=\"red\" />\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: 44,\r\n        height: 44,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 22,\r\n    },\r\n});\r\n","import { StyleSheet } from 'react-native';\n\nconst modalStyle = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'space-between',\n      alignItems: \"center\",\n      marginVertical: '50%',\n      marginHorizontal: '10%',\n      backgroundColor: \"white\",\n      borderRadius: 20,\n      padding: 35,\n      paddingBottom: 40,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n    },\n    buttonView: {\n      flexDirection: 'row',\n      width: 250,\n      justifyContent: 'space-between'\n    },\n    title: {\n      fontSize: 26,\n      // marginHorizontal: 25,\n      marginBottom: '10%',\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n    text: {\n      fontSize: 16,\n      textAlign: 'center'\n    },\n    warning: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      marginBottom: 5\n    }\n  });\n\n  export default modalStyle;","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { Budget, BudgetCategory, DeleteBudgetCategoryDocument, DeleteBudgetCategoryMutation, DeleteBudgetCategoryMutationVariables, UpdateBudgetCategoryDocument, UpdateBudgetCategoryMutation, UpdateBudgetCategoryMutationVariables } from \"../../components/generated\";\r\nimport { View, Text, TextInput, StyleSheet, Modal } from \"react-native\";\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { Row } from \"../../components/forms/Row\";\r\nimport { AmountInput } from \"../../components/forms/AmountInput\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { Form } from \"../../components/forms/Form\";\r\nimport { InputRow } from \"../../components/forms/InputRow\";\r\nimport { TrashButton } from \"../../components/buttons/TrashButton\";\r\nimport { DisplayField } from \"../../components/forms/DisplayField\";\r\nimport modalStyle from \"../../constants/Modal\";\r\n\r\nexport default function UpdateBudgetScreen({ navigation, route }: RootStackScreenProps<'EditBudget'>) {\r\n    const passwordHash = useAuth({ redirect: 'ifUnauthorized' });\r\n    const [amount, setAmount] = useState(route.params.budgetCategory.amount);\r\n    const budgetCategory = route.params.budgetCategory;\r\n    const [amountError, setAmountError] = useState('');\r\n    const [confirmDelete, setConfirmDelete] = useState(false);\r\n\r\n    const [updateBudget] = useMutation<UpdateBudgetCategoryMutation, UpdateBudgetCategoryMutationVariables>(UpdateBudgetCategoryDocument, {\r\n        variables: { passwordHash, id: budgetCategory?.id, amount },\r\n        onError: (error => {\r\n            alert(error.message);\r\n        }),\r\n        onCompleted: ((response) => {\r\n            if (response.updateBudgetCategory.__typename == 'BudgetCategorySuccess') {\r\n                navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"Root\", { screen: \"Budget\" });\r\n            }\r\n        })\r\n    });\r\n\r\n    const [deleteBudget] = useMutation<DeleteBudgetCategoryMutation, DeleteBudgetCategoryMutationVariables>(DeleteBudgetCategoryDocument, {\r\n        variables: { passwordHash, id: budgetCategory?.id },\r\n        onCompleted: ((response) => {\r\n            if (response.deleteBudgetCategory.__typename == 'DeleteSuccess') {\r\n                navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"Root\", { screen: \"Budget\" });\r\n            }\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: (_) => <TrashButton onPress={() => setConfirmDelete(true)} />\r\n        });\r\n    }, []);\r\n\r\n    function handleSubmit() {\r\n        if (amount === 0) {\r\n            setAmountError('Please enter a non-zero amount.');\r\n            return;\r\n        }\r\n        updateBudget();\r\n    }\r\n\r\n    function handleChangeAmount(newAmount: number) {\r\n        if (newAmount !== 0) {\r\n            setAmountError('');\r\n        }\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <AmountInput defaultAmount={amount} onChangeAmount={handleChangeAmount} errorMessage={amountError} />\r\n            <DisplayField label=\"Category\" value={budgetCategory.category.name} />\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    text=\"Save Budget\"\r\n                    accessibilityLabel=\"Button to Save Budget\"\r\n                    onPress={handleSubmit} />\r\n            </View>\r\n            <Modal\r\n                transparent={true}\r\n                visible={confirmDelete}\r\n                onRequestClose={() => setConfirmDelete(false)}\r\n            >\r\n                <View style={modalStyle.container}>\r\n                    <Text style={modalStyle.title}>Delete Budget?</Text>\r\n                    <Text style={modalStyle.text}>Are you sure you want to delete this budget?</Text>\r\n                    <View style={modalStyle.buttonView}>\r\n                        <Button text=\"Cancel\" onPress={() => setConfirmDelete(false)} size='half' accessibilityLabel='Cancel button' />\r\n                        <Button text=\"Delete\" onPress={() => deleteBudget()} size='half' backgroundColor='red' accessibilityLabel='Delete Category button' />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonContainer: {\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginTop: 60,\r\n    },\r\n});\r\n","import { useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Modal, View, Text } from \"react-native\";\r\nimport { DeleteExpenseDocument, DeleteExpenseMutation, UpdateExpenseDocument, UpdateExpenseMutation } from \"../components/generated\";\r\n\r\nimport { RootStackScreenProps } from \"../types\";\r\nimport { ExpenseEditForm, FormValues } from \"../components/forms/ExpenseEditForm\";\r\nimport moment from \"moment\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { TrashButton } from \"../components/buttons/TrashButton\";\r\nimport modalStyle from \"../constants/Modal\";\r\nimport Button from \"../components/buttons/Button\";\r\n\r\nexport default function UpdateExpenseScreen({ navigation, route }: RootStackScreenProps<'UpdateExpense'>) {\r\n    const passwordHash = useAuth({ redirect: 'ifUnauthorized' });\r\n    const [confirmDelete, setConfirmDelete] = useState(false);\r\n    const [submit, { }] = useMutation<UpdateExpenseMutation>(UpdateExpenseDocument);\r\n    const [deleteExpense, { }] = useMutation<DeleteExpenseMutation>(DeleteExpenseDocument, {\r\n        variables: {\r\n            passwordHash: passwordHash,\r\n            id: route.params?.id,\r\n        },\r\n        onCompleted: (response) => {\r\n            if (response.deleteExpense.__typename === 'DeleteSuccess') {\r\n                navigation.navigate('Root', { screen: \"Expenses\" });\r\n            } else if (response.deleteExpense.__typename === 'FailurePayload') {\r\n                alert(\"Error deleting expense: \" + response.deleteExpense.exceptionName);\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: (_) => <TrashButton onPress={() => setConfirmDelete(true)} />\r\n        });\r\n    }, []);\r\n\r\n    function handleSubmit(vals: FormValues) {\r\n        submit({\r\n            variables: {\r\n                passwordHash: passwordHash,\r\n                id: route.params?.id || -1, // TODO is params is undefined show error on screen\r\n                amount: vals.amount,\r\n                epochDate: moment(vals.date).unix(),\r\n                merchantId: vals.merchantId || null,\r\n                categoryId: vals.categoryId || null,\r\n                desc: vals.desc || null\r\n            },\r\n            onCompleted: (response) => {\r\n                if (response.updateExpense.__typename === 'ExpenseSuccess') {\r\n                    navigation.navigate('ExpenseDetails', { expenseId: route.params?.id || 0 });\r\n                } else if (response.updateExpense.__typename === 'FailurePayload') {\r\n                    alert('Error occurred while trying to update expense: ' + response.updateExpense.exceptionName);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ExpenseEditForm onSubmit={handleSubmit} initVals={{\r\n                amount: route.params?.amount || 0,\r\n                merchantId: route.params?.merchant?.id,\r\n                categoryId: route.params?.category?.id,\r\n                date: route.params?.date || moment().toString(),\r\n                desc: route.params?.desc,\r\n            }} />\r\n            <Modal\r\n                transparent={true}\r\n                visible={confirmDelete}\r\n                onRequestClose={() => setConfirmDelete(false)}\r\n            >\r\n                <View style={modalStyle.container}>\r\n                    <Text style={modalStyle.title}>Delete Expense?</Text>\r\n                    <Text style={modalStyle.text}>Are you sure you want to delete this expense?</Text>\r\n                    <View style={modalStyle.buttonView}>\r\n                        <Button text=\"Cancel\" onPress={() => setConfirmDelete(false)} size='half' accessibilityLabel='Cancel button' />\r\n                        <Button text=\"Delete\" onPress={() => { deleteExpense() }} size='half' backgroundColor='red' accessibilityLabel='Delete Category button' />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import { StyleSheet, Alert, ActivityIndicator, Modal, TouchableHighlight } from 'react-native';\r\n\r\nimport { Text, View, RequiredField } from '../../components/Themed';\r\nimport Button from '../../components/buttons/Button';\r\nimport React, { useState } from 'react';\r\nimport Styles from '../../constants/Styles';\r\nimport { RootStackScreenProps } from '../../types';\r\nimport TextInput from '../../components/forms/TextInput';\r\nimport ColorPalette from 'react-native-color-palette';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useLazyQuery, useMutation } from '@apollo/client';\r\nimport { UpdateCategoryDocument, UpdateCategoryMutation, GetCategoriesQuery, GetCategoriesDocument, DeleteCategoryMutation, DeleteCategoryDocument, GetCategoriesQueryVariables } from '../../components/generated';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { colorsList } from '../../constants/CategoryColors';\r\nimport modalStyle from '../../constants/Modal';\r\nimport { Form } from \"../../components/forms/Form\";\r\n\r\nexport default function EditCategoryScreen({ navigation, route }: RootStackScreenProps<'EditCategory'>) {\r\n\r\n  const { id, name, color, details } = route.params\r\n  const [check, setCheck] = useState(false)\r\n  const [newName, setNewName] = useState(name)\r\n  const [newColor, setNewColor] = useState(color)\r\n  const [confirmDelete, setConfirmDelete] = useState(false)\r\n  const [newDetails, setNewDetails] = useState(details)\r\n\r\n  const passwordHash = useAuth({\r\n    onRetrieved: (passwordHash) => getCategories({ variables: { passwordHash } }),\r\n    redirect: 'ifUnauthorized',\r\n  });\r\n\r\n  const [getCategories, { data: categoriesData }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n    onError: (error => {\r\n      Alert.alert(error.message);\r\n    }),\r\n  });\r\n\r\n  const [updateCategory, { loading, data }] = useMutation<UpdateCategoryMutation>(UpdateCategoryDocument, {\r\n    variables: { passwordHash, id, name: newName, color: newColor, details: newDetails },\r\n    onError: (error => {\r\n      Alert.alert(error.message);\r\n    }),\r\n    onCompleted: (data => {\r\n      if (data.updateCategory.__typename === 'CategorySuccess') {\r\n        navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"CategorySettings\");\r\n      }\r\n    })\r\n  });\r\n\r\n  const [deleteCategory, { data: deleteData }] = useMutation<DeleteCategoryMutation>(DeleteCategoryDocument, {\r\n    variables: { passwordHash, id },\r\n    onError: (error => {\r\n      Alert.alert(error.message);\r\n    }),\r\n    onCompleted: (data => {\r\n      if (data.deleteCategory.__typename === 'DeleteSuccess') {\r\n        navigation.canGoBack() ? navigation.goBack() : navigation.navigate(\"CategorySettings\");\r\n      }\r\n    })\r\n  });\r\n\r\n  const categoryTaken = () => {\r\n    if (categoriesData?.categories.__typename === 'CategoriesSuccess') {\r\n      return categoriesData.categories.categories.find((cat) => {\r\n        return cat.id !== id && cat.name.toLowerCase() === newName.toLowerCase()\r\n      });\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  const colorTaken = () => {\r\n    if (categoriesData?.categories.__typename === 'CategoriesSuccess') {\r\n      return categoriesData.categories.categories.find((cat) => {\r\n        return cat.id !== id && cat.colourHex.toLowerCase() === newColor.toLowerCase()\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function onSubmit() {\r\n    setCheck(true);\r\n    if (newColor && newName && !categoryTaken() && !colorTaken()) updateCategory();\r\n  }\r\n\r\n  return (\r\n    <Form backdrop={confirmDelete}>\r\n      <View style={Styles.container}>\r\n        {loading ? (\r\n          <ActivityIndicator size={'large'} />\r\n        ) : (\r\n          (data?.updateCategory.__typename === 'CategorySuccess') ? (\r\n            <Text>Category updated successfully! Redirecting...</Text>\r\n          ) : (\r\n            <Text>{data?.updateCategory.errorMessage}</Text>\r\n          )\r\n        )}\r\n        <TouchableHighlight>\r\n          <TextInput\r\n            onChangeText={(name) => setNewName(name)}\r\n            value={newName}\r\n            placeholder=\"Name\"\r\n          />\r\n        </TouchableHighlight>\r\n        {categoryTaken() ? (\r\n          <Text style={Styles.alert}>This category already exists</Text>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <RequiredField check={check} input={newName} />\r\n        <View style={[Styles.palette]}>\r\n          <ColorPalette\r\n            onChange={(color: string) => setNewColor(color.substring(1))}\r\n            value={'#' + newColor}\r\n            colors={colorsList}\r\n            titleStyles={Styles.colorTitle}\r\n            title={\"Select Category Color:\"}\r\n            icon={<Ionicons name=\"checkmark-circle-outline\" size={30} color=\"black\" />}\r\n          />\r\n        </View>\r\n        {colorTaken() ? (\r\n          <Text style={Styles.alert}>There is already a category with this color</Text>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <RequiredField check={check} input={newColor} />\r\n        <TouchableHighlight>\r\n          <TextInput\r\n            onChangeText={(details) => setNewDetails(details)}\r\n            value={newDetails || undefined}\r\n            placeholder=\"Details\"\r\n          />\r\n        </TouchableHighlight>\r\n        <Button text=\"Save Category\" disabled={confirmDelete} onPress={onSubmit} accessibilityLabel={'Save Category Button'} />\r\n        <Button text=\"Delete Category\" disabled={confirmDelete} backgroundColor='red' onPress={() => setConfirmDelete(true)} accessibilityLabel={'Delete Category Button'} />\r\n        <Modal\r\n\r\n          transparent={true}\r\n          visible={confirmDelete}\r\n          onRequestClose={() => setConfirmDelete(false)}\r\n        >\r\n          <View style={modalStyle.container}>\r\n            <Text style={modalStyle.title}>Delete Category?</Text>\r\n            <Text style={modalStyle.text}>Are you sure you want to delete this category?</Text>\r\n            <Text style={modalStyle.warning}>Warning: Budgets in this category will also be deleted.</Text>\r\n            <View style={modalStyle.buttonView}>\r\n              <Button text=\"Cancel\" onPress={() => setConfirmDelete(false)} size='half' accessibilityLabel='Cancel button' />\r\n              <Button text=\"Delete\" onPress={() => { deleteCategory() }} size='half' backgroundColor='red' accessibilityLabel='Delete Category button' />\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </Form>\r\n  );\r\n}\r\n\r\n\r\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport { Category, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables } from \"../../components/generated\";\r\nimport { ActivityIndicator, Alert, StyleSheet, TouchableHighlight, ColorValue } from \"react-native\";\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { View, Text } from 'react-native';\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { FlatList } from \"react-native\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport { ColorCircle } from \"../../components/ColorCircle\";\r\n\r\ninterface CategoryItemProps {\r\n    id: string;\r\n    name: string;\r\n    colour: ColorValue;\r\n    onPress: (id: string, name: string) => void;\r\n}\r\n\r\nfunction CategoryItem(props: CategoryItemProps) {\r\n    return (\r\n        <TouchableHighlight\r\n            style={styles.row}\r\n            onPress={() => props.onPress(props.id, props.name)}\r\n            underlayColor=\"rgba(0,0,0,0.1)\">\r\n            <View style={styles.itemContainer}>\r\n                <View style={styles.colorAndNameContainer}>\r\n                    <ColorCircle color={props.colour} size={24} />\r\n                    <Text style={{ fontSize: 22, marginHorizontal: 5, marginLeft: 15, fontWeight: 'bold' }}>{props.name}</Text>\r\n                </View>\r\n                <MaterialIcons name=\"navigate-next\" size={28} color=\"black\" />\r\n            </View>\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nexport default function CategorySettingsScreen({ navigation: nav }: RootStackScreenProps<'CategorySettings'>) {\r\n    const [getCategories, { data, loading, refetch }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n        onError: (error) => Alert.alert(error.message),\r\n    });\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => getCategories({ variables: { passwordHash } }),\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    useRefresh(() => refetch({ passwordHash }));\r\n\r\n    function renderCategory({ item }: { item: Category }) {\r\n        return <CategoryItem\r\n            id={item.id.toString()}\r\n            name={item.name}\r\n            colour={item.id === -1 ? 'plus' : `#${item.colourHex}`}\r\n            onPress={() =>\r\n                item.id === -1 ?\r\n                    nav.navigate('CreateCategory')\r\n                    :\r\n                    nav.navigate('EditCategory', {\r\n                        id: item.id,\r\n                        name: item.name,\r\n                        color: `#${item.colourHex}`,\r\n                    })\r\n            } />;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            {loading ? (<ActivityIndicator size='large' />) : (\r\n                data?.categories.__typename === \"CategoriesSuccess\" ? (\r\n                    <FlatList\r\n                        data={\r\n                            [\r\n                                { id: -1, name: 'New category', colourHex: 'ffffff' },\r\n                                ...data.categories.categories.slice().sort((cat1, cat2) => {\r\n                                    return cat1.name > cat2.name ? 1 : -1\r\n                                })\r\n                            ]\r\n                        }\r\n                        renderItem={renderCategory}\r\n                        ListFooterComponent={<View style={{ height: 20 }} />}\r\n                    />\r\n                ) : (\r\n                    <View>\r\n                        <Text>{data?.categories.exceptionName}</Text>\r\n                        <Text>{data?.categories.errorMessage}</Text>\r\n                    </View>\r\n                ))}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    addBtnContainer: {\r\n        position: 'absolute',\r\n        right: 15,\r\n        bottom: 15,\r\n    },\r\n    row: {\r\n        alignItems: 'center',\r\n        paddingVertical: 20,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'rgba(0,0,0,0.1)'\r\n    },\r\n    itemContainer: {\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    colorAndNameContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: 250,\r\n    },\r\n});\r\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DeleteMerchantDocument, DeleteMerchantMutation, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables, GetMerchantsQueryVariables, UpdateMerchantDocument, UpdateMerchantMutation } from \"../../components/generated\";\r\nimport { StyleSheet, View, Text, TextInput, ActivityIndicator, SafeAreaView, Alert, TouchableOpacity, Modal } from 'react-native';\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { AntDesign, Feather } from '@expo/vector-icons';\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { GetMerchantsQuery, GetMerchantsDocument } from \"../../components/generated\";\r\nimport { DropdownRow } from \"../../components/forms/DropdownRow\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport modalStyle from \"../../constants/Modal\";\r\nimport Styles from \"../../constants/Styles\";\r\nimport { Form } from \"../../components/forms/Form\";\r\nimport { InputRow } from \"../../components/forms/InputRow\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { InputField } from \"../../components/forms/InputField\";\r\nimport { DropdownField } from \"../../components/forms/DropdownField\";\r\nimport { TrashButton } from \"../../components/buttons/TrashButton\";\r\n\r\nexport default function UpdateMerchantScreen({ navigation, route }: RootStackScreenProps<'UpdateMerchant'>) {\r\n    const [getMerchants, { data: manyMerchantsData }] = useLazyQuery<GetMerchantsQuery, GetMerchantsQueryVariables>(GetMerchantsDocument);\r\n    const [getCategories, { data: categoryData, refetch }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        })\r\n    });\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => {\r\n            getMerchants({ variables: { passwordHash } });\r\n            getCategories({ variables: { passwordHash } });\r\n        },\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    const { id, name, description, category } = route.params\r\n    const [newName, setNewName] = useState(name)\r\n    const [newDescription, setNewDescription] = useState(description)\r\n    const [newCategory, setNewCategory] = useState<{ id: number, name: string } | undefined>(category)\r\n    const [check, setCheck] = useState(false)\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    const [deleteMerchant] = useMutation<DeleteMerchantMutation>(DeleteMerchantDocument, {\r\n        variables: { passwordHash: passwordHash, id: route.params?.id },\r\n        onCompleted: (data) => {\r\n            if (data.deleteMerchant.__typename === 'DeleteSuccess') {\r\n                navigation.canGoBack() ? navigation.goBack() : navigation.navigate('MerchantSettings');\r\n            }\r\n        },\r\n    })\r\n\r\n    const [updateMerchant, { loading: merchantLoading, data: merchantData }] = useMutation<UpdateMerchantMutation>(UpdateMerchantDocument, {\r\n        variables: { passwordHash: passwordHash, id, name: newName, description: newDescription, defaultCategoryId: newCategory?.id },\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        }),\r\n        onCompleted: (data) => {\r\n            if (data.updateMerchant.__typename === 'MerchantSuccess') {\r\n                navigation.canGoBack() ? navigation.goBack() : navigation.navigate('MerchantSettings');\r\n            }\r\n        }\r\n    })\r\n\r\n    useRefresh(() => refetch({ passwordHash }));\r\n\r\n    useRefresh(() => {\r\n        AsyncStorage.getItem('New Category')\r\n        .then((val) => {\r\n            if (val) {\r\n                setNewCategory(JSON.parse(val));\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"Couldn't retrieve new category: \" + err)\r\n        });\r\n    }), [categoryData];\r\n\r\n    const DeleteButton = () => {\r\n        return (\r\n            <TrashButton onPress={() => setConfirmDelete(true)} />\r\n        );\r\n    }\r\n\r\n    const merchantTaken = () => {\r\n        if (manyMerchantsData?.merchants.__typename === \"MerchantsSuccess\" && newName) {\r\n            // Searches the array of merchants for the name of vendor.\r\n            return manyMerchantsData?.merchants.merchants.find((mer) => {\r\n                return mer.id !== id && mer.name.toLowerCase() === newName.toLowerCase()\r\n            });\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: (_) => <DeleteButton />\r\n        });\r\n    }, [confirmDelete]);\r\n\r\n    const merchantError = (() => {\r\n        if (check && !newName) {\r\n            return 'Field is required';\r\n        } else if (check && merchantTaken()) {\r\n            return 'This merchant already exists.';\r\n        }\r\n    })();\r\n\r\n    function handleCategorySelect(categoryId: string) {\r\n        if (categoryData?.categories.__typename === \"CategoriesSuccess\") {\r\n            const foundCategory = categoryData.categories.categories.find(x => x.id === parseInt(categoryId));\r\n\r\n            if (foundCategory !== undefined) {\r\n                setNewCategory(foundCategory);\r\n            } else {\r\n                Alert.alert(\"Category hasn't been created yet.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleMerchant() {\r\n        setCheck(true)\r\n        if (newName && !merchantTaken()) updateMerchant();\r\n    }\r\n\r\n    function handleCreateCategory(value: string) {\r\n        navigation.navigate('CreateCategory', { name: value });\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <View style={styles.container}>\r\n                <InputField\r\n                    label=\"Merchant\"\r\n                    placeholder=\"required\"\r\n                    defaultValue={newName}\r\n                    onChange={setNewName}\r\n                    errorMessage={merchantError} />\r\n                <InputField\r\n                    label=\"Details\"\r\n                    placeholder=\"optional\"\r\n                    defaultValue={newDescription || ''}\r\n                    onChange={setNewDescription} />\r\n                <DropdownField\r\n                    label=\"Default Category\"\r\n                    placeholder=\"optional\"\r\n                    cachedValue={newCategory?.name}\r\n                    data={\r\n                        categoryData?.categories.__typename === \"CategoriesSuccess\" ?\r\n                            categoryData.categories.categories.map(cat => {\r\n                                return { id: cat.id.toString(), value: cat.name, color: '#' + cat.colourHex }\r\n                            }) : []\r\n                    }\r\n                    onChange={handleCategorySelect}\r\n                    onCreateNew={handleCreateCategory}\r\n                    labelForCreateNew=\"category\" />\r\n                <View style={styles.buttonContainer}>\r\n                    <Button text={\"Update Merchant\"} disabled={confirmDelete} accessibilityLabel={\"Button to Update Merchant\"} onPress={handleMerchant} />\r\n                </View>\r\n                {!merchantLoading ? (\r\n                    merchantData?.updateMerchant.__typename === \"MerchantSuccess\" ? (\r\n                        <Text>Merchant updated successfully!</Text>\r\n                    ) : (\r\n                        <Text style={Styles.alert}>{merchantData?.updateMerchant.errorMessage}</Text>\r\n                    )) : (\r\n                    <ActivityIndicator size='large' />\r\n                )}\r\n                <Modal\r\n                    transparent={true}\r\n                    visible={confirmDelete}\r\n                    onRequestClose={() => setConfirmDelete(false)}\r\n                >\r\n                    <View style={modalStyle.container}>\r\n                        <Text style={modalStyle.title}>Delete Merchant?</Text>\r\n                        <Text style={modalStyle.text}>Are you sure you want to delete this merchant?</Text>\r\n                        <View style={modalStyle.buttonView}>\r\n                            <Button text=\"Cancel\" onPress={() => setConfirmDelete(false)} size='half' accessibilityLabel='Cancel button' />\r\n                            <Button text=\"Delete\" onPress={() => { deleteMerchant() }} size='half' backgroundColor='red' accessibilityLabel='Delete Category button' />\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 50,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        borderTopWidth: 1,\r\n        borderTopColor: 'rgba(0,0,0,0.3)',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 30,\r\n    },\r\n    buttonContainer: {\r\n        alignSelf: 'center',\r\n        marginTop: 50,\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n    fieldLabel: {\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n        paddingLeft: 5,\r\n    },\r\n    fieldInput: {\r\n        fontSize: 15,\r\n        width: 180\r\n    },\r\n    deleteButton: {\r\n    },\r\n});    \r\n","import React from \"react\"\r\nimport { StyleSheet, Alert, ActivityIndicator } from 'react-native';\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { Text, View } from '../../components/Themed';\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport { CreateMerchantDocument, CreateMerchantMutation, GetCategoriesDocument, GetCategoriesQuery, GetCategoriesQueryVariables, GetMerchantDocument, GetMerchantQuery, GetMerchantsDocument, GetMerchantsQuery, GetMerchantsQueryVariables } from \"../../components/generated\";\r\nimport { DropdownRow } from \"../../components/forms/DropdownRow\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { InputRow } from \"../../components/forms/InputRow\";\r\nimport { Form } from \"../../components/forms/Form\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { DropdownField } from \"../../components/forms/DropdownField\";\r\nimport { InputField } from \"../../components/forms/InputField\";\r\n\r\nexport default function CreateMerchant({ navigation }: RootStackScreenProps<'CreateMerchant'>) {\r\n    const passwordHash = useAuth({\r\n        onRetrieved: (passwordHash) => {\r\n            getCategories({ variables: { passwordHash } });\r\n            getMerchants({ variables: { passwordHash } });\r\n        },\r\n        redirect: 'ifUnauthorized',\r\n    });\r\n    const [merchantName, setMerchantName] = React.useState(\"\");\r\n    const [details, setDetails] = React.useState(\"\");\r\n    const [category, setCategory] = React.useState<{ id: number, name: string } | undefined>();\r\n    const [check, setCheck] = React.useState(false);\r\n    const [disabledButton, setDisabledButton] = React.useState(false);\r\n\r\n    const [createMerchant, { loading: merchantLoading, data: merchantData }] = useMutation<CreateMerchantMutation>(CreateMerchantDocument, {\r\n        variables: { passwordHash: passwordHash, name: merchantName, description: details, defaultCategoryId: category?.id },\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        }),\r\n        onCompleted: () => {\r\n            navigation.canGoBack() ? navigation.goBack() : navigation.navigate('MerchantSettings');\r\n        }\r\n    });\r\n\r\n    const [getCategories, { data: categoryData, refetch }] = useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, {\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        }),\r\n    });\r\n\r\n    const [getMerchants, { data: manyMerchantsData }] = useLazyQuery<GetMerchantsQuery, GetMerchantsQueryVariables>(GetMerchantsDocument);\r\n\r\n    useRefresh(() => {\r\n        refetch({ passwordHash });\r\n    });\r\n    \r\n    useRefresh(() => {\r\n        AsyncStorage.getItem('New Category')\r\n        .then((val) => {\r\n            if (val) {\r\n                setCategory(JSON.parse(val));\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"Couldn't retrieve new category: \" + err)\r\n        });\r\n    }), [categoryData];\r\n\r\n    const merchantTaken = () => {\r\n        if (manyMerchantsData?.merchants.__typename === \"MerchantsSuccess\" && merchantName) {\r\n            // Searches the array of merchants for the name of vendor.\r\n            return manyMerchantsData?.merchants.merchants.find((mer) => {\r\n                return mer.name.toLowerCase() === merchantName.toLowerCase()\r\n            });\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    const merchantError = (() => {\r\n        if (check && !merchantName) {\r\n            return 'Field is required';\r\n        } else if (check && merchantTaken()) {\r\n            return 'This merchant already exists.';\r\n        }\r\n    })();\r\n\r\n    function handleCategorySelect(categoryId: string) {\r\n        if (categoryData?.categories.__typename == \"CategoriesSuccess\") {\r\n            const foundCategory = categoryData.categories.categories.find(x => x.id === parseInt(categoryId));\r\n\r\n            if (foundCategory !== undefined) {\r\n                setCategory(foundCategory);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMerchant = () => {\r\n        setCheck(true);\r\n        if (merchantName && !merchantTaken()) createMerchant();\r\n    };\r\n\r\n    function handleCreateCategory(value: string) {\r\n        navigation.navigate('CreateCategory', { name: value });\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <View style={styles.container}>\r\n                <InputField\r\n                    label=\"Name\"\r\n                    placeholder=\"required\"\r\n                    onChange={setMerchantName}\r\n                    errorMessage={merchantError} />\r\n                <InputField\r\n                    label=\"Details\"\r\n                    placeholder=\"optional\"\r\n                    onChange={setDetails} />\r\n                <DropdownField\r\n                    label=\"Default Category\"\r\n                    placeholder=\"optional\"\r\n                    data={\r\n                        categoryData?.categories.__typename == \"CategoriesSuccess\" ?\r\n                            categoryData.categories.categories.map(x => { return { id: x.id.toString(), value: x.name, color: '#' + x.colourHex } }) : []\r\n                    }\r\n                    cachedValue={category?.name}\r\n                    onChange={handleCategorySelect}\r\n                    onCreateNew={handleCreateCategory}\r\n                    labelForCreateNew=\"category\" />\r\n                <View style={styles.buttonContainer}>\r\n                    <Button text=\"Save Merchant\"\r\n                        accessibilityLabel=\"Save Merchant\"\r\n                        onPress={() => handleMerchant()}\r\n                        disabled={disabledButton}\r\n                    />\r\n                </View>\r\n                {!merchantLoading ? (\r\n                    merchantData?.createMerchant.__typename === \"MerchantSuccess\" ? (\r\n                        <Text>Merchant created successfully!</Text>\r\n                    ) : (\r\n                        <Text style={styles.alert}>{merchantData?.createMerchant.errorMessage}</Text>\r\n                    )) : (\r\n                    <ActivityIndicator size='large' />\r\n                )}\r\n            </View>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 50,\r\n    },\r\n    alert: {\r\n        color: 'red',\r\n    },\r\n    buttonContainer: {\r\n        alignSelf: 'center',\r\n        marginTop: 50,\r\n        zIndex: -1,\r\n        elevation: -1,\r\n    },\r\n});\r\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport { GetMerchantsDocument, GetMerchantsQuery, GetMerchantsQueryVariables, Merchant, } from \"../../components/generated\";\r\nimport { ActivityIndicator, Alert, StyleSheet, TouchableHighlight, TouchableOpacity } from \"react-native\";\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { View, Text } from 'react-native';\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { FlatList } from \"react-native\";\r\nimport { useRefresh } from \"../../hooks/useRefresh\";\r\nimport AddButton from \"../../components/buttons/AddButton\";\r\nimport { ColorCircle } from \"../../components/ColorCircle\";\r\n\r\ninterface MerchantItemProps {\r\n    id: string;\r\n    name: string;\r\n    onPress: (id: string, name: string) => void;\r\n}\r\n\r\nfunction MerchantItem(props: MerchantItemProps) {\r\n    return (\r\n        <TouchableHighlight\r\n            style={styles.row}\r\n            onPress={() => props.onPress(props.id, props.name)}\r\n            underlayColor=\"rgba(0,0,0,0.1)\">\r\n            <View style={styles.itemContainer}>\r\n                <View style={styles.colorAndNameContainer}>\r\n                    {\r\n                        props.id === '-1' &&\r\n                        <ColorCircle color={'plus'} size={24} />\r\n                    }\r\n                    <Text style={{ fontSize: 22, marginHorizontal: 5, marginLeft: props.id === '-1' ? 15 : 39, fontWeight: 'bold' }}>{props.name}</Text>\r\n                </View>\r\n                <MaterialIcons name=\"navigate-next\" size={28} color=\"black\" />\r\n            </View>\r\n        </TouchableHighlight>\r\n    );\r\n}\r\n\r\nexport default function MerchantSettingsScreen({ navigation: nav }: RootStackScreenProps<'MerchantSettings'>) {\r\n    const [getMerchants, { data, loading, refetch }] = useLazyQuery<GetMerchantsQuery, GetMerchantsQueryVariables>(GetMerchantsDocument, {\r\n        onError: (error => {\r\n            Alert.alert(error.message);\r\n        })\r\n    });\r\n    const passwordHash = useAuth({ onRetrieved: (passwordHash) => getMerchants({ variables: { passwordHash } }), redirect: 'ifUnauthorized' });\r\n    useRefresh(() => refetch({ passwordHash }));\r\n\r\n    const renderMerchant = ({ item }: { item: Merchant }) => {\r\n        return (\r\n            <MerchantItem\r\n                id={item.id.toString()}\r\n                name={item.name}\r\n                onPress={() =>\r\n                    item.id === -1 ?\r\n                        nav.navigate('CreateMerchant')\r\n                        :\r\n                        nav.navigate('UpdateMerchant', { id: item.id, name: item.name })\r\n                } />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            {loading ? (<ActivityIndicator size='large' />) : (\r\n                data?.merchants.__typename === \"MerchantsSuccess\" ? (\r\n                    <FlatList\r\n                        data={\r\n                            [\r\n                                { id: -1, name: 'New merchant' },\r\n                                ...data.merchants.merchants.slice().sort((merch1, merch2) => {\r\n                                    return merch1.name > merch2.name ? 1 : -1\r\n                                })\r\n                            ]\r\n                        }\r\n                        renderItem={renderMerchant}\r\n                        ListFooterComponent={<View style={{ height: 20 }} />}\r\n                    />\r\n                ) : (\r\n                    <View>\r\n                        <Text>{data?.merchants.exceptionName}</Text>\r\n                        <Text>{data?.merchants.errorMessage}</Text>\r\n                    </View>\r\n                ))}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    row: {\r\n        alignItems: 'center',\r\n        paddingVertical: 20,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'rgba(0,0,0,0.1)'\r\n    },\r\n    addBtnContainer: {\r\n        position: 'absolute',\r\n        right: 15,\r\n        bottom: 15,\r\n    },\r\n    itemContainer: {\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    colorAndNameContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: 250,\r\n    },\r\n});\r\n\r\n","import { Text, View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useRefresh } from \"../../hooks/useRefresh\";\nimport Button from \"../../components/buttons/Button\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport { GetMonthBreakdownDocument, GetMonthBreakdownQuery, GetMonthTotalsDocument, GetMonthTotalsQuery, MonthType } from \"../../components/generated\";\nimport MonthlyExpenseGraph from '../../components/graphs/MonthlyExpenses';\nimport { TopBar } from \"../../components/budget/TopBar\";\nimport { Card } from \"../../components/reports/Card\";\nimport { ExpensesByMonth } from \"../../components/reports/graphs/ExpensesByMonth\";\n\nexport default function ExpandExpense({ navigation, route }: RootStackScreenProps<'ExpandExpenses'>) {\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getMonthTotals();\n            getTopMerchant();\n        },\n        redirect: 'ifUnauthorized',\n    });\n    const [percent, setPercent] = useState<string>();\n    const [moreOrLess, setMoreOrLess] = useState(false);\n    const [moreThanOne, setMoreThanOne] = useState(false);\n    const [merchantExist, setMerchantExist] = useState(true);\n    const [topMerchant, setTopMerchant] = useState<string | undefined>(\"\");\n    const [getMonthTotals, { loading: monthTotalsLoading, data: monthTotalsData, refetch: monthTotalsRefetch }] = useLazyQuery<GetMonthTotalsQuery>(GetMonthTotalsDocument,\n        { variables: { passwordHash } });\n\n    const [getTopMerchant, { loading: monthBreakdownLoading, data: monthBreakdownData }] = useLazyQuery<GetMonthBreakdownQuery>(GetMonthBreakdownDocument,\n        {\n            variables: { passwordHash, month: route.params.month, year: route.params.year },\n        });\n\n\n    // useRefresh(() => {\n    //     monthTotalsRefetch();\n    // })\n\n    useEffect(() => {\n        if (monthTotalsData?.monthsTotals.__typename === \"MonthsTotals\") {\n            if (monthTotalsData.monthsTotals.byMonth.length >= 2) {\n                setMoreThanOne(true);\n            }\n        }\n\n        if (monthBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\") {\n            if (monthBreakdownData.monthBreakdown.topMerchant?.merchant === undefined) {\n                setMerchantExist(false);\n            } else {\n                setMerchantExist(true);\n            }\n        }\n    }, [monthTotalsData]);\n\n    useEffect(() => {\n        if (!monthBreakdownLoading && monthBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\") {\n            setTopMerchant(monthBreakdownData.monthBreakdown.topMerchant?.merchant?.name);\n        } else {\n            setTopMerchant(undefined);\n        }\n    }, [monthBreakdownData]);\n\n    useEffect(() => {\n        if (monthTotalsData?.monthsTotals.__typename === \"MonthsTotals\" && monthTotalsData.monthsTotals.byMonth.length >= 2) {\n            let previousMonthIndex = monthTotalsData.monthsTotals.byMonth.findIndex(e => e.month === route.params.month) - 1;\n            let currentMonthSpent = monthTotalsData.monthsTotals.byMonth[previousMonthIndex + 1].amountSpent;\n            let previousMonthSpent = monthTotalsData.monthsTotals.byMonth[previousMonthIndex].amountSpent;\n            let delta = (currentMonthSpent) - (previousMonthSpent); //193.68\n            let avg = (currentMonthSpent + previousMonthSpent) / (2); //563.18\n            let division = delta / avg;\n\n            if (delta > 0) {\n                setMoreOrLess(true);\n                setPercent(Math.abs((100 * (division))).toFixed(1));\n            } else {\n                setPercent(Math.abs((100 * (division))).toFixed(1));\n            }\n\n        }\n    }, [monthTotalsData])\n\n    return <View style={staticStyles.screen}>\n        <ScrollView>\n            <Card\n                title={`Expenses for ${route.params.month.slice(0, 3)} ${route.params.year}`}\n                graph={\n                    <ExpensesByMonth\n                        month={route.params.month as MonthType}\n                        data={\n                            monthTotalsData?.monthsTotals.__typename == \"MonthsTotals\" ? monthTotalsData.monthsTotals.byMonth.map(x => ({ month: x.month, amount: x.amountSpent })) : []\n                        } />\n                } />\n            {\n                merchantExist && <>\n\n                    <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50, marginHorizontal: 60 }}>\n                        <View style={{ justifyContent: \"center\" }}>\n                            <Text style={{ justifyContent: 'center', textAlign: 'center' }}>\n                                <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{topMerchant} </Text>\n                                <Text style={{ paddingLeft: 5, width: 300, fontSize: 26 }}>is your top spending Merchant</Text>\n                            </Text>\n                        </View>\n                    </View>\n                </>\n            }\n            {\n                moreThanOne && <>\n                    <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50, marginHorizontal: 60, paddingBottom: 50 }}>\n                        <View style={{ justifyContent: \"center\" }}>\n                            <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                                <Text style={{ paddingLeft: 5, width: 300, fontSize: 26 }}>You spent </Text>\n                                <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{percent}% {moreOrLess ? \"more\" : \"less\"}</Text>\n                                <Text style={{ paddingLeft: 5, width: 300, fontSize: 26 }}> this month than the previous month</Text>\n                            </Text>\n                        </View>\n                    </View>\n                </>\n            }\n        </ScrollView>\n    </View >\n}\n\nconst staticStyles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: 'white',\n    },\n})\n","import { Text, View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { useState } from \"react\";\nimport MonthlyVsBudgeted from '../../components/graphs/MonthlyVsBudgeted';\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { TopBar } from '../../components/budget/TopBar';\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GetMonthTotalsDocument, GetMonthTotalsQuery, MonthType } from \"../../components/generated\";\nimport { Card } from \"../../components/reports/Card\";\nimport { BudgetsByMonth } from \"../../components/reports/graphs/BudgetsByMonth\";\n\n\n\nexport default function ExpandExpense({ navigation, route }: RootStackScreenProps<'ExpandExpenses'>) {\n\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getMonthTotals()\n        },\n        redirect: 'ifUnauthorized',\n    });\n    const [month, setMonth] = useState(route.params.month)\n    const [year, setYear] = useState(route.params.year)\n\n    const [getMonthTotals, { loading: monthTotalsLoading, data: monthTotalsData, refetch: monthTotalsRefetch }] = useLazyQuery<GetMonthTotalsQuery>(GetMonthTotalsDocument,\n        { variables: { passwordHash } })\n\n\n\n    const indexOfCurrentMonth = monthTotalsData?.monthsTotals.__typename == 'MonthsTotals' ?\n        monthTotalsData.monthsTotals.byMonth.findIndex(ele => ele.month == month && ele.year == year) : -1\n\n    let currentMonth = undefined\n    let lastMonth = undefined\n    let deltaInSpending: undefined | number;\n    let deltaInBudget;\n    let budgetDelta;\n    if (indexOfCurrentMonth > 0 && monthTotalsData?.monthsTotals.__typename == 'MonthsTotals') {\n        currentMonth = monthTotalsData.monthsTotals.byMonth[indexOfCurrentMonth]\n        lastMonth = monthTotalsData.monthsTotals.byMonth[indexOfCurrentMonth - 1]\n\n        deltaInSpending = lastMonth.amountSpent !== 0 ? currentMonth.amountSpent / lastMonth.amountSpent : 1\n        deltaInBudget = lastMonth.amountBudgeted !== 0 ? currentMonth.amountBudgeted / lastMonth.amountBudgeted : 1\n        budgetDelta = currentMonth.amountBudgeted !== 0 ? currentMonth.amountSpent / currentMonth.amountBudgeted : 1\n\n    }\n\n    function spendingInsight(changeFactor: number | undefined, name: string) {\n        if (changeFactor === undefined || changeFactor === 1) {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{name}</Text>\n                            <Text style={staticStyles.text}> is unchanged from last month</Text>\n                        </Text>\n                    </View>\n                </View>\n            );\n        } else if (changeFactor > 1) {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{name}</Text>\n                            <Text style={staticStyles.text}> has increased by </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>${((changeFactor - 1) * 100).toFixed()}</Text>\n                            <Text style={staticStyles.text}> from last month</Text>\n                        </Text>\n                    </View>\n                </View>\n            );\n        } else {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{name}</Text>\n                            <Text style={staticStyles.text}> has decreased by </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{((changeFactor) * 100).toFixed()}%</Text>\n                            <Text style={staticStyles.text}> from last month</Text>\n                        </Text>\n                    </View>\n                </View>\n\n            );\n        }\n    }\n\n    function budgetVSSpendingInsight(changeFactor: number | undefined) {\n        if (changeFactor === undefined || changeFactor === 1) {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>expenses</Text>\n                            <Text> matches your budget</Text>\n                        </Text>\n                    </View>\n                </View>\n            );\n        } else if (changeFactor > 1) {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>expenses</Text>\n                            <Text style={staticStyles.text}> are </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{((changeFactor - 1) * 100).toFixed()}%</Text>\n                            <Text style={staticStyles.text}> in excess of your budget</Text>\n                        </Text>\n                    </View>\n                </View>\n            );\n        } else {\n            return (\n                <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                    <View style={{ justifyContent: \"center\" }}>\n                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                            <Text style={staticStyles.text}>Your </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>expenses</Text>\n                            <Text style={staticStyles.text}> are </Text>\n                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{((changeFactor) * 100).toFixed()}%</Text>\n                            <Text style={staticStyles.text}> under your budget</Text>\n                        </Text>\n                    </View>\n                </View>\n            );\n        }\n    }\n\n\n    return (<View style={staticStyles.screen}>\n\n        <ScrollView>\n            <Card\n                title={`Budgets for ${month.slice(0, 3)} ${year}`}\n                graph={\n                    <BudgetsByMonth\n                        month={month as MonthType}\n                        data={\n                            monthTotalsData?.monthsTotals.__typename == \"MonthsTotals\" ? monthTotalsData.monthsTotals.byMonth.map(x => {\n                                return {\n                                    month: x.month,\n                                    budget: x.amountBudgeted,\n                                    spent: {\n                                        planned: x.amountSpentPlanned,\n                                        unplanned: x.amountSpentUnplanned,\n                                    },\n                                }\n                            }) : []\n                        } />\n                } />\n            {currentMonth &&\n                <View style={[staticStyles.textContainer]}>\n                    {budgetVSSpendingInsight(budgetDelta)}\n                </View>\n            }\n            {currentMonth && lastMonth &&\n                <>\n                    < View style={[staticStyles.textContainer]}>\n                        {spendingInsight(deltaInSpending, 'spending')}\n                    </View>\n                    < View style={[staticStyles.textContainer, { paddingBottom: 70 }]}>\n                        {spendingInsight(deltaInBudget, 'budget')}\n                    </View>\n                </>\n            }\n        </ScrollView >\n    </View >)\n}\n\nconst staticStyles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: 'white',\n    },\n    text: {\n        fontSize: 26,\n        textAlign: 'center'\n    },\n    textContainer: {\n        marginTop: 15,\n        marginBottom: 5,\n        marginLeft: 75,\n        marginRight: 75\n    }\n})","import { Text, View, StyleSheet, Alert, ScrollView } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { Category, GetBudgetsDocument, GetBudgetsQuery, GetCategoriesDocument, GetCategoriesQuery, GetMonthBreakdownDocument, GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables, GetMonthTotalsDocument, GetMonthTotalsQuery, MonthBreakdownCategory, MonthType } from \"../../components/generated\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport Button from \"../../components/buttons/Button\";\nimport { DropdownRow } from \"../../components/forms/DropdownRow\";\nimport { VictoryLegend, VictoryPie } from \"victory-native\";\nimport { EventCallbackInterface, StringOrNumberOrList } from \"victory-core\";\nimport { DropdownField } from \"../../components/forms/DropdownField\";\nimport ByCategory from \"../../components/graphs/ByCategory\";\nimport { Form } from \"../../components/forms/Form\";\nimport { Card } from \"../../components/reports/Card\";\n\ntype ByCategoryProps = {\n    categoryData: MonthBreakdownCategory[];\n    month: string;\n    year: number;\n}\n\ntype PercentProps = {\n    categoryName: string;\n}\n\ntype RetrieveAmountProps = {\n    categoryData: MonthBreakdownCategory[];\n    categoryName: string;\n}\n\n\ninterface ExternalMutation {\n    target: string,\n    eventKey: string,\n    mutation: Function,\n    callback: Function\n}\n\nexport default function ExpandExpense({ navigation, route }: RootStackScreenProps<'ExpandExpenses'>) {\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getMonthlyBreakdown()\n\n        },\n        redirect: 'ifUnauthorized',\n    });\n    const [month, setMonth] = useState(route.params.month);\n    const [year, setYear] = useState(route.params.year);\n    const [percent, setPercent] = useState(\"\");\n    const [categoryExpense, setCategoryExpense] = useState<string>();\n    const [selectedCategory, setSelectedCategory] = useState<{ id: number, name: string } | undefined>(undefined);\n    const [getMonthlyBreakdown, { loading: monthlyBreakdownLoading, data: monthlyBreakdownData, refetch: monthlyBreakdownRefetch }] = useLazyQuery<GetMonthBreakdownQuery>(GetMonthBreakdownDocument,\n        { variables: { passwordHash, month: month as MonthType, year } });\n\n\n\n    const retrieveAmountSpent = (categoryName: string) => {\n        if (monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\") {\n            let categoryIndex = monthlyBreakdownData.monthBreakdown.byCategory.findIndex(e => (categoryName === 'Uncategorized' && !e.category) || e.category?.name === categoryName);\n            let currentCategorySpent = monthlyBreakdownData.monthBreakdown.byCategory[categoryIndex].amountSpent;\n\n            if (currentCategorySpent > 0) {\n                setCategoryExpense(currentCategorySpent.toFixed(2));\n            } else {\n                setCategoryExpense(\"\");\n            }\n        } else {\n            console.log(\"Error\");\n        }\n\n    }\n\n    const percentOfTotal = (categoryName: string) => {\n        if (monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\") {\n            let totalSpent = monthlyBreakdownData.monthBreakdown.totalSpent;\n            let categoryIndex = monthlyBreakdownData.monthBreakdown.byCategory.findIndex(e => (categoryName === 'Uncategorized' && !e.category) || e.category?.name === categoryName);\n            let currentCategorySpent = monthlyBreakdownData.monthBreakdown.byCategory[categoryIndex].amountSpent;\n            let delta = (currentCategorySpent) / (totalSpent);\n\n            if (delta > 0) {\n                setPercent(Math.abs((100 * (delta))).toFixed(1) + \"%\");\n            } else {\n                setPercent(\"\");\n            }\n        }\n    }\n\n    const handleCategoryChange = (newCategory: { id: number, name: string } | undefined) => {\n        if (!newCategory) return;\n        setSelectedCategory(newCategory);\n        if (newCategory) {\n            retrieveAmountSpent(newCategory.name);\n            percentOfTotal(newCategory.name);\n        }\n    }\n\n    useEffect(() => {\n    }, [selectedCategory])\n\n\n    return (\n        <ScrollView keyboardShouldPersistTaps=\"always\" style={staticStyles.screen}>\n            <Card\n                title='Expenses by Category'\n                graph={\n                    <ByCategory\n                        categoryData={\n                            monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\"\n                                ? monthlyBreakdownData.monthBreakdown.byCategory.slice().sort((a, b) => {\n                                    if (!a.category || !b.category) {\n                                        return 0;\n                                    } else if (a.category.name > b.category.name) {\n                                        return 1;\n                                    } else if (a.category.name < b.category.name) {\n                                        return -1;\n                                    } else {\n                                        return 0;\n                                    }\n                                })\n                                : []\n                        }\n                        month={month}\n                        year={year}\n                        onChangeCategory={handleCategoryChange} />\n                } />\n            <View style={staticStyles.insightsContainer}>\n                {\n                    selectedCategory !== undefined &&\n                    <>\n                        <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50, marginHorizontal: 80 }}>\n                            <View style={{ justifyContent: \"center\" }}>\n                                <Text style={{ justifyContent: 'center', textAlign: 'center' }}>\n                                    <Text style={{ fontWeight: 'bold', fontSize: 26 }}>${categoryExpense}</Text>\n                                    <Text style={{ fontSize: 26 }}> spent on </Text>\n                                    <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{selectedCategory?.name}</Text>\n                                </Text>\n                            </View>\n                        </View>\n\n                        <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50, marginHorizontal: 100 }}>\n                            <View style={{ justifyContent: \"center\" }}>\n                                <Text style={{ justifyContent: 'center', textAlign: 'center' }}>\n                                    <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{percent}</Text>\n                                    <Text style={{ fontSize: 26 }}> of your {month.charAt(0) + month.substring(1, month.length).toLowerCase()} expenses</Text>\n                                </Text>\n                            </View>\n                        </View>\n                    </>\n                }\n            </View>\n        </ScrollView>\n    );\n\n}\n\nconst staticStyles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: 'white',\n    },\n    graphContainer: {\n        alignItems: 'center',\n    },\n    insightsContainer: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 500,\n        zIndex: -1,\n        elevation: -1,\n    },\n})","\nimport { Text, View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useLazyQuery } from '@apollo/client';\nimport { Budget, GetBudgetsDocument, GetBudgetsQuery, GetMonthBreakdownDocument, GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables, MonthType } from \"../../components/generated\";\nimport MonthlyVsBudgetedCategory from '../../components/graphs/monthlyVsBudgetedCategory';\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Card } from \"../../components/reports/Card\";\n\nexport default function ExpandExpense({ navigation, route }: RootStackScreenProps<'ExpandExpenses'>) {\n\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getMonthlyBreakdown()\n            getBudgets()\n        },\n        redirect: 'ifUnauthorized',\n    });\n\n    const [month, setMonth] = useState(route.params.month)\n    const [year, setYear] = useState(route.params.year)\n\n    const [getMonthlyBreakdown, { loading: monthlyBreakdownLoading, data: monthlyBreakdownData, refetch: monthlyBreakdownRefetch }] = useLazyQuery<GetMonthBreakdownQuery, GetMonthBreakdownQueryVariables>(GetMonthBreakdownDocument,\n        { variables: { passwordHash, month: month as MonthType, year } });\n    const [getBudgets, { loading: budgetsLoading, data: budgetsData, refetch: budgetsRefetch }] = useLazyQuery<GetBudgetsQuery>(GetBudgetsDocument, {\n        variables: { passwordHash }\n    })\n\n    let highestExpense: string = 'N/A'\n    let lowestExpense: string = 'N/A'\n    if (monthlyBreakdownData?.monthBreakdown.__typename == 'MonthBreakdown') {\n        highestExpense = '$' + Math.max(...monthlyBreakdownData.monthBreakdown.byCategory.map(ele => ele.amountSpent)).toFixed(2)\n        lowestExpense = '$' + Math.min(...monthlyBreakdownData.monthBreakdown.byCategory.map(ele => ele.amountSpent)).toFixed(2)\n    }\n\n    const currentBudget: Budget | undefined = budgetsData?.budgets.__typename === 'BudgetsSuccess' ?\n        budgetsData.budgets.budgets.find(ele => {\n            return ele.month == month && ele.year == year\n        }) as Budget : undefined\n\n\n\n    const overBudgetedCategories = monthlyBreakdownData?.monthBreakdown.__typename == 'MonthBreakdown' ?\n        monthlyBreakdownData.monthBreakdown.byCategory.filter(ele => {\n            const curBudget = currentBudget ? currentBudget.budgetCategories?.find(x => x.category.name == ele.category?.name) : undefined\n            const delta = curBudget ? curBudget.amount - ele.amountSpent : -ele.amountSpent\n            return delta < 0\n        }) : []\n\n    const totalCategories = monthlyBreakdownData?.monthBreakdown.__typename == 'MonthBreakdown' ? monthlyBreakdownData.monthBreakdown.byCategory.length : 0\n\n\n    return <View style={staticStyles.screen}>\n        <ScrollView>\n            <Card\n                title={`Budgets by Category for ${month.slice(0, 3)} ${year}`}\n                graph={\n                    <MonthlyVsBudgetedCategory\n                        displayAmount={3}\n                        jumpAmount={1}\n                        data={monthlyBreakdownData?.monthBreakdown.__typename === \"MonthBreakdown\" ?\n                            monthlyBreakdownData.monthBreakdown.byCategory.filter(ele => {\n                                const foundBudget = budgetsData?.budgets.__typename == 'BudgetsSuccess' ?\n                                    budgetsData.budgets.budgets.find(bud => {\n                                        return bud.month == month && bud.year == year\n                                    }) as Budget : undefined\n                                const foundPair = foundBudget?.budgetCategories?.find(cat => cat.category.name == ele.category?.name)\n                                // console.log(\"pari\", foundPair, ele)\n                                return !(ele.amountSpent == 0 && (foundPair === undefined || foundPair.amount == 0))// && (foundPair === undefined || foundPair.amount == 0)\n                            }) : []}\n                        budgetReferenceData={budgetsData?.budgets.__typename === 'BudgetsSuccess' ?\n                            budgetsData.budgets.budgets.find(ele => {\n                                return ele.month == month && ele.year == year\n                            }) as Budget : undefined} />\n                } />\n            <View>\n                <View style={{ flex: 1, marginTop: 55, marginBottom: 5, marginLeft: 60, marginRight: 60 }}>\n                    <View style={{ justifyContent: \"center\", alignContent: 'center', paddingTop: 50 }}>\n                        {\n                            overBudgetedCategories.length === 0 || totalCategories === 0 ?\n                                <>\n                                    <View style={{ justifyContent: \"center\" }}>\n                                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                                            <Text style={{ textAlign: 'center' }}>Congratulations! None of your budgets were exceeded</Text>\n                                        </Text>\n                                    </View>\n\n                                </> :\n                                <>\n                                    <View style={{ justifyContent: \"center\" }}>\n                                        <Text style={{ justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\n                                            <Text style={{ fontWeight: 'bold', fontSize: 26 }}>{((100 * overBudgetedCategories.length / totalCategories).toFixed(1))}%</Text>\n                                            <Text style={{ fontSize: 26 }}> of your categories were </Text>\n                                            <Text style={{ fontSize: 26, fontWeight: 'bold' }}>over </Text>\n                                            <Text style={{ fontSize: 26 }}>budget</Text>\n                                        </Text>\n                                    </View>\n\n                                </>\n                            // <><PercentOverBudget></PercentOverBudget><Text> of your categories were over budget</Text></>\n\n                        }\n                    </View>\n                </View>\n                <View style={{ flex: 1, flexGrow: 1, flexDirection: 'column', alignItems: 'center' }}>\n\n                    {overBudgetedCategories.length !== 0 &&\n                        <View style={{ flex: 1, marginTop: 50, marginBottom: 50, marginLeft: 60, marginRight: 60 }}>\n                            <Text style={{ paddingBottom: 10 }}>\n                                <Text style={{ fontSize: 26, textAlign: 'center' }}>You are </Text>\n                                <Text style={{ fontSize: 26, fontWeight: 'bold' }}>over </Text>\n                                <Text style={{ fontSize: 26, textAlign: 'center' }}> budget in..</Text>\n                            </Text>\n\n                            {overBudgetedCategories.map((ele, index) => {\n                                return (\n                                    <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                        <AntDesign name='right' size={32} color=\"black\" />\n                                        <Text style={{ fontSize: 26 }}>{ele.category?.name || 'Uncategorized'}</Text>\n                                    </View>\n                                )\n                            })}\n                        </View>}\n\n                </View>\n            </View>\n        </ScrollView>\n\n    </View >\n}\n\nconst staticStyles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        backgroundColor: 'white',\n    },\n})","import { useLazyQuery } from \"@apollo/client\";\nimport { useState, useMemo } from \"react\";\nimport { GetExpensesInMonthDocument, GetExpensesInMonthQuery, GetExpensesInMonthQueryVariables, GetMonthTotalsDocument, GetMonthTotalsQuery, GetMonthTotalsQueryVariables, GetUserDocument, GetUserQuery, GetUserQueryVariables, HomePageDataDocument, HomePageDataQuery, HomePageDataQueryVariables, MonthType } from \"../components/generated\";\nimport React from 'react';\nimport { View, Text, ActivityIndicator, ScrollView } from 'react-native';\nimport { RootTabScreenProps } from \"../types\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport Styles from \"../constants/Styles\";\nimport { StyleSheet } from 'react-native';\nimport { useRefresh } from \"../hooks/useRefresh\";\nimport AddButton from \"../components/buttons/AddButton\";\nimport { MONTHS_ORDER } from \"../constants/Months\";\nimport { ExpenseDisplay } from \"../components/ExpenseDisplay\";\nimport Colors from \"../constants/Colors\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nconst ALERT_COLOR = {\n    over: {\n        backgroundColor: 'hsl(2, 50%, 80%)',\n        borderColor: 'hsl(2, 80%, 30%)'\n    },\n    under: {\n        backgroundColor: 'hsl(108, 50%, 80%)',\n        borderColor: 'hsl(108, 80%, 30%)'\n    }\n}\n\nexport default function HomeScreen({ navigation }: RootTabScreenProps<'Home'>) {\n    const [name, setName] = useState('there');\n    const [expanded, setExpanded] = useState(false);\n    const [expenses, setExpenses] = useState<{ id: number, amount: number, date: string, category?: { name: string, colourHex: string } | null }[]>([]);\n    const date = new Date();\n    const month = date.getMonth();\n    const monthName = MONTHS_ORDER[month][0] + MONTHS_ORDER[month].substring(1).toLowerCase();\n    const year = date.getFullYear();\n\n    const upcoming = useMemo(() => {\n        return expenses.filter(item => item.date.substring(0, 10) > date.toJSON().substring(0, 10));\n    }, [expenses]);\n\n    const [getUser] = useLazyQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument, {\n        onCompleted: (data) => {\n            setName(data?.user.__typename === 'User' ? data.user.firstName : 'there');\n        }\n    })\n\n    const [getAvg, { data: avgData, refetch: avgRefetch }] = useLazyQuery<GetMonthTotalsQuery, GetMonthTotalsQueryVariables>(GetMonthTotalsDocument)\n\n    const [getExpenses, { data, loading, refetch }] = useLazyQuery<GetExpensesInMonthQuery, GetExpensesInMonthQueryVariables>(GetExpensesInMonthDocument, {\n        onCompleted: (data) => {\n            if (data.expensesInMonth.__typename === 'ExpensesSuccess') {\n                if (data.expensesInMonth.expenses.length) {\n                    let tempExpenses = data.expensesInMonth.expenses.slice(); // copy the data since it is read-only\n                    setExpenses(tempExpenses.sort((a, b) => b.date.localeCompare(a.date)));\n                }\n            }\n        }\n    })\n\n    const passwordHash = useAuth({\n        onRetrieved: (passwordHash) => {\n            getUser({ variables: { passwordHash } });\n            getAvg({ variables: { passwordHash } });\n            getExpenses({ variables: { passwordHash, month: MonthType.August, year } });\n            getHomePageData();\n        },\n        redirect: 'ifUnauthorized',\n    });\n\n    const [getHomePageData, { data: homePageData, refetch: homePageDataRefetch }] = useLazyQuery<HomePageDataQuery, HomePageDataQueryVariables>(HomePageDataDocument, {\n        variables: {\n            passwordHash,\n            month: MONTHS_ORDER[month] as MonthType,\n            year,\n        },\n    });\n\n    useRefresh(() => {\n        refetch({ passwordHash });\n        avgRefetch({ passwordHash });\n        homePageDataRefetch({ passwordHash });\n    });\n\n    const homeQueryData = useMemo(() => {\n        let overBudgetCategories: string[] = [];\n        let monthTotal = 0;\n        if (homePageData?.budgetDetailsByDate.__typename === 'BudgetDetails') {\n            monthTotal = homePageData.budgetDetailsByDate.totalActual;\n            overBudgetCategories = homePageData.budgetDetailsByDate.byCategory.filter(budgetCategory => {\n                return (budgetCategory.amountActual > budgetCategory.amountBudgeted);\n            }).map((item) => item.category.name);\n        }\n        return { monthTotal, overBudgetCategories };\n    }, [homePageData]);\n\n    const averageData = useMemo(() => {\n        let yearAvg = 0;\n        if (avgData?.monthsTotals.__typename === 'MonthsTotals' && avgData.monthsTotals.averageSpent) {\n            const applicableMonthData = avgData.monthsTotals.byMonth.filter(x => x.year === year).map(x => x.amountSpent);\n            if (applicableMonthData.length === 0) {\n                yearAvg = 0;\n            } else {\n                yearAvg = applicableMonthData.reduce((a, b) => a + b, 0) / applicableMonthData.length;\n            }\n        }\n        return yearAvg;\n    }, [avgData]);\n\n    function renderItem(item: { id: number, amount: number, category?: { name: string, colourHex: string } | null }) {\n        const color = item.category?.colourHex || Colors.light.uncategorizedColor;\n        const name = item.category?.name || 'Uncategorized';\n\n        return <ExpenseDisplay\n            key={item.id}\n            id={item.id}\n            name={name}\n            color={'#' + color}\n            amount={item.amount}\n            onPress={(id) => navigation.navigate('ExpenseDetails', { expenseId: id })}\n        />\n    }\n\n    const FirstExpense = () => {\n        return (\n            <Text style={style.noExpense}>You have no expenses for {monthName} yet. Try adding some by pressing this button:</Text>\n        )\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1, backgroundColor: 'white' }}>\n            <Text style={style.greeting}>Hello, {name}!</Text>\n            {homeQueryData.overBudgetCategories.length ? (\n                <View style={[style.alert, ALERT_COLOR.over]}>\n                    <Feather name='info' size={24} color={ALERT_COLOR.over.borderColor} style={{ margin: 10 }} />\n                    <Text style={style.alertText}>You are over budget in these categories for the month of {monthName}:\n                        {homeQueryData.overBudgetCategories.map((x, i) => <Text style={{ fontWeight: 'bold' }} key={i}>{' ' + x + (i < homeQueryData.overBudgetCategories.length - 1 ? ',' : '')}</Text>)}</Text>\n                </View>\n            ) : (\n                <View style={[style.alert, ALERT_COLOR.under]}>\n                    <Feather name='info' size={24} color={ALERT_COLOR.under.borderColor} style={{ margin: 10 }} />\n                    <Text style={style.alertText}>You have no over-budget categories in {monthName} so far</Text>\n                </View>\n            )}\n            <Text style={style.subtitle}>Your activity:</Text>\n            <View style={style.summary}>\n                <View style={style.halfSummary}>\n                    <View style={style.dateContainer}>\n                        <Text style={style.dateText}>{MONTHS_ORDER[month]}</Text>\n                    </View>\n                    <View style={style.summaryDataContainer}>\n                        <Text style={style.summaryData}>${homePageData?.monthBreakdown.__typename === 'MonthBreakdown' ? homePageData.monthBreakdown.totalSpent.toFixed(2) : '0.00'}</Text>\n                        <Text style={style.summaryText}>Your total spendings this month so far</Text>\n                    </View>\n                </View>\n                <View style={style.halfSummary}>\n                    <View style={style.dateContainer}>\n                        <Text style={style.dateText}>{year}</Text>\n                    </View>\n                    <View style={style.summaryDataContainer}>\n                        <Text style={style.summaryData}>${averageData.toFixed(2)}</Text>\n                        <Text style={style.summaryText}>Your average monthly spendings this year</Text>\n                    </View>\n                </View>\n            </View>\n            <ScrollView>\n                <View style={style.expenses}>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Text style={style.subtitle}>Upcoming Expenses:</Text>\n                        <View style={{ flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: 15 }}>\n                            <View style={{ backgroundColor: 'rgb(22, 89, 193)', alignItems: 'center', justifyContent: 'center', paddingHorizontal: 9, paddingVertical: 3, borderRadius: 90, marginRight: 15 }}>\n                                <Text style={{ fontSize: 16, color: 'white', textAlign: 'center', textAlignVertical: 'center' }}>\n                                    {upcoming.length}\n                                </Text>\n                            </View>\n                            <AntDesign\n                                name={expanded ? 'up' : 'down'}\n                                size={20}\n                                color=\"black\"\n                                onPress={() => setExpanded(!expanded)} />\n                        </View>\n                    </View>\n                    <View>\n                        {expanded ? (\n                            upcoming.length > 0 ? (\n                                upcoming.map((item) => renderItem(item))\n                            ) : (\n                                <Text style={style.noExpense}>You have no upcoming expenses for this month.</Text>\n                            )) : (<></>)\n                        }\n                    </View>\n                </View>\n                <View style={style.expenses}>\n                    <Text style={style.subtitle}>Latest Expenses:</Text>\n                    {loading ? <ActivityIndicator size='large' /> : (\n                        data?.expensesInMonth?.__typename === 'ExpensesSuccess' ? (\n                            expenses.length === 0 ?\n                                <FirstExpense />\n                                :\n                                expenses.slice(upcoming.length, upcoming.length + 3).map(expense => {\n                                    return renderItem(expense);\n                                })\n                        ) : (\n                            <Text style={Styles.alert}>Something went wrong.</Text>\n                        )\n                    )}\n                </View>\n            </ScrollView >\n            <View style={style.addBtn}>\n                <AddButton size={70} onPress={() => navigation.navigate('CreateExpense')} />\n            </View>\n        </SafeAreaView>\n    );\n}\n\nconst style = StyleSheet.create({\n    greeting: {\n        fontSize: 32,\n        fontWeight: 'bold',\n        marginHorizontal: 25,\n        marginTop: 10,\n        marginBottom: 20\n    },\n    alert: {\n        maxWidth: '80%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        alignSelf: 'center',\n        padding: 10,\n        borderRadius: 20,\n        borderWidth: 2,\n        fontSize: 24\n    },\n    alertText: {\n        fontSize: 16,\n        marginHorizontal: 10,\n        maxWidth: '80%'\n    },\n    subtitle: {\n        padding: 15,\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n    summary: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    halfSummary: {\n        width: '45%',\n        maxWidth: 300,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 10\n    },\n    summaryData: {\n        fontWeight: 'bold',\n        fontSize: 28,\n        textAlignVertical: 'center',\n        textAlign: 'center'\n    },\n    summaryText: {\n        fontSize: 14,\n        textAlignVertical: 'center',\n        textAlign: 'center'\n    },\n    summaryDataContainer: {\n        borderBottomLeftRadius: 10,\n        borderBottomRightRadius: 10,\n        borderWidth: 1,\n        padding: 10,\n        width: '100%'\n    },\n    dateContainer: {\n        backgroundColor: 'rgba(173, 124, 237, 0.7)',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderWidth: 1,\n        paddingHorizontal: 10,\n        paddingVertical: 5,\n        width: '100%'\n    },\n    dateText: {\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlignVertical: 'center',\n        textAlign: 'center'\n    },\n    expenses: {\n        borderBottomWidth: 1,\n        borderColor: 'rgba(0, 0, 0, 0.1)',\n        marginTop: 15,\n    },\n    noExpense: {\n        fontSize: 18,\n        margin: 10\n    },\n    addBtn: {\n        position: 'absolute',\n        right: 15,\n        bottom: 15\n    },\n})\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useIsFocused } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { Animated, ColorSchemeName, Keyboard } from 'react-native';\nimport ForgotPasswordScreen from '../screens/UserAuthScreens/ForgotPasswordScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport SignInScreen from '../screens/UserAuthScreens/SignInScreen';\nimport SignUpScreen from '../screens/UserAuthScreens/SignUpScreen';\nimport WelcomeScreen from '../screens/UserAuthScreens/WelcomeScreen';\nimport { RootStackParamList, RootTabParamList } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport ExpensesScreen from '../screens/ExpensesScreen';\nimport BudgetScreen from '../screens/Budget/BudgetScreen';\nimport ReportsScreen from '../screens/ReportsScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport ExpenseDetailsScreen from '../screens/ExpenseDetailsScreen';\nimport CreateCategoryScreen from '../screens/CategoryScreens/CreateCategoryScreen';\nimport CreateExpenseScreen from '../screens/CreateExpenseScreen';\nimport CreateBudgetScreen from '../screens/Budget/CreateBudgetScreen';\nimport UpdateBudgetScreen from '../screens/Budget/UpdateBudgetScreen';\n\nimport UpdateExpenseScreen from '../screens/UpdateExpenseScreen';\nimport EditCategoryScreen from '../screens/CategoryScreens/EditCategoryScreen';\nimport CategorySettingsScreen from '../screens/CategoryScreens/CategorySettingsScreen';\nimport UpdateMerchantScreen from '../screens/MerchantScreens/UpdateMerchantScreen';\nimport CreateMerchant from '../screens/MerchantScreens/CreateMerchantScreen';\nimport MerchantSettingsScreen from '../screens/MerchantScreens/MerchantSettingsScreen';\nimport ExpandExpenseScreen from '../screens/ReportScreens/ExpandExpense';\nimport ExpandBudgetScreen from '../screens/ReportScreens/ExpandBudget';\nimport ExpandWheelScreen from '../screens/ReportScreens/ExpandWheel';\nimport ExpandBarCatScreen from '../screens/ReportScreens/ExpandBarCat';\n\nimport { Ionicons } from '@expo/vector-icons';\nimport Colors from '../constants/Colors';\nimport HomeScreen from '../screens/HomeScreen';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\n// declare global {\n//   namespace ReactNavigation{\n//     interface RootParamList {\n//       ForgotPasswordModal: { name: string};\n//     }\n//   }\n// }  \n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying ForgotPasswords on top of all other content.\n * https://reactnavigation.org/docs/ForgotPassword\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} options={{ headerShown: false }} />\n      <Stack.Group screenOptions={{ headerTitle: '', headerShadowVisible: false }}>\n        <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n        <Stack.Screen name=\"SignIn\" component={SignInScreen} />\n      </Stack.Group>\n      <Stack.Group screenOptions={{ headerShadowVisible: false, headerTitleAlign: 'center', headerTitleStyle: { fontWeight: 'bold' } }}>\n        <Stack.Screen name=\"CreateMerchant\" component={CreateMerchant} options={{ title: 'Create Merchant' }} />\n        <Stack.Screen name=\"CreateExpense\" component={CreateExpenseScreen} options={{ title: 'Create Expense' }} />\n        <Stack.Screen name=\"ExpenseDetails\" component={ExpenseDetailsScreen} options={{ title: 'Expense Details' }} />\n        <Stack.Screen name=\"CategorySettings\" component={CategorySettingsScreen} options={{ title: 'Categories' }} />\n        <Stack.Screen name=\"EditCategory\" component={EditCategoryScreen} options={{ title: 'Edit Category' }} />\n        <Stack.Screen name=\"CreateCategory\" component={CreateCategoryScreen} options={{ headerTitle: 'Create Category' }} />\n        <Stack.Screen name=\"UpdateExpense\" component={UpdateExpenseScreen} options={{ headerTitle: 'Edit Expense' }} />\n        <Stack.Screen name=\"EditBudget\" component={UpdateBudgetScreen} options={{ headerTitle: 'Edit Budget' }} />\n        <Stack.Screen name=\"CreateBudget\" component={CreateBudgetScreen} options={{ headerTitle: 'Create Budget' }} />\n        <Stack.Screen name=\"ExpandExpenses\" component={ExpandExpenseScreen} options={{ headerTitle: 'Insights' }} />\n        <Stack.Screen name=\"ExpandBudget\" component={ExpandBudgetScreen} options={{ headerTitle: 'Insights' }} />\n        <Stack.Screen name=\"ExpandWheel\" component={ExpandWheelScreen} options={{ headerTitle: 'Insights' }} />\n        <Stack.Screen name=\"ExpandBarCat\" component={ExpandBarCatScreen} options={{ headerTitle: 'Insights' }} />\n        <Stack.Screen name=\"MerchantSettings\" component={MerchantSettingsScreen} options={{ headerTitle: 'Merchants' }} />\n        <Stack.Screen name=\"UpdateMerchant\" component={UpdateMerchantScreen} options={{ headerTitle: 'Update Merchant' }} />\n      </Stack.Group>\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ headerShown: false, title: 'Oops!' }} />\n      <Stack.Screen name=\"Root\" component={Root} options={{ headerShown: false }}></Stack.Screen>\n      <Stack.Group screenOptions={{ presentation: 'transparentModal' }}>\n        <Stack.Screen name=\"ForgotPasswordModal\" component={ForgotPasswordScreen} options={{ headerShown: false, title: 'Oops!' }} />\n      </Stack.Group>\n    </Stack.Navigator >\n  );\n}\n\nconst Tab = createBottomTabNavigator<RootTabParamList>();\n\nfunction Root() {\n  const focused = useIsFocused();\n  const [tabBarVisible, setTabBarVisible] = useState(true);\n\n  useEffect(() => {\n    if (focused) {\n      Keyboard.addListener('keyboardDidShow', () => {\n        setTabBarVisible(false);\n      });\n      Keyboard.addListener('keyboardDidHide', () => {\n        setTabBarVisible(true);\n      });\n    } else {\n      Keyboard.removeAllListeners('keyboardDidShow');\n      Keyboard.removeAllListeners('keyboardDidHide');\n    }\n    // Having no return value should not cause a memory leak here because react navigation will\n    // set focused to false whenever root would have been unmounted. If memory leak occurs, add return\n    // function that clears all listeners.\n  }, [focused]);\n\n  return (\n    <Tab.Navigator initialRouteName='Home'>\n      <Tab.Group screenOptions={{\n\n        headerShadowVisible: false,\n        headerTitleAlign: 'center',\n        headerTitleStyle: { fontWeight: 'bold', fontSize: 24 },\n        tabBarLabelStyle: { fontSize: 12 },\n        tabBarStyle: { paddingBottom: 25, paddingTop: 5, height: 70, display: tabBarVisible ? 'flex' : 'none' },\n        tabBarAllowFontScaling: true,\n        tabBarActiveTintColor: Colors.light.tabIconSelected,\n        tabBarInactiveTintColor: Colors.light.btnBackground,\n      }}>\n        <Tab.Screen name=\"Expenses\" component={ExpensesScreen} options={{ tabBarIcon: ({ color }) => <Ionicons name=\"pricetags\" size={24} color={color} />, }} />\n        <Tab.Screen name=\"Budget\" component={BudgetScreen} options={{ tabBarIcon: ({ color }) => <Ionicons name=\"wallet\" size={24} color={color} /> }} />\n        <Tab.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false, tabBarIcon: ({ color }) => <Ionicons name=\"home\" size={24} color={color} /> }} />\n        <Tab.Screen name=\"Reports\" component={ReportsScreen} options={{ tabBarIcon: ({ color }) => <Ionicons name=\"pie-chart\" size={24} color={color} /> }} />\n        <Tab.Screen name=\"Settings\" component={SettingsScreen} options={{ tabBarIcon: ({ color }) => <Ionicons name=\"settings-sharp\" size={24} color={color} /> }} />\n      </Tab.Group>\n    </Tab.Navigator>\n  );\n}\n\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n*/\n/**\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"SignIn\"\n        component={SignInScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Sign In',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          // headerRight: () => (\n          //   <Pressable\n          //     onPress={() => navigation.navigate('')}\n          //     style={({ pressed }) => ({\n          //       opacity: pressed ? 0.5 : 1,\n          //     })}>\n          //     <FontAwesome\n          //       name=\"info-circle\"\n          //       size={25}\n          //       color={Colors[colorScheme].text}\n          //       style={{ marginRight: 15 }}\n          //     />\n          //   </Pressable>\n          // ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"SignUp\"\n        component={SignUpScreen}\n        options={{\n          title: 'Sign Up',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n*/\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\n/**\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n*/\n","import { ActivityIndicator, AppRegistry, Platform, StyleSheet } from 'react-native';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { LogBox } from 'react-native';\n\nLogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message\nLogBox.ignoreAllLogs();//Ignore all log notifications\n\n// Initialize Apollo Client\nconst client = new ApolloClient({\n  uri: 'https://backend.ps4.bornais.ca/graphql',\n  // uri: 'http://localhost:9090/graphql',\n  cache: new InMemoryCache()\n});\n\nAppRegistry.registerComponent('MyApplication', () => App);\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return (<ActivityIndicator size='large' style={styles.load} />);\n  } else {\n    return (\n      <ApolloProvider client={client}>\n        <SafeAreaProvider>\n          <StatusBar backgroundColor='black' style={Platform.OS === 'android' ? 'light' : 'dark'} />\n          <Navigation colorScheme={colorScheme} />\n        </SafeAreaProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  load: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n});","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return 'light'; // forever light theme\n  // return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/pigeon.4ad43613.png\";","var map = {\n\t\"./af\": 447,\n\t\"./af.js\": 447,\n\t\"./ar\": 448,\n\t\"./ar-dz\": 449,\n\t\"./ar-dz.js\": 449,\n\t\"./ar-kw\": 450,\n\t\"./ar-kw.js\": 450,\n\t\"./ar-ly\": 451,\n\t\"./ar-ly.js\": 451,\n\t\"./ar-ma\": 452,\n\t\"./ar-ma.js\": 452,\n\t\"./ar-sa\": 453,\n\t\"./ar-sa.js\": 453,\n\t\"./ar-tn\": 454,\n\t\"./ar-tn.js\": 454,\n\t\"./ar.js\": 448,\n\t\"./az\": 455,\n\t\"./az.js\": 455,\n\t\"./be\": 456,\n\t\"./be.js\": 456,\n\t\"./bg\": 457,\n\t\"./bg.js\": 457,\n\t\"./bm\": 458,\n\t\"./bm.js\": 458,\n\t\"./bn\": 459,\n\t\"./bn-bd\": 460,\n\t\"./bn-bd.js\": 460,\n\t\"./bn.js\": 459,\n\t\"./bo\": 461,\n\t\"./bo.js\": 461,\n\t\"./br\": 462,\n\t\"./br.js\": 462,\n\t\"./bs\": 463,\n\t\"./bs.js\": 463,\n\t\"./ca\": 464,\n\t\"./ca.js\": 464,\n\t\"./cs\": 465,\n\t\"./cs.js\": 465,\n\t\"./cv\": 466,\n\t\"./cv.js\": 466,\n\t\"./cy\": 467,\n\t\"./cy.js\": 467,\n\t\"./da\": 468,\n\t\"./da.js\": 468,\n\t\"./de\": 469,\n\t\"./de-at\": 470,\n\t\"./de-at.js\": 470,\n\t\"./de-ch\": 471,\n\t\"./de-ch.js\": 471,\n\t\"./de.js\": 469,\n\t\"./dv\": 472,\n\t\"./dv.js\": 472,\n\t\"./el\": 473,\n\t\"./el.js\": 473,\n\t\"./en-au\": 474,\n\t\"./en-au.js\": 474,\n\t\"./en-ca\": 475,\n\t\"./en-ca.js\": 475,\n\t\"./en-gb\": 476,\n\t\"./en-gb.js\": 476,\n\t\"./en-ie\": 477,\n\t\"./en-ie.js\": 477,\n\t\"./en-il\": 478,\n\t\"./en-il.js\": 478,\n\t\"./en-in\": 479,\n\t\"./en-in.js\": 479,\n\t\"./en-nz\": 480,\n\t\"./en-nz.js\": 480,\n\t\"./en-sg\": 481,\n\t\"./en-sg.js\": 481,\n\t\"./eo\": 482,\n\t\"./eo.js\": 482,\n\t\"./es\": 483,\n\t\"./es-do\": 484,\n\t\"./es-do.js\": 484,\n\t\"./es-mx\": 485,\n\t\"./es-mx.js\": 485,\n\t\"./es-us\": 486,\n\t\"./es-us.js\": 486,\n\t\"./es.js\": 483,\n\t\"./et\": 487,\n\t\"./et.js\": 487,\n\t\"./eu\": 488,\n\t\"./eu.js\": 488,\n\t\"./fa\": 489,\n\t\"./fa.js\": 489,\n\t\"./fi\": 490,\n\t\"./fi.js\": 490,\n\t\"./fil\": 491,\n\t\"./fil.js\": 491,\n\t\"./fo\": 492,\n\t\"./fo.js\": 492,\n\t\"./fr\": 493,\n\t\"./fr-ca\": 494,\n\t\"./fr-ca.js\": 494,\n\t\"./fr-ch\": 495,\n\t\"./fr-ch.js\": 495,\n\t\"./fr.js\": 493,\n\t\"./fy\": 496,\n\t\"./fy.js\": 496,\n\t\"./ga\": 497,\n\t\"./ga.js\": 497,\n\t\"./gd\": 498,\n\t\"./gd.js\": 498,\n\t\"./gl\": 499,\n\t\"./gl.js\": 499,\n\t\"./gom-deva\": 500,\n\t\"./gom-deva.js\": 500,\n\t\"./gom-latn\": 501,\n\t\"./gom-latn.js\": 501,\n\t\"./gu\": 502,\n\t\"./gu.js\": 502,\n\t\"./he\": 503,\n\t\"./he.js\": 503,\n\t\"./hi\": 504,\n\t\"./hi.js\": 504,\n\t\"./hr\": 505,\n\t\"./hr.js\": 505,\n\t\"./hu\": 506,\n\t\"./hu.js\": 506,\n\t\"./hy-am\": 507,\n\t\"./hy-am.js\": 507,\n\t\"./id\": 508,\n\t\"./id.js\": 508,\n\t\"./is\": 509,\n\t\"./is.js\": 509,\n\t\"./it\": 510,\n\t\"./it-ch\": 511,\n\t\"./it-ch.js\": 511,\n\t\"./it.js\": 510,\n\t\"./ja\": 512,\n\t\"./ja.js\": 512,\n\t\"./jv\": 513,\n\t\"./jv.js\": 513,\n\t\"./ka\": 514,\n\t\"./ka.js\": 514,\n\t\"./kk\": 515,\n\t\"./kk.js\": 515,\n\t\"./km\": 516,\n\t\"./km.js\": 516,\n\t\"./kn\": 517,\n\t\"./kn.js\": 517,\n\t\"./ko\": 518,\n\t\"./ko.js\": 518,\n\t\"./ku\": 519,\n\t\"./ku.js\": 519,\n\t\"./ky\": 520,\n\t\"./ky.js\": 520,\n\t\"./lb\": 521,\n\t\"./lb.js\": 521,\n\t\"./lo\": 522,\n\t\"./lo.js\": 522,\n\t\"./lt\": 523,\n\t\"./lt.js\": 523,\n\t\"./lv\": 524,\n\t\"./lv.js\": 524,\n\t\"./me\": 525,\n\t\"./me.js\": 525,\n\t\"./mi\": 526,\n\t\"./mi.js\": 526,\n\t\"./mk\": 527,\n\t\"./mk.js\": 527,\n\t\"./ml\": 528,\n\t\"./ml.js\": 528,\n\t\"./mn\": 529,\n\t\"./mn.js\": 529,\n\t\"./mr\": 530,\n\t\"./mr.js\": 530,\n\t\"./ms\": 531,\n\t\"./ms-my\": 532,\n\t\"./ms-my.js\": 532,\n\t\"./ms.js\": 531,\n\t\"./mt\": 533,\n\t\"./mt.js\": 533,\n\t\"./my\": 534,\n\t\"./my.js\": 534,\n\t\"./nb\": 535,\n\t\"./nb.js\": 535,\n\t\"./ne\": 536,\n\t\"./ne.js\": 536,\n\t\"./nl\": 537,\n\t\"./nl-be\": 538,\n\t\"./nl-be.js\": 538,\n\t\"./nl.js\": 537,\n\t\"./nn\": 539,\n\t\"./nn.js\": 539,\n\t\"./oc-lnc\": 540,\n\t\"./oc-lnc.js\": 540,\n\t\"./pa-in\": 541,\n\t\"./pa-in.js\": 541,\n\t\"./pl\": 542,\n\t\"./pl.js\": 542,\n\t\"./pt\": 543,\n\t\"./pt-br\": 544,\n\t\"./pt-br.js\": 544,\n\t\"./pt.js\": 543,\n\t\"./ro\": 545,\n\t\"./ro.js\": 545,\n\t\"./ru\": 546,\n\t\"./ru.js\": 546,\n\t\"./sd\": 547,\n\t\"./sd.js\": 547,\n\t\"./se\": 548,\n\t\"./se.js\": 548,\n\t\"./si\": 549,\n\t\"./si.js\": 549,\n\t\"./sk\": 550,\n\t\"./sk.js\": 550,\n\t\"./sl\": 551,\n\t\"./sl.js\": 551,\n\t\"./sq\": 552,\n\t\"./sq.js\": 552,\n\t\"./sr\": 553,\n\t\"./sr-cyrl\": 554,\n\t\"./sr-cyrl.js\": 554,\n\t\"./sr.js\": 553,\n\t\"./ss\": 555,\n\t\"./ss.js\": 555,\n\t\"./sv\": 556,\n\t\"./sv.js\": 556,\n\t\"./sw\": 557,\n\t\"./sw.js\": 557,\n\t\"./ta\": 558,\n\t\"./ta.js\": 558,\n\t\"./te\": 559,\n\t\"./te.js\": 559,\n\t\"./tet\": 560,\n\t\"./tet.js\": 560,\n\t\"./tg\": 561,\n\t\"./tg.js\": 561,\n\t\"./th\": 562,\n\t\"./th.js\": 562,\n\t\"./tk\": 563,\n\t\"./tk.js\": 563,\n\t\"./tl-ph\": 564,\n\t\"./tl-ph.js\": 564,\n\t\"./tlh\": 565,\n\t\"./tlh.js\": 565,\n\t\"./tr\": 566,\n\t\"./tr.js\": 566,\n\t\"./tzl\": 567,\n\t\"./tzl.js\": 567,\n\t\"./tzm\": 568,\n\t\"./tzm-latn\": 569,\n\t\"./tzm-latn.js\": 569,\n\t\"./tzm.js\": 568,\n\t\"./ug-cn\": 570,\n\t\"./ug-cn.js\": 570,\n\t\"./uk\": 571,\n\t\"./uk.js\": 571,\n\t\"./ur\": 572,\n\t\"./ur.js\": 572,\n\t\"./uz\": 573,\n\t\"./uz-latn\": 574,\n\t\"./uz-latn.js\": 574,\n\t\"./uz.js\": 573,\n\t\"./vi\": 575,\n\t\"./vi.js\": 575,\n\t\"./x-pseudo\": 576,\n\t\"./x-pseudo.js\": 576,\n\t\"./yo\": 577,\n\t\"./yo.js\": 577,\n\t\"./zh-cn\": 578,\n\t\"./zh-cn.js\": 578,\n\t\"./zh-hk\": 579,\n\t\"./zh-hk.js\": 579,\n\t\"./zh-mo\": 580,\n\t\"./zh-mo.js\": 580,\n\t\"./zh-tw\": 581,\n\t\"./zh-tw.js\": 581\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 964;"],"sourceRoot":""}